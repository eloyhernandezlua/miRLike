Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    NOT
    STR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     varss -> VARS vars
Rule 4     varss -> empty
Rule 5     vars -> tipo DOSPNTS insertVar varsppp varspp vars
Rule 6     vars -> empty
Rule 7     insertVar -> ID
Rule 8     varsppp -> ACOR CTEI CCOR
Rule 9     varsppp -> empty
Rule 10    varspp -> PTCOMA
Rule 11    varspp -> COMA insertVar varsppp varspp
Rule 12    funcs -> FUNCTION funcsp insertFunc funcspp
Rule 13    funcs -> empty
Rule 14    insertFunc -> ID
Rule 15    funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
Rule 16    funcsp -> VOID
Rule 17    funcsp -> tipo
Rule 18    estatutos -> asig estatutop
Rule 19    estatutos -> llamada estatutop
Rule 20    estatutos -> return estatutop
Rule 21    estatutos -> lectura estatutop
Rule 22    estatutos -> escritura estatutop
Rule 23    estatutos -> cond estatutop
Rule 24    estatutos -> while estatutop
Rule 25    estatutos -> for estatutop
Rule 26    estatutos -> exp estatutop
Rule 27    estatutop -> estatutos
Rule 28    estatutop -> empty
Rule 29    tipo -> INT
Rule 30    tipo -> FLOAT
Rule 31    tipo -> CHAR
Rule 32    params -> tipo DOSPNTS insertParams ididx paramsp
Rule 33    params -> empty
Rule 34    insertParams -> ID
Rule 35    paramsp -> COMA params
Rule 36    paramsp -> empty
Rule 37    asig -> varAs ididx igualAs asigpp PTCOMA
Rule 38    varAs -> ID
Rule 39    igualAs -> IGUAL
Rule 40    asigp -> exp asigppp
Rule 41    asigp -> CTEC asigppp
Rule 42    asigp -> empty
Rule 43    asigppp -> COMA asigp
Rule 44    asigppp -> empty
Rule 45    asigpp -> exp
Rule 46    asigpp -> CTEC
Rule 47    asigpp -> ACOR asigp CCOR
Rule 48    ididx -> ACOR exp CCOR
Rule 49    ididx -> empty
Rule 50    llamada -> ID APAR args CPAR PTCOMA
Rule 51    args -> ctes argsp
Rule 52    args -> exp argsp
Rule 53    args -> CTEC argsp
Rule 54    argsp -> COMA args
Rule 55    argsp -> empty
Rule 56    return -> RETURN APAR exp CPAR PTCOMA
Rule 57    lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA
Rule 58    readId -> ID
Rule 59    lecturapp -> COMA readId ididx lecturapp
Rule 60    lecturapp -> empty
Rule 61    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 62    escriturap -> pushEsc
Rule 63    escriturap -> exp
Rule 64    pushEsc -> STRING
Rule 65    pushEsc -> CTEC
Rule 66    escriturapp -> COMA escriturap
Rule 67    escriturapp -> empty
Rule 68    cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
Rule 69    condp -> exp
Rule 70    condp -> TRUE
Rule 71    condp -> FALSE
Rule 72    condpp -> checkElse ALLA estatutos CLLA
Rule 73    condpp -> empty
Rule 74    checkElse -> ELSE
Rule 75    checkCond -> CPAR
Rule 76    while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
Rule 77    saveWhile -> WHILE
Rule 78    checkWhileCond -> CPAR
Rule 79    for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
Rule 80    exp -> texp expp
Rule 81    expp -> OR exp
Rule 82    expp -> empty
Rule 83    texp -> gexp texpp
Rule 84    texpp -> AND texp
Rule 85    texpp -> empty
Rule 86    gexp -> mexp gexpp
Rule 87    gexpp -> MAYQ mexp
Rule 88    gexpp -> MENQ mexp
Rule 89    gexpp -> MAYI mexp
Rule 90    gexpp -> MENI mexp
Rule 91    gexpp -> IGUALIGUAL mexp
Rule 92    gexpp -> DIF mexp
Rule 93    gexpp -> empty
Rule 94    mexp -> termino mexpp
Rule 95    mexpp -> operSR mexp
Rule 96    mexpp -> empty
Rule 97    operSR -> MENOS
Rule 98    operSR -> MAS
Rule 99    termino -> factor terminop
Rule 100   terminop -> oper termino
Rule 101   terminop -> empty
Rule 102   oper -> DIV
Rule 103   oper -> POR
Rule 104   factor -> APAR exp CPAR
Rule 105   factor -> ID factorp
Rule 106   factor -> ctes
Rule 107   factorp -> APAR exp factorpp CPAR
Rule 108   factorp -> ACOR exp CCOR
Rule 109   factorp -> empty
Rule 110   factorpp -> COMA exp factorpp
Rule 111   factorpp -> empty
Rule 112   ctes -> ID factorp
Rule 113   ctes -> CTEI
Rule 114   ctes -> CTEF
Rule 115   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 8 47 48 108
ALLA                 : 1 15 68 72 76 79
AND                  : 84
APAR                 : 1 15 50 56 57 61 68 76 104 107
BOOL                 : 
CCOR                 : 8 47 48 108
CHAR                 : 31
CLLA                 : 1 15 68 72 76 79
COMA                 : 11 35 43 54 59 66 110
CPAR                 : 1 15 50 56 57 61 75 78 104 107
CTEC                 : 41 46 53 65
CTEF                 : 114
CTEI                 : 8 113
DIF                  : 92
DIV                  : 102
DO                   : 76 79
DOSPNTS              : 5 32
ELSE                 : 74
FALSE                : 71
FLOAT                : 30
FOR                  : 79
FUNCTION             : 12
ID                   : 2 7 14 34 38 50 58 79 105 112
IF                   : 68
IGUAL                : 39 79
IGUALIGUAL           : 91
INT                  : 29
MAIN                 : 1
MAS                  : 98
MAYI                 : 89
MAYQ                 : 87
MENI                 : 90
MENOS                : 97
MENQ                 : 88
NOT                  : 
OR                   : 81
POR                  : 103
PROGRAM              : 1
PTCOMA               : 2 10 15 37 50 56 57 61
READ                 : 57
RETURN               : 56
STR                  : 
STRING               : 64
THEN                 : 68
TO                   : 79
TRUE                 : 70
VARS                 : 3
VOID                 : 16
WHILE                : 77
WRITE                : 61
error                : 

Nonterminals, with rules where they appear

agregarTablaFunciones : 1
args                 : 50 54
argsp                : 51 52 53
asig                 : 18
asigp                : 43 47
asigpp               : 37
asigppp              : 40 41
checkCond            : 68
checkElse            : 72
checkWhileCond       : 76
cond                 : 23
condp                : 68 76
condpp               : 68
ctes                 : 51 106
empty                : 4 6 9 13 28 33 36 42 44 49 55 60 67 73 82 85 93 96 101 109 111
escritura            : 22
escriturap           : 61 66
escriturapp          : 61
estatutop            : 18 19 20 21 22 23 24 25 26
estatutos            : 1 15 27 68 72 76 79
exp                  : 26 40 45 48 52 56 63 69 79 79 81 104 107 108 110
expp                 : 80
factor               : 99
factorp              : 105 112
factorpp             : 107 110
for                  : 25
funcs                : 1 15
funcsp               : 12
funcspp              : 12
gexp                 : 83
gexpp                : 86
ididx                : 32 37 57 59 79
igualAs              : 37
insertFunc           : 12
insertParams         : 32
insertVar            : 5 11
lectura              : 21
lecturapp            : 57 59
llamada              : 19
mexp                 : 86 87 88 89 90 91 92 95
mexpp                : 94
oper                 : 100
operSR               : 95
params               : 15 35
paramsp              : 32
program              : 0
pushEsc              : 62
readId               : 57 59
return               : 20
saveWhile            : 76
termino              : 94 100
terminop             : 99
texp                 : 80 84
texpp                : 83
tipo                 : 5 17 32
varAs                : 37
vars                 : 3 5
varspp               : 5 11
varsppp              : 5 11
varss                : 1 15
while                : 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (3) varss -> . VARS vars
    (4) varss -> . empty
    (115) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 115 (empty -> .)
    MAIN            reduce using rule 115 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA estatutos CLLA
    (12) funcs -> . FUNCTION funcsp insertFunc funcspp
    (13) funcs -> . empty
    (115) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 115 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (3) varss -> VARS . vars
    (5) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (6) vars -> . empty
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (115) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 115 (empty -> .)
    MAIN            reduce using rule 115 (empty -> .)
    ALLA            reduce using rule 115 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (4) varss -> empty .

    FUNCTION        reduce using rule 4 (varss -> empty .)
    MAIN            reduce using rule 4 (varss -> empty .)
    ALLA            reduce using rule 4 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (12) funcs -> FUNCTION . funcsp insertFunc funcspp
    (16) funcsp -> . VOID
    (17) funcsp -> . tipo
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (13) funcs -> empty .

    MAIN            reduce using rule 13 (funcs -> empty .)


state 12

    (3) varss -> VARS vars .

    FUNCTION        reduce using rule 3 (varss -> VARS vars .)
    MAIN            reduce using rule 3 (varss -> VARS vars .)
    ALLA            reduce using rule 3 (varss -> VARS vars .)


state 13

    (5) vars -> tipo . DOSPNTS insertVar varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    ALLA            reduce using rule 6 (vars -> empty .)


state 15

    (29) tipo -> INT .

    DOSPNTS         reduce using rule 29 (tipo -> INT .)
    ID              reduce using rule 29 (tipo -> INT .)


state 16

    (30) tipo -> FLOAT .

    DOSPNTS         reduce using rule 30 (tipo -> FLOAT .)
    ID              reduce using rule 30 (tipo -> FLOAT .)


state 17

    (31) tipo -> CHAR .

    DOSPNTS         reduce using rule 31 (tipo -> CHAR .)
    ID              reduce using rule 31 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA estatutos CLLA

    APAR            shift and go to state 23


state 19

    (12) funcs -> FUNCTION funcsp . insertFunc funcspp
    (14) insertFunc -> . ID

    ID              shift and go to state 25

    insertFunc                     shift and go to state 24

state 20

    (16) funcsp -> VOID .

    ID              reduce using rule 16 (funcsp -> VOID .)


state 21

    (17) funcsp -> tipo .

    ID              reduce using rule 17 (funcsp -> tipo .)


state 22

    (5) vars -> tipo DOSPNTS . insertVar varsppp varspp vars
    (7) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 26

state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA estatutos CLLA

    CPAR            shift and go to state 28


state 24

    (12) funcs -> FUNCTION funcsp insertFunc . funcspp
    (15) funcspp -> . APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 25

    (14) insertFunc -> ID .

    APAR            reduce using rule 14 (insertFunc -> ID .)


state 26

    (5) vars -> tipo DOSPNTS insertVar . varsppp varspp vars
    (8) varsppp -> . ACOR CTEI CCOR
    (9) varsppp -> . empty
    (115) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)

    varsppp                        shift and go to state 31
    empty                          shift and go to state 33

state 27

    (7) insertVar -> ID .

    ACOR            reduce using rule 7 (insertVar -> ID .)
    PTCOMA          reduce using rule 7 (insertVar -> ID .)
    COMA            reduce using rule 7 (insertVar -> ID .)


state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA estatutos CLLA

    ALLA            shift and go to state 34


state 29

    (12) funcs -> FUNCTION funcsp insertFunc funcspp .

    MAIN            reduce using rule 12 (funcs -> FUNCTION funcsp insertFunc funcspp .)


state 30

    (15) funcspp -> APAR . params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (32) params -> . tipo DOSPNTS insertParams ididx paramsp
    (33) params -> . empty
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (115) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 115 (empty -> .)

    params                         shift and go to state 35
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 31

    (5) vars -> tipo DOSPNTS insertVar varsppp . varspp vars
    (10) varspp -> . PTCOMA
    (11) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 38

state 32

    (8) varsppp -> ACOR . CTEI CCOR

    CTEI            shift and go to state 41


state 33

    (9) varsppp -> empty .

    PTCOMA          reduce using rule 9 (varsppp -> empty .)
    COMA            reduce using rule 9 (varsppp -> empty .)


state 34

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . estatutos CLLA
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    estatutos                      shift and go to state 43
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 35

    (15) funcspp -> APAR params . CPAR PTCOMA varss ALLA estatutos CLLA funcs

    CPAR            shift and go to state 70


state 36

    (32) params -> tipo . DOSPNTS insertParams ididx paramsp

    DOSPNTS         shift and go to state 71


state 37

    (33) params -> empty .

    CPAR            reduce using rule 33 (params -> empty .)


state 38

    (5) vars -> tipo DOSPNTS insertVar varsppp varspp . vars
    (5) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (6) vars -> . empty
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (115) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 115 (empty -> .)
    MAIN            reduce using rule 115 (empty -> .)
    ALLA            reduce using rule 115 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 72
    empty                          shift and go to state 14

state 39

    (10) varspp -> PTCOMA .

    INT             reduce using rule 10 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 10 (varspp -> PTCOMA .)
    CHAR            reduce using rule 10 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 10 (varspp -> PTCOMA .)
    MAIN            reduce using rule 10 (varspp -> PTCOMA .)
    ALLA            reduce using rule 10 (varspp -> PTCOMA .)


state 40

    (11) varspp -> COMA . insertVar varsppp varspp
    (7) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 73

state 41

    (8) varsppp -> ACOR CTEI . CCOR

    CCOR            shift and go to state 74


state 42

    (104) factor -> APAR . exp CPAR
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 75
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 43

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos . CLLA

    CLLA            shift and go to state 77


state 44

    (18) estatutos -> asig . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    asig                           shift and go to state 44
    estatutop                      shift and go to state 78
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 45

    (19) estatutos -> llamada . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    llamada                        shift and go to state 45
    estatutop                      shift and go to state 81
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 46

    (20) estatutos -> return . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    return                         shift and go to state 46
    estatutop                      shift and go to state 82
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 47

    (21) estatutos -> lectura . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    lectura                        shift and go to state 47
    estatutop                      shift and go to state 83
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 48

    (22) estatutos -> escritura . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    escritura                      shift and go to state 48
    estatutop                      shift and go to state 84
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 49

    (23) estatutos -> cond . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    cond                           shift and go to state 49
    estatutop                      shift and go to state 85
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 50

    (24) estatutos -> while . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    while                          shift and go to state 50
    estatutop                      shift and go to state 86
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 51

    (25) estatutos -> for . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    for                            shift and go to state 51
    estatutop                      shift and go to state 87
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 52

    (26) estatutos -> exp . estatutop
    (27) estatutop -> . estatutos
    (28) estatutop -> . empty
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (115) empty -> .
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CLLA            reduce using rule 115 (empty -> .)
    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 52
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 53

    (37) asig -> varAs . ididx igualAs asigpp PTCOMA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (115) empty -> .

    ACOR            shift and go to state 90
    IGUAL           reduce using rule 115 (empty -> .)

    ididx                          shift and go to state 89
    empty                          shift and go to state 91

state 54

    (50) llamada -> ID . APAR args CPAR PTCOMA
    (38) varAs -> ID .
    (105) factor -> ID . factorp
    (112) ctes -> ID . factorp
    (107) factorp -> . APAR exp factorpp CPAR
    (108) factorp -> . ACOR exp CCOR
    (109) factorp -> . empty
    (115) empty -> .

  ! shift/reduce conflict for ACOR resolved as shift
  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 92
    IGUAL           reduce using rule 38 (varAs -> ID .)
    ACOR            shift and go to state 94
    DIV             reduce using rule 115 (empty -> .)
    POR             reduce using rule 115 (empty -> .)
    MENOS           reduce using rule 115 (empty -> .)
    MAS             reduce using rule 115 (empty -> .)
    MAYQ            reduce using rule 115 (empty -> .)
    MENQ            reduce using rule 115 (empty -> .)
    MAYI            reduce using rule 115 (empty -> .)
    MENI            reduce using rule 115 (empty -> .)
    IGUALIGUAL      reduce using rule 115 (empty -> .)
    DIF             reduce using rule 115 (empty -> .)
    AND             reduce using rule 115 (empty -> .)
    OR              reduce using rule 115 (empty -> .)
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)

  ! ACOR            [ reduce using rule 38 (varAs -> ID .) ]
  ! APAR            [ reduce using rule 115 (empty -> .) ]

    factorp                        shift and go to state 93
    empty                          shift and go to state 95

state 55

    (56) return -> RETURN . APAR exp CPAR PTCOMA

    APAR            shift and go to state 96


state 56

    (57) lectura -> READ . APAR readId ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 97


state 57

    (61) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 98


state 58

    (68) cond -> IF . APAR condp checkCond THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 99


state 59

    (76) while -> saveWhile . APAR condp checkWhileCond DO ALLA estatutos CLLA

    APAR            shift and go to state 100


state 60

    (79) for -> FOR . ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA

    ID              shift and go to state 101


state 61

    (80) exp -> texp . expp
    (81) expp -> . OR exp
    (82) expp -> . empty
    (115) empty -> .

    OR              shift and go to state 103
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    APAR            reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    CCOR            reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)
    PTCOMA          reduce using rule 115 (empty -> .)
    TO              reduce using rule 115 (empty -> .)
    DO              reduce using rule 115 (empty -> .)

    expp                           shift and go to state 102
    empty                          shift and go to state 104

state 62

    (77) saveWhile -> WHILE .

    APAR            reduce using rule 77 (saveWhile -> WHILE .)


state 63

    (83) texp -> gexp . texpp
    (84) texpp -> . AND texp
    (85) texpp -> . empty
    (115) empty -> .

    AND             shift and go to state 106
    OR              reduce using rule 115 (empty -> .)
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    APAR            reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    CCOR            reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)
    PTCOMA          reduce using rule 115 (empty -> .)
    TO              reduce using rule 115 (empty -> .)
    DO              reduce using rule 115 (empty -> .)

    texpp                          shift and go to state 105
    empty                          shift and go to state 107

state 64

    (86) gexp -> mexp . gexpp
    (87) gexpp -> . MAYQ mexp
    (88) gexpp -> . MENQ mexp
    (89) gexpp -> . MAYI mexp
    (90) gexpp -> . MENI mexp
    (91) gexpp -> . IGUALIGUAL mexp
    (92) gexpp -> . DIF mexp
    (93) gexpp -> . empty
    (115) empty -> .

    MAYQ            shift and go to state 109
    MENQ            shift and go to state 110
    MAYI            shift and go to state 111
    MENI            shift and go to state 112
    IGUALIGUAL      shift and go to state 113
    DIF             shift and go to state 114
    AND             reduce using rule 115 (empty -> .)
    OR              reduce using rule 115 (empty -> .)
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    APAR            reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    CCOR            reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)
    PTCOMA          reduce using rule 115 (empty -> .)
    TO              reduce using rule 115 (empty -> .)
    DO              reduce using rule 115 (empty -> .)

    gexpp                          shift and go to state 108
    empty                          shift and go to state 115

state 65

    (94) mexp -> termino . mexpp
    (95) mexpp -> . operSR mexp
    (96) mexpp -> . empty
    (97) operSR -> . MENOS
    (98) operSR -> . MAS
    (115) empty -> .

    MENOS           shift and go to state 119
    MAS             shift and go to state 120
    MAYQ            reduce using rule 115 (empty -> .)
    MENQ            reduce using rule 115 (empty -> .)
    MAYI            reduce using rule 115 (empty -> .)
    MENI            reduce using rule 115 (empty -> .)
    IGUALIGUAL      reduce using rule 115 (empty -> .)
    DIF             reduce using rule 115 (empty -> .)
    AND             reduce using rule 115 (empty -> .)
    OR              reduce using rule 115 (empty -> .)
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    APAR            reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    CCOR            reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)
    PTCOMA          reduce using rule 115 (empty -> .)
    TO              reduce using rule 115 (empty -> .)
    DO              reduce using rule 115 (empty -> .)

    mexpp                          shift and go to state 116
    operSR                         shift and go to state 117
    empty                          shift and go to state 118

state 66

    (99) termino -> factor . terminop
    (100) terminop -> . oper termino
    (101) terminop -> . empty
    (102) oper -> . DIV
    (103) oper -> . POR
    (115) empty -> .

    DIV             shift and go to state 124
    POR             shift and go to state 125
    MENOS           reduce using rule 115 (empty -> .)
    MAS             reduce using rule 115 (empty -> .)
    MAYQ            reduce using rule 115 (empty -> .)
    MENQ            reduce using rule 115 (empty -> .)
    MAYI            reduce using rule 115 (empty -> .)
    MENI            reduce using rule 115 (empty -> .)
    IGUALIGUAL      reduce using rule 115 (empty -> .)
    DIF             reduce using rule 115 (empty -> .)
    AND             reduce using rule 115 (empty -> .)
    OR              reduce using rule 115 (empty -> .)
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    APAR            reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    CCOR            reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)
    PTCOMA          reduce using rule 115 (empty -> .)
    TO              reduce using rule 115 (empty -> .)
    DO              reduce using rule 115 (empty -> .)

    terminop                       shift and go to state 121
    oper                           shift and go to state 122
    empty                          shift and go to state 123

state 67

    (106) factor -> ctes .

    DIV             reduce using rule 106 (factor -> ctes .)
    POR             reduce using rule 106 (factor -> ctes .)
    MENOS           reduce using rule 106 (factor -> ctes .)
    MAS             reduce using rule 106 (factor -> ctes .)
    MAYQ            reduce using rule 106 (factor -> ctes .)
    MENQ            reduce using rule 106 (factor -> ctes .)
    MAYI            reduce using rule 106 (factor -> ctes .)
    MENI            reduce using rule 106 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 106 (factor -> ctes .)
    DIF             reduce using rule 106 (factor -> ctes .)
    AND             reduce using rule 106 (factor -> ctes .)
    OR              reduce using rule 106 (factor -> ctes .)
    ID              reduce using rule 106 (factor -> ctes .)
    RETURN          reduce using rule 106 (factor -> ctes .)
    READ            reduce using rule 106 (factor -> ctes .)
    WRITE           reduce using rule 106 (factor -> ctes .)
    IF              reduce using rule 106 (factor -> ctes .)
    FOR             reduce using rule 106 (factor -> ctes .)
    WHILE           reduce using rule 106 (factor -> ctes .)
    APAR            reduce using rule 106 (factor -> ctes .)
    CTEI            reduce using rule 106 (factor -> ctes .)
    CTEF            reduce using rule 106 (factor -> ctes .)
    CLLA            reduce using rule 106 (factor -> ctes .)
    CPAR            reduce using rule 106 (factor -> ctes .)
    CCOR            reduce using rule 106 (factor -> ctes .)
    COMA            reduce using rule 106 (factor -> ctes .)
    PTCOMA          reduce using rule 106 (factor -> ctes .)
    TO              reduce using rule 106 (factor -> ctes .)
    DO              reduce using rule 106 (factor -> ctes .)


state 68

    (113) ctes -> CTEI .

    DIV             reduce using rule 113 (ctes -> CTEI .)
    POR             reduce using rule 113 (ctes -> CTEI .)
    MENOS           reduce using rule 113 (ctes -> CTEI .)
    MAS             reduce using rule 113 (ctes -> CTEI .)
    MAYQ            reduce using rule 113 (ctes -> CTEI .)
    MENQ            reduce using rule 113 (ctes -> CTEI .)
    MAYI            reduce using rule 113 (ctes -> CTEI .)
    MENI            reduce using rule 113 (ctes -> CTEI .)
    IGUALIGUAL      reduce using rule 113 (ctes -> CTEI .)
    DIF             reduce using rule 113 (ctes -> CTEI .)
    AND             reduce using rule 113 (ctes -> CTEI .)
    OR              reduce using rule 113 (ctes -> CTEI .)
    ID              reduce using rule 113 (ctes -> CTEI .)
    RETURN          reduce using rule 113 (ctes -> CTEI .)
    READ            reduce using rule 113 (ctes -> CTEI .)
    WRITE           reduce using rule 113 (ctes -> CTEI .)
    IF              reduce using rule 113 (ctes -> CTEI .)
    FOR             reduce using rule 113 (ctes -> CTEI .)
    WHILE           reduce using rule 113 (ctes -> CTEI .)
    APAR            reduce using rule 113 (ctes -> CTEI .)
    CTEI            reduce using rule 113 (ctes -> CTEI .)
    CTEF            reduce using rule 113 (ctes -> CTEI .)
    CLLA            reduce using rule 113 (ctes -> CTEI .)
    CPAR            reduce using rule 113 (ctes -> CTEI .)
    CCOR            reduce using rule 113 (ctes -> CTEI .)
    COMA            reduce using rule 113 (ctes -> CTEI .)
    PTCOMA          reduce using rule 113 (ctes -> CTEI .)
    TO              reduce using rule 113 (ctes -> CTEI .)
    DO              reduce using rule 113 (ctes -> CTEI .)


state 69

    (114) ctes -> CTEF .

    DIV             reduce using rule 114 (ctes -> CTEF .)
    POR             reduce using rule 114 (ctes -> CTEF .)
    MENOS           reduce using rule 114 (ctes -> CTEF .)
    MAS             reduce using rule 114 (ctes -> CTEF .)
    MAYQ            reduce using rule 114 (ctes -> CTEF .)
    MENQ            reduce using rule 114 (ctes -> CTEF .)
    MAYI            reduce using rule 114 (ctes -> CTEF .)
    MENI            reduce using rule 114 (ctes -> CTEF .)
    IGUALIGUAL      reduce using rule 114 (ctes -> CTEF .)
    DIF             reduce using rule 114 (ctes -> CTEF .)
    AND             reduce using rule 114 (ctes -> CTEF .)
    OR              reduce using rule 114 (ctes -> CTEF .)
    ID              reduce using rule 114 (ctes -> CTEF .)
    RETURN          reduce using rule 114 (ctes -> CTEF .)
    READ            reduce using rule 114 (ctes -> CTEF .)
    WRITE           reduce using rule 114 (ctes -> CTEF .)
    IF              reduce using rule 114 (ctes -> CTEF .)
    FOR             reduce using rule 114 (ctes -> CTEF .)
    WHILE           reduce using rule 114 (ctes -> CTEF .)
    APAR            reduce using rule 114 (ctes -> CTEF .)
    CTEI            reduce using rule 114 (ctes -> CTEF .)
    CTEF            reduce using rule 114 (ctes -> CTEF .)
    CLLA            reduce using rule 114 (ctes -> CTEF .)
    CPAR            reduce using rule 114 (ctes -> CTEF .)
    CCOR            reduce using rule 114 (ctes -> CTEF .)
    COMA            reduce using rule 114 (ctes -> CTEF .)
    PTCOMA          reduce using rule 114 (ctes -> CTEF .)
    TO              reduce using rule 114 (ctes -> CTEF .)
    DO              reduce using rule 114 (ctes -> CTEF .)


state 70

    (15) funcspp -> APAR params CPAR . PTCOMA varss ALLA estatutos CLLA funcs

    PTCOMA          shift and go to state 126


state 71

    (32) params -> tipo DOSPNTS . insertParams ididx paramsp
    (34) insertParams -> . ID

    ID              shift and go to state 128

    insertParams                   shift and go to state 127

state 72

    (5) vars -> tipo DOSPNTS insertVar varsppp varspp vars .

    FUNCTION        reduce using rule 5 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    MAIN            reduce using rule 5 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    ALLA            reduce using rule 5 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)


state 73

    (11) varspp -> COMA insertVar . varsppp varspp
    (8) varsppp -> . ACOR CTEI CCOR
    (9) varsppp -> . empty
    (115) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)

    varsppp                        shift and go to state 129
    empty                          shift and go to state 33

state 74

    (8) varsppp -> ACOR CTEI CCOR .

    PTCOMA          reduce using rule 8 (varsppp -> ACOR CTEI CCOR .)
    COMA            reduce using rule 8 (varsppp -> ACOR CTEI CCOR .)


state 75

    (104) factor -> APAR exp . CPAR

    CPAR            shift and go to state 130


state 76

    (105) factor -> ID . factorp
    (112) ctes -> ID . factorp
    (107) factorp -> . APAR exp factorpp CPAR
    (108) factorp -> . ACOR exp CCOR
    (109) factorp -> . empty
    (115) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 131
    ACOR            shift and go to state 94
    DIV             reduce using rule 115 (empty -> .)
    POR             reduce using rule 115 (empty -> .)
    MENOS           reduce using rule 115 (empty -> .)
    MAS             reduce using rule 115 (empty -> .)
    MAYQ            reduce using rule 115 (empty -> .)
    MENQ            reduce using rule 115 (empty -> .)
    MAYI            reduce using rule 115 (empty -> .)
    MENI            reduce using rule 115 (empty -> .)
    IGUALIGUAL      reduce using rule 115 (empty -> .)
    DIF             reduce using rule 115 (empty -> .)
    AND             reduce using rule 115 (empty -> .)
    OR              reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    CCOR            reduce using rule 115 (empty -> .)
    COMA            reduce using rule 115 (empty -> .)
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)
    PTCOMA          reduce using rule 115 (empty -> .)
    TO              reduce using rule 115 (empty -> .)
    DO              reduce using rule 115 (empty -> .)

  ! APAR            [ reduce using rule 115 (empty -> .) ]

    factorp                        shift and go to state 93
    empty                          shift and go to state 95

state 77

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA .)


state 78

    (18) estatutos -> asig estatutop .

    CLLA            reduce using rule 18 (estatutos -> asig estatutop .)


state 79

    (27) estatutop -> estatutos .

    CLLA            reduce using rule 27 (estatutop -> estatutos .)


state 80

    (28) estatutop -> empty .

    CLLA            reduce using rule 28 (estatutop -> empty .)


state 81

    (19) estatutos -> llamada estatutop .

    CLLA            reduce using rule 19 (estatutos -> llamada estatutop .)


state 82

    (20) estatutos -> return estatutop .

    CLLA            reduce using rule 20 (estatutos -> return estatutop .)


state 83

    (21) estatutos -> lectura estatutop .

    CLLA            reduce using rule 21 (estatutos -> lectura estatutop .)


state 84

    (22) estatutos -> escritura estatutop .

    CLLA            reduce using rule 22 (estatutos -> escritura estatutop .)


state 85

    (23) estatutos -> cond estatutop .

    CLLA            reduce using rule 23 (estatutos -> cond estatutop .)


state 86

    (24) estatutos -> while estatutop .

    CLLA            reduce using rule 24 (estatutos -> while estatutop .)


state 87

    (25) estatutos -> for estatutop .

    CLLA            reduce using rule 25 (estatutos -> for estatutop .)


state 88

    (26) estatutos -> exp estatutop .

    CLLA            reduce using rule 26 (estatutos -> exp estatutop .)


state 89

    (37) asig -> varAs ididx . igualAs asigpp PTCOMA
    (39) igualAs -> . IGUAL

    IGUAL           shift and go to state 133

    igualAs                        shift and go to state 132

state 90

    (48) ididx -> ACOR . exp CCOR
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 134
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 91

    (49) ididx -> empty .

    IGUAL           reduce using rule 49 (ididx -> empty .)
    COMA            reduce using rule 49 (ididx -> empty .)
    CPAR            reduce using rule 49 (ididx -> empty .)


state 92

    (50) llamada -> ID APAR . args CPAR PTCOMA
    (107) factorp -> APAR . exp factorpp CPAR
    (51) args -> . ctes argsp
    (52) args -> . exp argsp
    (53) args -> . CTEC argsp
    (80) exp -> . texp expp
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes

    CTEC            shift and go to state 139
    ID              shift and go to state 135
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69
    APAR            shift and go to state 42

    args                           shift and go to state 136
    exp                            shift and go to state 137
    ctes                           shift and go to state 138
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66

state 93

    (105) factor -> ID factorp .
    (112) ctes -> ID factorp .

  ! reduce/reduce conflict for DIV resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for POR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for ID resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for READ resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for WRITE resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for IF resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for FOR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for WHILE resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for APAR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEI resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEF resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for CLLA resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for CCOR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for TO resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for DO resolved using rule 105 (factor -> ID factorp .)
    DIV             reduce using rule 105 (factor -> ID factorp .)
    POR             reduce using rule 105 (factor -> ID factorp .)
    MENOS           reduce using rule 105 (factor -> ID factorp .)
    MAS             reduce using rule 105 (factor -> ID factorp .)
    MAYQ            reduce using rule 105 (factor -> ID factorp .)
    MENQ            reduce using rule 105 (factor -> ID factorp .)
    MAYI            reduce using rule 105 (factor -> ID factorp .)
    MENI            reduce using rule 105 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 105 (factor -> ID factorp .)
    DIF             reduce using rule 105 (factor -> ID factorp .)
    AND             reduce using rule 105 (factor -> ID factorp .)
    OR              reduce using rule 105 (factor -> ID factorp .)
    ID              reduce using rule 105 (factor -> ID factorp .)
    RETURN          reduce using rule 105 (factor -> ID factorp .)
    READ            reduce using rule 105 (factor -> ID factorp .)
    WRITE           reduce using rule 105 (factor -> ID factorp .)
    IF              reduce using rule 105 (factor -> ID factorp .)
    FOR             reduce using rule 105 (factor -> ID factorp .)
    WHILE           reduce using rule 105 (factor -> ID factorp .)
    APAR            reduce using rule 105 (factor -> ID factorp .)
    CTEI            reduce using rule 105 (factor -> ID factorp .)
    CTEF            reduce using rule 105 (factor -> ID factorp .)
    CLLA            reduce using rule 105 (factor -> ID factorp .)
    CPAR            reduce using rule 105 (factor -> ID factorp .)
    CCOR            reduce using rule 105 (factor -> ID factorp .)
    COMA            reduce using rule 105 (factor -> ID factorp .)
    PTCOMA          reduce using rule 105 (factor -> ID factorp .)
    TO              reduce using rule 105 (factor -> ID factorp .)
    DO              reduce using rule 105 (factor -> ID factorp .)

  ! DIV             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! POR             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! ID              [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! RETURN          [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! READ            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! WRITE           [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! IF              [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! FOR             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! WHILE           [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! APAR            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! CTEI            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! CTEF            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! CLLA            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! CCOR            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! COMA            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! PTCOMA          [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! TO              [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! DO              [ reduce using rule 112 (ctes -> ID factorp .) ]


state 94

    (108) factorp -> ACOR . exp CCOR
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 140
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 95

    (109) factorp -> empty .

    DIV             reduce using rule 109 (factorp -> empty .)
    POR             reduce using rule 109 (factorp -> empty .)
    MENOS           reduce using rule 109 (factorp -> empty .)
    MAS             reduce using rule 109 (factorp -> empty .)
    MAYQ            reduce using rule 109 (factorp -> empty .)
    MENQ            reduce using rule 109 (factorp -> empty .)
    MAYI            reduce using rule 109 (factorp -> empty .)
    MENI            reduce using rule 109 (factorp -> empty .)
    IGUALIGUAL      reduce using rule 109 (factorp -> empty .)
    DIF             reduce using rule 109 (factorp -> empty .)
    AND             reduce using rule 109 (factorp -> empty .)
    OR              reduce using rule 109 (factorp -> empty .)
    ID              reduce using rule 109 (factorp -> empty .)
    RETURN          reduce using rule 109 (factorp -> empty .)
    READ            reduce using rule 109 (factorp -> empty .)
    WRITE           reduce using rule 109 (factorp -> empty .)
    IF              reduce using rule 109 (factorp -> empty .)
    FOR             reduce using rule 109 (factorp -> empty .)
    WHILE           reduce using rule 109 (factorp -> empty .)
    APAR            reduce using rule 109 (factorp -> empty .)
    CTEI            reduce using rule 109 (factorp -> empty .)
    CTEF            reduce using rule 109 (factorp -> empty .)
    CLLA            reduce using rule 109 (factorp -> empty .)
    CPAR            reduce using rule 109 (factorp -> empty .)
    CCOR            reduce using rule 109 (factorp -> empty .)
    COMA            reduce using rule 109 (factorp -> empty .)
    PTCOMA          reduce using rule 109 (factorp -> empty .)
    TO              reduce using rule 109 (factorp -> empty .)
    DO              reduce using rule 109 (factorp -> empty .)


state 96

    (56) return -> RETURN APAR . exp CPAR PTCOMA
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 141
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 97

    (57) lectura -> READ APAR . readId ididx lecturapp CPAR PTCOMA
    (58) readId -> . ID

    ID              shift and go to state 143

    readId                         shift and go to state 142

state 98

    (61) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (62) escriturap -> . pushEsc
    (63) escriturap -> . exp
    (64) pushEsc -> . STRING
    (65) pushEsc -> . CTEC
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    STRING          shift and go to state 147
    CTEC            shift and go to state 148
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    escriturap                     shift and go to state 144
    pushEsc                        shift and go to state 145
    exp                            shift and go to state 146
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 99

    (68) cond -> IF APAR . condp checkCond THEN ALLA estatutos CLLA condpp
    (69) condp -> . exp
    (70) condp -> . TRUE
    (71) condp -> . FALSE
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    TRUE            shift and go to state 151
    FALSE           shift and go to state 152
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    condp                          shift and go to state 149
    exp                            shift and go to state 150
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 100

    (76) while -> saveWhile APAR . condp checkWhileCond DO ALLA estatutos CLLA
    (69) condp -> . exp
    (70) condp -> . TRUE
    (71) condp -> . FALSE
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    TRUE            shift and go to state 151
    FALSE           shift and go to state 152
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    condp                          shift and go to state 153
    exp                            shift and go to state 150
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 101

    (79) for -> FOR ID . ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (115) empty -> .

    ACOR            shift and go to state 90
    IGUAL           reduce using rule 115 (empty -> .)

    ididx                          shift and go to state 154
    empty                          shift and go to state 91

state 102

    (80) exp -> texp expp .

    ID              reduce using rule 80 (exp -> texp expp .)
    RETURN          reduce using rule 80 (exp -> texp expp .)
    READ            reduce using rule 80 (exp -> texp expp .)
    WRITE           reduce using rule 80 (exp -> texp expp .)
    IF              reduce using rule 80 (exp -> texp expp .)
    FOR             reduce using rule 80 (exp -> texp expp .)
    WHILE           reduce using rule 80 (exp -> texp expp .)
    APAR            reduce using rule 80 (exp -> texp expp .)
    CTEI            reduce using rule 80 (exp -> texp expp .)
    CTEF            reduce using rule 80 (exp -> texp expp .)
    CLLA            reduce using rule 80 (exp -> texp expp .)
    CPAR            reduce using rule 80 (exp -> texp expp .)
    CCOR            reduce using rule 80 (exp -> texp expp .)
    COMA            reduce using rule 80 (exp -> texp expp .)
    PTCOMA          reduce using rule 80 (exp -> texp expp .)
    TO              reduce using rule 80 (exp -> texp expp .)
    DO              reduce using rule 80 (exp -> texp expp .)


state 103

    (81) expp -> OR . exp
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 155
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 104

    (82) expp -> empty .

    ID              reduce using rule 82 (expp -> empty .)
    RETURN          reduce using rule 82 (expp -> empty .)
    READ            reduce using rule 82 (expp -> empty .)
    WRITE           reduce using rule 82 (expp -> empty .)
    IF              reduce using rule 82 (expp -> empty .)
    FOR             reduce using rule 82 (expp -> empty .)
    WHILE           reduce using rule 82 (expp -> empty .)
    APAR            reduce using rule 82 (expp -> empty .)
    CTEI            reduce using rule 82 (expp -> empty .)
    CTEF            reduce using rule 82 (expp -> empty .)
    CLLA            reduce using rule 82 (expp -> empty .)
    CPAR            reduce using rule 82 (expp -> empty .)
    CCOR            reduce using rule 82 (expp -> empty .)
    COMA            reduce using rule 82 (expp -> empty .)
    PTCOMA          reduce using rule 82 (expp -> empty .)
    TO              reduce using rule 82 (expp -> empty .)
    DO              reduce using rule 82 (expp -> empty .)


state 105

    (83) texp -> gexp texpp .

    OR              reduce using rule 83 (texp -> gexp texpp .)
    ID              reduce using rule 83 (texp -> gexp texpp .)
    RETURN          reduce using rule 83 (texp -> gexp texpp .)
    READ            reduce using rule 83 (texp -> gexp texpp .)
    WRITE           reduce using rule 83 (texp -> gexp texpp .)
    IF              reduce using rule 83 (texp -> gexp texpp .)
    FOR             reduce using rule 83 (texp -> gexp texpp .)
    WHILE           reduce using rule 83 (texp -> gexp texpp .)
    APAR            reduce using rule 83 (texp -> gexp texpp .)
    CTEI            reduce using rule 83 (texp -> gexp texpp .)
    CTEF            reduce using rule 83 (texp -> gexp texpp .)
    CLLA            reduce using rule 83 (texp -> gexp texpp .)
    CPAR            reduce using rule 83 (texp -> gexp texpp .)
    CCOR            reduce using rule 83 (texp -> gexp texpp .)
    COMA            reduce using rule 83 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 83 (texp -> gexp texpp .)
    TO              reduce using rule 83 (texp -> gexp texpp .)
    DO              reduce using rule 83 (texp -> gexp texpp .)


state 106

    (84) texpp -> AND . texp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    texp                           shift and go to state 156
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 107

    (85) texpp -> empty .

    OR              reduce using rule 85 (texpp -> empty .)
    ID              reduce using rule 85 (texpp -> empty .)
    RETURN          reduce using rule 85 (texpp -> empty .)
    READ            reduce using rule 85 (texpp -> empty .)
    WRITE           reduce using rule 85 (texpp -> empty .)
    IF              reduce using rule 85 (texpp -> empty .)
    FOR             reduce using rule 85 (texpp -> empty .)
    WHILE           reduce using rule 85 (texpp -> empty .)
    APAR            reduce using rule 85 (texpp -> empty .)
    CTEI            reduce using rule 85 (texpp -> empty .)
    CTEF            reduce using rule 85 (texpp -> empty .)
    CLLA            reduce using rule 85 (texpp -> empty .)
    CPAR            reduce using rule 85 (texpp -> empty .)
    CCOR            reduce using rule 85 (texpp -> empty .)
    COMA            reduce using rule 85 (texpp -> empty .)
    PTCOMA          reduce using rule 85 (texpp -> empty .)
    TO              reduce using rule 85 (texpp -> empty .)
    DO              reduce using rule 85 (texpp -> empty .)


state 108

    (86) gexp -> mexp gexpp .

    AND             reduce using rule 86 (gexp -> mexp gexpp .)
    OR              reduce using rule 86 (gexp -> mexp gexpp .)
    ID              reduce using rule 86 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 86 (gexp -> mexp gexpp .)
    READ            reduce using rule 86 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 86 (gexp -> mexp gexpp .)
    IF              reduce using rule 86 (gexp -> mexp gexpp .)
    FOR             reduce using rule 86 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 86 (gexp -> mexp gexpp .)
    APAR            reduce using rule 86 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 86 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 86 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 86 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 86 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 86 (gexp -> mexp gexpp .)
    COMA            reduce using rule 86 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 86 (gexp -> mexp gexpp .)
    TO              reduce using rule 86 (gexp -> mexp gexpp .)
    DO              reduce using rule 86 (gexp -> mexp gexpp .)


state 109

    (87) gexpp -> MAYQ . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 157
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 110

    (88) gexpp -> MENQ . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 158
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 111

    (89) gexpp -> MAYI . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 159
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 112

    (90) gexpp -> MENI . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 160
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 113

    (91) gexpp -> IGUALIGUAL . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 161
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 114

    (92) gexpp -> DIF . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 162
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 115

    (93) gexpp -> empty .

    AND             reduce using rule 93 (gexpp -> empty .)
    OR              reduce using rule 93 (gexpp -> empty .)
    ID              reduce using rule 93 (gexpp -> empty .)
    RETURN          reduce using rule 93 (gexpp -> empty .)
    READ            reduce using rule 93 (gexpp -> empty .)
    WRITE           reduce using rule 93 (gexpp -> empty .)
    IF              reduce using rule 93 (gexpp -> empty .)
    FOR             reduce using rule 93 (gexpp -> empty .)
    WHILE           reduce using rule 93 (gexpp -> empty .)
    APAR            reduce using rule 93 (gexpp -> empty .)
    CTEI            reduce using rule 93 (gexpp -> empty .)
    CTEF            reduce using rule 93 (gexpp -> empty .)
    CLLA            reduce using rule 93 (gexpp -> empty .)
    CPAR            reduce using rule 93 (gexpp -> empty .)
    CCOR            reduce using rule 93 (gexpp -> empty .)
    COMA            reduce using rule 93 (gexpp -> empty .)
    PTCOMA          reduce using rule 93 (gexpp -> empty .)
    TO              reduce using rule 93 (gexpp -> empty .)
    DO              reduce using rule 93 (gexpp -> empty .)


state 116

    (94) mexp -> termino mexpp .

    MAYQ            reduce using rule 94 (mexp -> termino mexpp .)
    MENQ            reduce using rule 94 (mexp -> termino mexpp .)
    MAYI            reduce using rule 94 (mexp -> termino mexpp .)
    MENI            reduce using rule 94 (mexp -> termino mexpp .)
    IGUALIGUAL      reduce using rule 94 (mexp -> termino mexpp .)
    DIF             reduce using rule 94 (mexp -> termino mexpp .)
    AND             reduce using rule 94 (mexp -> termino mexpp .)
    OR              reduce using rule 94 (mexp -> termino mexpp .)
    ID              reduce using rule 94 (mexp -> termino mexpp .)
    RETURN          reduce using rule 94 (mexp -> termino mexpp .)
    READ            reduce using rule 94 (mexp -> termino mexpp .)
    WRITE           reduce using rule 94 (mexp -> termino mexpp .)
    IF              reduce using rule 94 (mexp -> termino mexpp .)
    FOR             reduce using rule 94 (mexp -> termino mexpp .)
    WHILE           reduce using rule 94 (mexp -> termino mexpp .)
    APAR            reduce using rule 94 (mexp -> termino mexpp .)
    CTEI            reduce using rule 94 (mexp -> termino mexpp .)
    CTEF            reduce using rule 94 (mexp -> termino mexpp .)
    CLLA            reduce using rule 94 (mexp -> termino mexpp .)
    CPAR            reduce using rule 94 (mexp -> termino mexpp .)
    CCOR            reduce using rule 94 (mexp -> termino mexpp .)
    COMA            reduce using rule 94 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 94 (mexp -> termino mexpp .)
    TO              reduce using rule 94 (mexp -> termino mexpp .)
    DO              reduce using rule 94 (mexp -> termino mexpp .)


state 117

    (95) mexpp -> operSR . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    mexp                           shift and go to state 163
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 118

    (96) mexpp -> empty .

    MAYQ            reduce using rule 96 (mexpp -> empty .)
    MENQ            reduce using rule 96 (mexpp -> empty .)
    MAYI            reduce using rule 96 (mexpp -> empty .)
    MENI            reduce using rule 96 (mexpp -> empty .)
    IGUALIGUAL      reduce using rule 96 (mexpp -> empty .)
    DIF             reduce using rule 96 (mexpp -> empty .)
    AND             reduce using rule 96 (mexpp -> empty .)
    OR              reduce using rule 96 (mexpp -> empty .)
    ID              reduce using rule 96 (mexpp -> empty .)
    RETURN          reduce using rule 96 (mexpp -> empty .)
    READ            reduce using rule 96 (mexpp -> empty .)
    WRITE           reduce using rule 96 (mexpp -> empty .)
    IF              reduce using rule 96 (mexpp -> empty .)
    FOR             reduce using rule 96 (mexpp -> empty .)
    WHILE           reduce using rule 96 (mexpp -> empty .)
    APAR            reduce using rule 96 (mexpp -> empty .)
    CTEI            reduce using rule 96 (mexpp -> empty .)
    CTEF            reduce using rule 96 (mexpp -> empty .)
    CLLA            reduce using rule 96 (mexpp -> empty .)
    CPAR            reduce using rule 96 (mexpp -> empty .)
    CCOR            reduce using rule 96 (mexpp -> empty .)
    COMA            reduce using rule 96 (mexpp -> empty .)
    PTCOMA          reduce using rule 96 (mexpp -> empty .)
    TO              reduce using rule 96 (mexpp -> empty .)
    DO              reduce using rule 96 (mexpp -> empty .)


state 119

    (97) operSR -> MENOS .

    APAR            reduce using rule 97 (operSR -> MENOS .)
    ID              reduce using rule 97 (operSR -> MENOS .)
    CTEI            reduce using rule 97 (operSR -> MENOS .)
    CTEF            reduce using rule 97 (operSR -> MENOS .)


state 120

    (98) operSR -> MAS .

    APAR            reduce using rule 98 (operSR -> MAS .)
    ID              reduce using rule 98 (operSR -> MAS .)
    CTEI            reduce using rule 98 (operSR -> MAS .)
    CTEF            reduce using rule 98 (operSR -> MAS .)


state 121

    (99) termino -> factor terminop .

    MENOS           reduce using rule 99 (termino -> factor terminop .)
    MAS             reduce using rule 99 (termino -> factor terminop .)
    MAYQ            reduce using rule 99 (termino -> factor terminop .)
    MENQ            reduce using rule 99 (termino -> factor terminop .)
    MAYI            reduce using rule 99 (termino -> factor terminop .)
    MENI            reduce using rule 99 (termino -> factor terminop .)
    IGUALIGUAL      reduce using rule 99 (termino -> factor terminop .)
    DIF             reduce using rule 99 (termino -> factor terminop .)
    AND             reduce using rule 99 (termino -> factor terminop .)
    OR              reduce using rule 99 (termino -> factor terminop .)
    ID              reduce using rule 99 (termino -> factor terminop .)
    RETURN          reduce using rule 99 (termino -> factor terminop .)
    READ            reduce using rule 99 (termino -> factor terminop .)
    WRITE           reduce using rule 99 (termino -> factor terminop .)
    IF              reduce using rule 99 (termino -> factor terminop .)
    FOR             reduce using rule 99 (termino -> factor terminop .)
    WHILE           reduce using rule 99 (termino -> factor terminop .)
    APAR            reduce using rule 99 (termino -> factor terminop .)
    CTEI            reduce using rule 99 (termino -> factor terminop .)
    CTEF            reduce using rule 99 (termino -> factor terminop .)
    CLLA            reduce using rule 99 (termino -> factor terminop .)
    CPAR            reduce using rule 99 (termino -> factor terminop .)
    CCOR            reduce using rule 99 (termino -> factor terminop .)
    COMA            reduce using rule 99 (termino -> factor terminop .)
    PTCOMA          reduce using rule 99 (termino -> factor terminop .)
    TO              reduce using rule 99 (termino -> factor terminop .)
    DO              reduce using rule 99 (termino -> factor terminop .)


state 122

    (100) terminop -> oper . termino
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    termino                        shift and go to state 164
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 123

    (101) terminop -> empty .

    MENOS           reduce using rule 101 (terminop -> empty .)
    MAS             reduce using rule 101 (terminop -> empty .)
    MAYQ            reduce using rule 101 (terminop -> empty .)
    MENQ            reduce using rule 101 (terminop -> empty .)
    MAYI            reduce using rule 101 (terminop -> empty .)
    MENI            reduce using rule 101 (terminop -> empty .)
    IGUALIGUAL      reduce using rule 101 (terminop -> empty .)
    DIF             reduce using rule 101 (terminop -> empty .)
    AND             reduce using rule 101 (terminop -> empty .)
    OR              reduce using rule 101 (terminop -> empty .)
    ID              reduce using rule 101 (terminop -> empty .)
    RETURN          reduce using rule 101 (terminop -> empty .)
    READ            reduce using rule 101 (terminop -> empty .)
    WRITE           reduce using rule 101 (terminop -> empty .)
    IF              reduce using rule 101 (terminop -> empty .)
    FOR             reduce using rule 101 (terminop -> empty .)
    WHILE           reduce using rule 101 (terminop -> empty .)
    APAR            reduce using rule 101 (terminop -> empty .)
    CTEI            reduce using rule 101 (terminop -> empty .)
    CTEF            reduce using rule 101 (terminop -> empty .)
    CLLA            reduce using rule 101 (terminop -> empty .)
    CPAR            reduce using rule 101 (terminop -> empty .)
    CCOR            reduce using rule 101 (terminop -> empty .)
    COMA            reduce using rule 101 (terminop -> empty .)
    PTCOMA          reduce using rule 101 (terminop -> empty .)
    TO              reduce using rule 101 (terminop -> empty .)
    DO              reduce using rule 101 (terminop -> empty .)


state 124

    (102) oper -> DIV .

    APAR            reduce using rule 102 (oper -> DIV .)
    ID              reduce using rule 102 (oper -> DIV .)
    CTEI            reduce using rule 102 (oper -> DIV .)
    CTEF            reduce using rule 102 (oper -> DIV .)


state 125

    (103) oper -> POR .

    APAR            reduce using rule 103 (oper -> POR .)
    ID              reduce using rule 103 (oper -> POR .)
    CTEI            reduce using rule 103 (oper -> POR .)
    CTEF            reduce using rule 103 (oper -> POR .)


state 126

    (15) funcspp -> APAR params CPAR PTCOMA . varss ALLA estatutos CLLA funcs
    (3) varss -> . VARS vars
    (4) varss -> . empty
    (115) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 115 (empty -> .)

    varss                          shift and go to state 165
    empty                          shift and go to state 7

state 127

    (32) params -> tipo DOSPNTS insertParams . ididx paramsp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (115) empty -> .

    ACOR            shift and go to state 90
    COMA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)

    ididx                          shift and go to state 166
    empty                          shift and go to state 91

state 128

    (34) insertParams -> ID .

    ACOR            reduce using rule 34 (insertParams -> ID .)
    COMA            reduce using rule 34 (insertParams -> ID .)
    CPAR            reduce using rule 34 (insertParams -> ID .)


state 129

    (11) varspp -> COMA insertVar varsppp . varspp
    (10) varspp -> . PTCOMA
    (11) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 167

state 130

    (104) factor -> APAR exp CPAR .

    DIV             reduce using rule 104 (factor -> APAR exp CPAR .)
    POR             reduce using rule 104 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 104 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 104 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 104 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 104 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 104 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 104 (factor -> APAR exp CPAR .)
    IGUALIGUAL      reduce using rule 104 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 104 (factor -> APAR exp CPAR .)
    AND             reduce using rule 104 (factor -> APAR exp CPAR .)
    OR              reduce using rule 104 (factor -> APAR exp CPAR .)
    ID              reduce using rule 104 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 104 (factor -> APAR exp CPAR .)
    READ            reduce using rule 104 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 104 (factor -> APAR exp CPAR .)
    IF              reduce using rule 104 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 104 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 104 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 104 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 104 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 104 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 104 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 104 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 104 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 104 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 104 (factor -> APAR exp CPAR .)
    TO              reduce using rule 104 (factor -> APAR exp CPAR .)
    DO              reduce using rule 104 (factor -> APAR exp CPAR .)


state 131

    (107) factorp -> APAR . exp factorpp CPAR
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 168
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 132

    (37) asig -> varAs ididx igualAs . asigpp PTCOMA
    (45) asigpp -> . exp
    (46) asigpp -> . CTEC
    (47) asigpp -> . ACOR asigp CCOR
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CTEC            shift and go to state 171
    ACOR            shift and go to state 172
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    asigpp                         shift and go to state 169
    exp                            shift and go to state 170
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 133

    (39) igualAs -> IGUAL .

    CTEC            reduce using rule 39 (igualAs -> IGUAL .)
    ACOR            reduce using rule 39 (igualAs -> IGUAL .)
    APAR            reduce using rule 39 (igualAs -> IGUAL .)
    ID              reduce using rule 39 (igualAs -> IGUAL .)
    CTEI            reduce using rule 39 (igualAs -> IGUAL .)
    CTEF            reduce using rule 39 (igualAs -> IGUAL .)


state 134

    (48) ididx -> ACOR exp . CCOR

    CCOR            shift and go to state 173


state 135

    (112) ctes -> ID . factorp
    (105) factor -> ID . factorp
    (107) factorp -> . APAR exp factorpp CPAR
    (108) factorp -> . ACOR exp CCOR
    (109) factorp -> . empty
    (115) empty -> .

    APAR            shift and go to state 131
    ACOR            shift and go to state 94
    COMA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)
    DIV             reduce using rule 115 (empty -> .)
    POR             reduce using rule 115 (empty -> .)
    MENOS           reduce using rule 115 (empty -> .)
    MAS             reduce using rule 115 (empty -> .)
    MAYQ            reduce using rule 115 (empty -> .)
    MENQ            reduce using rule 115 (empty -> .)
    MAYI            reduce using rule 115 (empty -> .)
    MENI            reduce using rule 115 (empty -> .)
    IGUALIGUAL      reduce using rule 115 (empty -> .)
    DIF             reduce using rule 115 (empty -> .)
    AND             reduce using rule 115 (empty -> .)
    OR              reduce using rule 115 (empty -> .)

    factorp                        shift and go to state 174
    empty                          shift and go to state 95

state 136

    (50) llamada -> ID APAR args . CPAR PTCOMA

    CPAR            shift and go to state 175


state 137

    (107) factorp -> APAR exp . factorpp CPAR
    (52) args -> exp . argsp
    (110) factorpp -> . COMA exp factorpp
    (111) factorpp -> . empty
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (115) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 115 (empty -> .)

    factorpp                       shift and go to state 176
    argsp                          shift and go to state 177
    empty                          shift and go to state 179

state 138

    (51) args -> ctes . argsp
    (106) factor -> ctes .
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (115) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for CPAR resolved using rule 106 (factor -> ctes .)
    DIV             reduce using rule 106 (factor -> ctes .)
    POR             reduce using rule 106 (factor -> ctes .)
    MENOS           reduce using rule 106 (factor -> ctes .)
    MAS             reduce using rule 106 (factor -> ctes .)
    MAYQ            reduce using rule 106 (factor -> ctes .)
    MENQ            reduce using rule 106 (factor -> ctes .)
    MAYI            reduce using rule 106 (factor -> ctes .)
    MENI            reduce using rule 106 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 106 (factor -> ctes .)
    DIF             reduce using rule 106 (factor -> ctes .)
    AND             reduce using rule 106 (factor -> ctes .)
    OR              reduce using rule 106 (factor -> ctes .)
    CPAR            reduce using rule 106 (factor -> ctes .)
    COMA            shift and go to state 181

  ! COMA            [ reduce using rule 106 (factor -> ctes .) ]
  ! CPAR            [ reduce using rule 115 (empty -> .) ]

    argsp                          shift and go to state 180
    empty                          shift and go to state 182

state 139

    (53) args -> CTEC . argsp
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (115) empty -> .

    COMA            shift and go to state 181
    CPAR            reduce using rule 115 (empty -> .)

    argsp                          shift and go to state 183
    empty                          shift and go to state 182

state 140

    (108) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 184


state 141

    (56) return -> RETURN APAR exp . CPAR PTCOMA

    CPAR            shift and go to state 185


state 142

    (57) lectura -> READ APAR readId . ididx lecturapp CPAR PTCOMA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (115) empty -> .

    ACOR            shift and go to state 90
    COMA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)

    ididx                          shift and go to state 186
    empty                          shift and go to state 91

state 143

    (58) readId -> ID .

    ACOR            reduce using rule 58 (readId -> ID .)
    COMA            reduce using rule 58 (readId -> ID .)
    CPAR            reduce using rule 58 (readId -> ID .)


state 144

    (61) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (66) escriturapp -> . COMA escriturap
    (67) escriturapp -> . empty
    (115) empty -> .

    COMA            shift and go to state 188
    CPAR            reduce using rule 115 (empty -> .)

    escriturapp                    shift and go to state 187
    empty                          shift and go to state 189

state 145

    (62) escriturap -> pushEsc .

    COMA            reduce using rule 62 (escriturap -> pushEsc .)
    CPAR            reduce using rule 62 (escriturap -> pushEsc .)


state 146

    (63) escriturap -> exp .

    COMA            reduce using rule 63 (escriturap -> exp .)
    CPAR            reduce using rule 63 (escriturap -> exp .)


state 147

    (64) pushEsc -> STRING .

    COMA            reduce using rule 64 (pushEsc -> STRING .)
    CPAR            reduce using rule 64 (pushEsc -> STRING .)


state 148

    (65) pushEsc -> CTEC .

    COMA            reduce using rule 65 (pushEsc -> CTEC .)
    CPAR            reduce using rule 65 (pushEsc -> CTEC .)


state 149

    (68) cond -> IF APAR condp . checkCond THEN ALLA estatutos CLLA condpp
    (75) checkCond -> . CPAR

    CPAR            shift and go to state 191

    checkCond                      shift and go to state 190

state 150

    (69) condp -> exp .

    CPAR            reduce using rule 69 (condp -> exp .)


state 151

    (70) condp -> TRUE .

    CPAR            reduce using rule 70 (condp -> TRUE .)


state 152

    (71) condp -> FALSE .

    CPAR            reduce using rule 71 (condp -> FALSE .)


state 153

    (76) while -> saveWhile APAR condp . checkWhileCond DO ALLA estatutos CLLA
    (78) checkWhileCond -> . CPAR

    CPAR            shift and go to state 193

    checkWhileCond                 shift and go to state 192

state 154

    (79) for -> FOR ID ididx . IGUAL exp TO exp DO ALLA estatutos CLLA

    IGUAL           shift and go to state 194


state 155

    (81) expp -> OR exp .

    ID              reduce using rule 81 (expp -> OR exp .)
    RETURN          reduce using rule 81 (expp -> OR exp .)
    READ            reduce using rule 81 (expp -> OR exp .)
    WRITE           reduce using rule 81 (expp -> OR exp .)
    IF              reduce using rule 81 (expp -> OR exp .)
    FOR             reduce using rule 81 (expp -> OR exp .)
    WHILE           reduce using rule 81 (expp -> OR exp .)
    APAR            reduce using rule 81 (expp -> OR exp .)
    CTEI            reduce using rule 81 (expp -> OR exp .)
    CTEF            reduce using rule 81 (expp -> OR exp .)
    CLLA            reduce using rule 81 (expp -> OR exp .)
    CPAR            reduce using rule 81 (expp -> OR exp .)
    CCOR            reduce using rule 81 (expp -> OR exp .)
    COMA            reduce using rule 81 (expp -> OR exp .)
    PTCOMA          reduce using rule 81 (expp -> OR exp .)
    TO              reduce using rule 81 (expp -> OR exp .)
    DO              reduce using rule 81 (expp -> OR exp .)


state 156

    (84) texpp -> AND texp .

    OR              reduce using rule 84 (texpp -> AND texp .)
    ID              reduce using rule 84 (texpp -> AND texp .)
    RETURN          reduce using rule 84 (texpp -> AND texp .)
    READ            reduce using rule 84 (texpp -> AND texp .)
    WRITE           reduce using rule 84 (texpp -> AND texp .)
    IF              reduce using rule 84 (texpp -> AND texp .)
    FOR             reduce using rule 84 (texpp -> AND texp .)
    WHILE           reduce using rule 84 (texpp -> AND texp .)
    APAR            reduce using rule 84 (texpp -> AND texp .)
    CTEI            reduce using rule 84 (texpp -> AND texp .)
    CTEF            reduce using rule 84 (texpp -> AND texp .)
    CLLA            reduce using rule 84 (texpp -> AND texp .)
    CPAR            reduce using rule 84 (texpp -> AND texp .)
    CCOR            reduce using rule 84 (texpp -> AND texp .)
    COMA            reduce using rule 84 (texpp -> AND texp .)
    PTCOMA          reduce using rule 84 (texpp -> AND texp .)
    TO              reduce using rule 84 (texpp -> AND texp .)
    DO              reduce using rule 84 (texpp -> AND texp .)


state 157

    (87) gexpp -> MAYQ mexp .

    AND             reduce using rule 87 (gexpp -> MAYQ mexp .)
    OR              reduce using rule 87 (gexpp -> MAYQ mexp .)
    ID              reduce using rule 87 (gexpp -> MAYQ mexp .)
    RETURN          reduce using rule 87 (gexpp -> MAYQ mexp .)
    READ            reduce using rule 87 (gexpp -> MAYQ mexp .)
    WRITE           reduce using rule 87 (gexpp -> MAYQ mexp .)
    IF              reduce using rule 87 (gexpp -> MAYQ mexp .)
    FOR             reduce using rule 87 (gexpp -> MAYQ mexp .)
    WHILE           reduce using rule 87 (gexpp -> MAYQ mexp .)
    APAR            reduce using rule 87 (gexpp -> MAYQ mexp .)
    CTEI            reduce using rule 87 (gexpp -> MAYQ mexp .)
    CTEF            reduce using rule 87 (gexpp -> MAYQ mexp .)
    CLLA            reduce using rule 87 (gexpp -> MAYQ mexp .)
    CPAR            reduce using rule 87 (gexpp -> MAYQ mexp .)
    CCOR            reduce using rule 87 (gexpp -> MAYQ mexp .)
    COMA            reduce using rule 87 (gexpp -> MAYQ mexp .)
    PTCOMA          reduce using rule 87 (gexpp -> MAYQ mexp .)
    TO              reduce using rule 87 (gexpp -> MAYQ mexp .)
    DO              reduce using rule 87 (gexpp -> MAYQ mexp .)


state 158

    (88) gexpp -> MENQ mexp .

    AND             reduce using rule 88 (gexpp -> MENQ mexp .)
    OR              reduce using rule 88 (gexpp -> MENQ mexp .)
    ID              reduce using rule 88 (gexpp -> MENQ mexp .)
    RETURN          reduce using rule 88 (gexpp -> MENQ mexp .)
    READ            reduce using rule 88 (gexpp -> MENQ mexp .)
    WRITE           reduce using rule 88 (gexpp -> MENQ mexp .)
    IF              reduce using rule 88 (gexpp -> MENQ mexp .)
    FOR             reduce using rule 88 (gexpp -> MENQ mexp .)
    WHILE           reduce using rule 88 (gexpp -> MENQ mexp .)
    APAR            reduce using rule 88 (gexpp -> MENQ mexp .)
    CTEI            reduce using rule 88 (gexpp -> MENQ mexp .)
    CTEF            reduce using rule 88 (gexpp -> MENQ mexp .)
    CLLA            reduce using rule 88 (gexpp -> MENQ mexp .)
    CPAR            reduce using rule 88 (gexpp -> MENQ mexp .)
    CCOR            reduce using rule 88 (gexpp -> MENQ mexp .)
    COMA            reduce using rule 88 (gexpp -> MENQ mexp .)
    PTCOMA          reduce using rule 88 (gexpp -> MENQ mexp .)
    TO              reduce using rule 88 (gexpp -> MENQ mexp .)
    DO              reduce using rule 88 (gexpp -> MENQ mexp .)


state 159

    (89) gexpp -> MAYI mexp .

    AND             reduce using rule 89 (gexpp -> MAYI mexp .)
    OR              reduce using rule 89 (gexpp -> MAYI mexp .)
    ID              reduce using rule 89 (gexpp -> MAYI mexp .)
    RETURN          reduce using rule 89 (gexpp -> MAYI mexp .)
    READ            reduce using rule 89 (gexpp -> MAYI mexp .)
    WRITE           reduce using rule 89 (gexpp -> MAYI mexp .)
    IF              reduce using rule 89 (gexpp -> MAYI mexp .)
    FOR             reduce using rule 89 (gexpp -> MAYI mexp .)
    WHILE           reduce using rule 89 (gexpp -> MAYI mexp .)
    APAR            reduce using rule 89 (gexpp -> MAYI mexp .)
    CTEI            reduce using rule 89 (gexpp -> MAYI mexp .)
    CTEF            reduce using rule 89 (gexpp -> MAYI mexp .)
    CLLA            reduce using rule 89 (gexpp -> MAYI mexp .)
    CPAR            reduce using rule 89 (gexpp -> MAYI mexp .)
    CCOR            reduce using rule 89 (gexpp -> MAYI mexp .)
    COMA            reduce using rule 89 (gexpp -> MAYI mexp .)
    PTCOMA          reduce using rule 89 (gexpp -> MAYI mexp .)
    TO              reduce using rule 89 (gexpp -> MAYI mexp .)
    DO              reduce using rule 89 (gexpp -> MAYI mexp .)


state 160

    (90) gexpp -> MENI mexp .

    AND             reduce using rule 90 (gexpp -> MENI mexp .)
    OR              reduce using rule 90 (gexpp -> MENI mexp .)
    ID              reduce using rule 90 (gexpp -> MENI mexp .)
    RETURN          reduce using rule 90 (gexpp -> MENI mexp .)
    READ            reduce using rule 90 (gexpp -> MENI mexp .)
    WRITE           reduce using rule 90 (gexpp -> MENI mexp .)
    IF              reduce using rule 90 (gexpp -> MENI mexp .)
    FOR             reduce using rule 90 (gexpp -> MENI mexp .)
    WHILE           reduce using rule 90 (gexpp -> MENI mexp .)
    APAR            reduce using rule 90 (gexpp -> MENI mexp .)
    CTEI            reduce using rule 90 (gexpp -> MENI mexp .)
    CTEF            reduce using rule 90 (gexpp -> MENI mexp .)
    CLLA            reduce using rule 90 (gexpp -> MENI mexp .)
    CPAR            reduce using rule 90 (gexpp -> MENI mexp .)
    CCOR            reduce using rule 90 (gexpp -> MENI mexp .)
    COMA            reduce using rule 90 (gexpp -> MENI mexp .)
    PTCOMA          reduce using rule 90 (gexpp -> MENI mexp .)
    TO              reduce using rule 90 (gexpp -> MENI mexp .)
    DO              reduce using rule 90 (gexpp -> MENI mexp .)


state 161

    (91) gexpp -> IGUALIGUAL mexp .

    AND             reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    OR              reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    ID              reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    RETURN          reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    READ            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    WRITE           reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    IF              reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    FOR             reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    WHILE           reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    APAR            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    CTEI            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    CTEF            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    CLLA            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    CPAR            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    CCOR            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    COMA            reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    PTCOMA          reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    TO              reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)
    DO              reduce using rule 91 (gexpp -> IGUALIGUAL mexp .)


state 162

    (92) gexpp -> DIF mexp .

    AND             reduce using rule 92 (gexpp -> DIF mexp .)
    OR              reduce using rule 92 (gexpp -> DIF mexp .)
    ID              reduce using rule 92 (gexpp -> DIF mexp .)
    RETURN          reduce using rule 92 (gexpp -> DIF mexp .)
    READ            reduce using rule 92 (gexpp -> DIF mexp .)
    WRITE           reduce using rule 92 (gexpp -> DIF mexp .)
    IF              reduce using rule 92 (gexpp -> DIF mexp .)
    FOR             reduce using rule 92 (gexpp -> DIF mexp .)
    WHILE           reduce using rule 92 (gexpp -> DIF mexp .)
    APAR            reduce using rule 92 (gexpp -> DIF mexp .)
    CTEI            reduce using rule 92 (gexpp -> DIF mexp .)
    CTEF            reduce using rule 92 (gexpp -> DIF mexp .)
    CLLA            reduce using rule 92 (gexpp -> DIF mexp .)
    CPAR            reduce using rule 92 (gexpp -> DIF mexp .)
    CCOR            reduce using rule 92 (gexpp -> DIF mexp .)
    COMA            reduce using rule 92 (gexpp -> DIF mexp .)
    PTCOMA          reduce using rule 92 (gexpp -> DIF mexp .)
    TO              reduce using rule 92 (gexpp -> DIF mexp .)
    DO              reduce using rule 92 (gexpp -> DIF mexp .)


state 163

    (95) mexpp -> operSR mexp .

    MAYQ            reduce using rule 95 (mexpp -> operSR mexp .)
    MENQ            reduce using rule 95 (mexpp -> operSR mexp .)
    MAYI            reduce using rule 95 (mexpp -> operSR mexp .)
    MENI            reduce using rule 95 (mexpp -> operSR mexp .)
    IGUALIGUAL      reduce using rule 95 (mexpp -> operSR mexp .)
    DIF             reduce using rule 95 (mexpp -> operSR mexp .)
    AND             reduce using rule 95 (mexpp -> operSR mexp .)
    OR              reduce using rule 95 (mexpp -> operSR mexp .)
    ID              reduce using rule 95 (mexpp -> operSR mexp .)
    RETURN          reduce using rule 95 (mexpp -> operSR mexp .)
    READ            reduce using rule 95 (mexpp -> operSR mexp .)
    WRITE           reduce using rule 95 (mexpp -> operSR mexp .)
    IF              reduce using rule 95 (mexpp -> operSR mexp .)
    FOR             reduce using rule 95 (mexpp -> operSR mexp .)
    WHILE           reduce using rule 95 (mexpp -> operSR mexp .)
    APAR            reduce using rule 95 (mexpp -> operSR mexp .)
    CTEI            reduce using rule 95 (mexpp -> operSR mexp .)
    CTEF            reduce using rule 95 (mexpp -> operSR mexp .)
    CLLA            reduce using rule 95 (mexpp -> operSR mexp .)
    CPAR            reduce using rule 95 (mexpp -> operSR mexp .)
    CCOR            reduce using rule 95 (mexpp -> operSR mexp .)
    COMA            reduce using rule 95 (mexpp -> operSR mexp .)
    PTCOMA          reduce using rule 95 (mexpp -> operSR mexp .)
    TO              reduce using rule 95 (mexpp -> operSR mexp .)
    DO              reduce using rule 95 (mexpp -> operSR mexp .)


state 164

    (100) terminop -> oper termino .

    MENOS           reduce using rule 100 (terminop -> oper termino .)
    MAS             reduce using rule 100 (terminop -> oper termino .)
    MAYQ            reduce using rule 100 (terminop -> oper termino .)
    MENQ            reduce using rule 100 (terminop -> oper termino .)
    MAYI            reduce using rule 100 (terminop -> oper termino .)
    MENI            reduce using rule 100 (terminop -> oper termino .)
    IGUALIGUAL      reduce using rule 100 (terminop -> oper termino .)
    DIF             reduce using rule 100 (terminop -> oper termino .)
    AND             reduce using rule 100 (terminop -> oper termino .)
    OR              reduce using rule 100 (terminop -> oper termino .)
    ID              reduce using rule 100 (terminop -> oper termino .)
    RETURN          reduce using rule 100 (terminop -> oper termino .)
    READ            reduce using rule 100 (terminop -> oper termino .)
    WRITE           reduce using rule 100 (terminop -> oper termino .)
    IF              reduce using rule 100 (terminop -> oper termino .)
    FOR             reduce using rule 100 (terminop -> oper termino .)
    WHILE           reduce using rule 100 (terminop -> oper termino .)
    APAR            reduce using rule 100 (terminop -> oper termino .)
    CTEI            reduce using rule 100 (terminop -> oper termino .)
    CTEF            reduce using rule 100 (terminop -> oper termino .)
    CLLA            reduce using rule 100 (terminop -> oper termino .)
    CPAR            reduce using rule 100 (terminop -> oper termino .)
    CCOR            reduce using rule 100 (terminop -> oper termino .)
    COMA            reduce using rule 100 (terminop -> oper termino .)
    PTCOMA          reduce using rule 100 (terminop -> oper termino .)
    TO              reduce using rule 100 (terminop -> oper termino .)
    DO              reduce using rule 100 (terminop -> oper termino .)


state 165

    (15) funcspp -> APAR params CPAR PTCOMA varss . ALLA estatutos CLLA funcs

    ALLA            shift and go to state 195


state 166

    (32) params -> tipo DOSPNTS insertParams ididx . paramsp
    (35) paramsp -> . COMA params
    (36) paramsp -> . empty
    (115) empty -> .

    COMA            shift and go to state 197
    CPAR            reduce using rule 115 (empty -> .)

    paramsp                        shift and go to state 196
    empty                          shift and go to state 198

state 167

    (11) varspp -> COMA insertVar varsppp varspp .

    INT             reduce using rule 11 (varspp -> COMA insertVar varsppp varspp .)
    FLOAT           reduce using rule 11 (varspp -> COMA insertVar varsppp varspp .)
    CHAR            reduce using rule 11 (varspp -> COMA insertVar varsppp varspp .)
    FUNCTION        reduce using rule 11 (varspp -> COMA insertVar varsppp varspp .)
    MAIN            reduce using rule 11 (varspp -> COMA insertVar varsppp varspp .)
    ALLA            reduce using rule 11 (varspp -> COMA insertVar varsppp varspp .)


state 168

    (107) factorp -> APAR exp . factorpp CPAR
    (110) factorpp -> . COMA exp factorpp
    (111) factorpp -> . empty
    (115) empty -> .

    COMA            shift and go to state 199
    CPAR            reduce using rule 115 (empty -> .)

    factorpp                       shift and go to state 176
    empty                          shift and go to state 200

state 169

    (37) asig -> varAs ididx igualAs asigpp . PTCOMA

    PTCOMA          shift and go to state 201


state 170

    (45) asigpp -> exp .

    PTCOMA          reduce using rule 45 (asigpp -> exp .)


state 171

    (46) asigpp -> CTEC .

    PTCOMA          reduce using rule 46 (asigpp -> CTEC .)


state 172

    (47) asigpp -> ACOR . asigp CCOR
    (40) asigp -> . exp asigppp
    (41) asigp -> . CTEC asigppp
    (42) asigp -> . empty
    (80) exp -> . texp expp
    (115) empty -> .
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CTEC            shift and go to state 204
    CCOR            reduce using rule 115 (empty -> .)
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    asigp                          shift and go to state 202
    exp                            shift and go to state 203
    empty                          shift and go to state 205
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 173

    (48) ididx -> ACOR exp CCOR .

    IGUAL           reduce using rule 48 (ididx -> ACOR exp CCOR .)
    COMA            reduce using rule 48 (ididx -> ACOR exp CCOR .)
    CPAR            reduce using rule 48 (ididx -> ACOR exp CCOR .)


state 174

    (112) ctes -> ID factorp .
    (105) factor -> ID factorp .

  ! reduce/reduce conflict for DIV resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for POR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 105 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 105 (factor -> ID factorp .)
    DIV             reduce using rule 105 (factor -> ID factorp .)
    POR             reduce using rule 105 (factor -> ID factorp .)
    MENOS           reduce using rule 105 (factor -> ID factorp .)
    MAS             reduce using rule 105 (factor -> ID factorp .)
    MAYQ            reduce using rule 105 (factor -> ID factorp .)
    MENQ            reduce using rule 105 (factor -> ID factorp .)
    MAYI            reduce using rule 105 (factor -> ID factorp .)
    MENI            reduce using rule 105 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 105 (factor -> ID factorp .)
    DIF             reduce using rule 105 (factor -> ID factorp .)
    AND             reduce using rule 105 (factor -> ID factorp .)
    OR              reduce using rule 105 (factor -> ID factorp .)
    COMA            reduce using rule 105 (factor -> ID factorp .)
    CPAR            reduce using rule 105 (factor -> ID factorp .)

  ! COMA            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! POR             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 112 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 112 (ctes -> ID factorp .) ]


state 175

    (50) llamada -> ID APAR args CPAR . PTCOMA

    PTCOMA          shift and go to state 206


state 176

    (107) factorp -> APAR exp factorpp . CPAR

    CPAR            shift and go to state 207


state 177

    (52) args -> exp argsp .

    CPAR            reduce using rule 52 (args -> exp argsp .)


state 178

    (110) factorpp -> COMA . exp factorpp
    (54) argsp -> COMA . args
    (80) exp -> . texp expp
    (51) args -> . ctes argsp
    (52) args -> . exp argsp
    (53) args -> . CTEC argsp
    (83) texp -> . gexp texpp
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes

    CTEC            shift and go to state 139
    ID              shift and go to state 135
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69
    APAR            shift and go to state 42

    exp                            shift and go to state 208
    args                           shift and go to state 209
    texp                           shift and go to state 61
    ctes                           shift and go to state 138
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66

state 179

    (111) factorpp -> empty .
    (55) argsp -> empty .

  ! reduce/reduce conflict for CPAR resolved using rule 55 (argsp -> empty .)
    CPAR            reduce using rule 55 (argsp -> empty .)

  ! CPAR            [ reduce using rule 111 (factorpp -> empty .) ]


state 180

    (51) args -> ctes argsp .

    CPAR            reduce using rule 51 (args -> ctes argsp .)


state 181

    (54) argsp -> COMA . args
    (51) args -> . ctes argsp
    (52) args -> . exp argsp
    (53) args -> . CTEC argsp
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes

    CTEC            shift and go to state 139
    ID              shift and go to state 135
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69
    APAR            shift and go to state 42

    args                           shift and go to state 209
    ctes                           shift and go to state 138
    exp                            shift and go to state 210
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66

state 182

    (55) argsp -> empty .

    CPAR            reduce using rule 55 (argsp -> empty .)


state 183

    (53) args -> CTEC argsp .

    CPAR            reduce using rule 53 (args -> CTEC argsp .)


state 184

    (108) factorp -> ACOR exp CCOR .

    DIV             reduce using rule 108 (factorp -> ACOR exp CCOR .)
    POR             reduce using rule 108 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 108 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 108 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    IGUALIGUAL      reduce using rule 108 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 108 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 108 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 108 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 108 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 108 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 108 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 108 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 108 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 108 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 108 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 108 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 108 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 108 (factorp -> ACOR exp CCOR .)


state 185

    (56) return -> RETURN APAR exp CPAR . PTCOMA

    PTCOMA          shift and go to state 211


state 186

    (57) lectura -> READ APAR readId ididx . lecturapp CPAR PTCOMA
    (59) lecturapp -> . COMA readId ididx lecturapp
    (60) lecturapp -> . empty
    (115) empty -> .

    COMA            shift and go to state 213
    CPAR            reduce using rule 115 (empty -> .)

    lecturapp                      shift and go to state 212
    empty                          shift and go to state 214

state 187

    (61) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 215


state 188

    (66) escriturapp -> COMA . escriturap
    (62) escriturap -> . pushEsc
    (63) escriturap -> . exp
    (64) pushEsc -> . STRING
    (65) pushEsc -> . CTEC
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    STRING          shift and go to state 147
    CTEC            shift and go to state 148
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    escriturap                     shift and go to state 216
    pushEsc                        shift and go to state 145
    exp                            shift and go to state 146
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 189

    (67) escriturapp -> empty .

    CPAR            reduce using rule 67 (escriturapp -> empty .)


state 190

    (68) cond -> IF APAR condp checkCond . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 217


state 191

    (75) checkCond -> CPAR .

    THEN            reduce using rule 75 (checkCond -> CPAR .)


state 192

    (76) while -> saveWhile APAR condp checkWhileCond . DO ALLA estatutos CLLA

    DO              shift and go to state 218


state 193

    (78) checkWhileCond -> CPAR .

    DO              reduce using rule 78 (checkWhileCond -> CPAR .)


state 194

    (79) for -> FOR ID ididx IGUAL . exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 219
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 195

    (15) funcspp -> APAR params CPAR PTCOMA varss ALLA . estatutos CLLA funcs
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    estatutos                      shift and go to state 220
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 196

    (32) params -> tipo DOSPNTS insertParams ididx paramsp .

    CPAR            reduce using rule 32 (params -> tipo DOSPNTS insertParams ididx paramsp .)


state 197

    (35) paramsp -> COMA . params
    (32) params -> . tipo DOSPNTS insertParams ididx paramsp
    (33) params -> . empty
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (115) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 115 (empty -> .)

    params                         shift and go to state 221
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 198

    (36) paramsp -> empty .

    CPAR            reduce using rule 36 (paramsp -> empty .)


state 199

    (110) factorpp -> COMA . exp factorpp
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 222
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 200

    (111) factorpp -> empty .

    CPAR            reduce using rule 111 (factorpp -> empty .)


state 201

    (37) asig -> varAs ididx igualAs asigpp PTCOMA .

    ID              reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    RETURN          reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    READ            reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WRITE           reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    IF              reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    FOR             reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WHILE           reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    APAR            reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEI            reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEF            reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CLLA            reduce using rule 37 (asig -> varAs ididx igualAs asigpp PTCOMA .)


state 202

    (47) asigpp -> ACOR asigp . CCOR

    CCOR            shift and go to state 223


state 203

    (40) asigp -> exp . asigppp
    (43) asigppp -> . COMA asigp
    (44) asigppp -> . empty
    (115) empty -> .

    COMA            shift and go to state 225
    CCOR            reduce using rule 115 (empty -> .)

    asigppp                        shift and go to state 224
    empty                          shift and go to state 226

state 204

    (41) asigp -> CTEC . asigppp
    (43) asigppp -> . COMA asigp
    (44) asigppp -> . empty
    (115) empty -> .

    COMA            shift and go to state 225
    CCOR            reduce using rule 115 (empty -> .)

    asigppp                        shift and go to state 227
    empty                          shift and go to state 226

state 205

    (42) asigp -> empty .

    CCOR            reduce using rule 42 (asigp -> empty .)


state 206

    (50) llamada -> ID APAR args CPAR PTCOMA .

    ID              reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    RETURN          reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    READ            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    WRITE           reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    IF              reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    FOR             reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    WHILE           reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    APAR            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEI            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEF            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    CLLA            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)


state 207

    (107) factorp -> APAR exp factorpp CPAR .

    DIV             reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    POR             reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    MENOS           reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    MAS             reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    MAYQ            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    MENQ            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    MAYI            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    MENI            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    IGUALIGUAL      reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    DIF             reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    AND             reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    OR              reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    ID              reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    RETURN          reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    READ            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    WRITE           reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    IF              reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    FOR             reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    WHILE           reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    APAR            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    CTEI            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    CTEF            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    CLLA            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    CPAR            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    CCOR            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    COMA            reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    PTCOMA          reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    TO              reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)
    DO              reduce using rule 107 (factorp -> APAR exp factorpp CPAR .)


state 208

    (110) factorpp -> COMA exp . factorpp
    (52) args -> exp . argsp
    (110) factorpp -> . COMA exp factorpp
    (111) factorpp -> . empty
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (115) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 115 (empty -> .)

    factorpp                       shift and go to state 228
    argsp                          shift and go to state 177
    empty                          shift and go to state 179

state 209

    (54) argsp -> COMA args .

    CPAR            reduce using rule 54 (argsp -> COMA args .)


state 210

    (52) args -> exp . argsp
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (115) empty -> .

    COMA            shift and go to state 181
    CPAR            reduce using rule 115 (empty -> .)

    argsp                          shift and go to state 177
    empty                          shift and go to state 182

state 211

    (56) return -> RETURN APAR exp CPAR PTCOMA .

    ID              reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    RETURN          reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    READ            reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    WRITE           reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    IF              reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    FOR             reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    WHILE           reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    APAR            reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEI            reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEF            reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)
    CLLA            reduce using rule 56 (return -> RETURN APAR exp CPAR PTCOMA .)


state 212

    (57) lectura -> READ APAR readId ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 229


state 213

    (59) lecturapp -> COMA . readId ididx lecturapp
    (58) readId -> . ID

    ID              shift and go to state 143

    readId                         shift and go to state 230

state 214

    (60) lecturapp -> empty .

    CPAR            reduce using rule 60 (lecturapp -> empty .)


state 215

    (61) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 231


state 216

    (66) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 66 (escriturapp -> COMA escriturap .)


state 217

    (68) cond -> IF APAR condp checkCond THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 232


state 218

    (76) while -> saveWhile APAR condp checkWhileCond DO . ALLA estatutos CLLA

    ALLA            shift and go to state 233


state 219

    (79) for -> FOR ID ididx IGUAL exp . TO exp DO ALLA estatutos CLLA

    TO              shift and go to state 234


state 220

    (15) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos . CLLA funcs

    CLLA            shift and go to state 235


state 221

    (35) paramsp -> COMA params .

    CPAR            reduce using rule 35 (paramsp -> COMA params .)


state 222

    (110) factorpp -> COMA exp . factorpp
    (110) factorpp -> . COMA exp factorpp
    (111) factorpp -> . empty
    (115) empty -> .

    COMA            shift and go to state 199
    CPAR            reduce using rule 115 (empty -> .)

    factorpp                       shift and go to state 228
    empty                          shift and go to state 200

state 223

    (47) asigpp -> ACOR asigp CCOR .

    PTCOMA          reduce using rule 47 (asigpp -> ACOR asigp CCOR .)


state 224

    (40) asigp -> exp asigppp .

    CCOR            reduce using rule 40 (asigp -> exp asigppp .)


state 225

    (43) asigppp -> COMA . asigp
    (40) asigp -> . exp asigppp
    (41) asigp -> . CTEC asigppp
    (42) asigp -> . empty
    (80) exp -> . texp expp
    (115) empty -> .
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    CTEC            shift and go to state 204
    CCOR            reduce using rule 115 (empty -> .)
    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    asigp                          shift and go to state 236
    exp                            shift and go to state 203
    empty                          shift and go to state 205
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 226

    (44) asigppp -> empty .

    CCOR            reduce using rule 44 (asigppp -> empty .)


state 227

    (41) asigp -> CTEC asigppp .

    CCOR            reduce using rule 41 (asigp -> CTEC asigppp .)


state 228

    (110) factorpp -> COMA exp factorpp .

    CPAR            reduce using rule 110 (factorpp -> COMA exp factorpp .)


state 229

    (57) lectura -> READ APAR readId ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 237


state 230

    (59) lecturapp -> COMA readId . ididx lecturapp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (115) empty -> .

    ACOR            shift and go to state 90
    COMA            reduce using rule 115 (empty -> .)
    CPAR            reduce using rule 115 (empty -> .)

    ididx                          shift and go to state 238
    empty                          shift and go to state 91

state 231

    (61) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    ID              reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    RETURN          reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 61 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 232

    (68) cond -> IF APAR condp checkCond THEN ALLA . estatutos CLLA condpp
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    estatutos                      shift and go to state 239
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 233

    (76) while -> saveWhile APAR condp checkWhileCond DO ALLA . estatutos CLLA
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    saveWhile                      shift and go to state 59
    estatutos                      shift and go to state 240
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 234

    (79) for -> FOR ID ididx IGUAL exp TO . exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 76
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 241
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 235

    (15) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA . funcs
    (12) funcs -> . FUNCTION funcsp insertFunc funcspp
    (13) funcs -> . empty
    (115) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 115 (empty -> .)

    funcs                          shift and go to state 242
    empty                          shift and go to state 11

state 236

    (43) asigppp -> COMA asigp .

    CCOR            reduce using rule 43 (asigppp -> COMA asigp .)


state 237

    (57) lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .

    ID              reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    RETURN          reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 57 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)


state 238

    (59) lecturapp -> COMA readId ididx . lecturapp
    (59) lecturapp -> . COMA readId ididx lecturapp
    (60) lecturapp -> . empty
    (115) empty -> .

    COMA            shift and go to state 213
    CPAR            reduce using rule 115 (empty -> .)

    lecturapp                      shift and go to state 243
    empty                          shift and go to state 214

state 239

    (68) cond -> IF APAR condp checkCond THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 244


state 240

    (76) while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos . CLLA

    CLLA            shift and go to state 245


state 241

    (79) for -> FOR ID ididx IGUAL exp TO exp . DO ALLA estatutos CLLA

    DO              shift and go to state 246


state 242

    (15) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .

    MAIN            reduce using rule 15 (funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .)


state 243

    (59) lecturapp -> COMA readId ididx lecturapp .

    CPAR            reduce using rule 59 (lecturapp -> COMA readId ididx lecturapp .)


state 244

    (68) cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA . condpp
    (72) condpp -> . checkElse ALLA estatutos CLLA
    (73) condpp -> . empty
    (74) checkElse -> . ELSE
    (115) empty -> .

    ELSE            shift and go to state 250
    ID              reduce using rule 115 (empty -> .)
    RETURN          reduce using rule 115 (empty -> .)
    READ            reduce using rule 115 (empty -> .)
    WRITE           reduce using rule 115 (empty -> .)
    IF              reduce using rule 115 (empty -> .)
    FOR             reduce using rule 115 (empty -> .)
    WHILE           reduce using rule 115 (empty -> .)
    APAR            reduce using rule 115 (empty -> .)
    CTEI            reduce using rule 115 (empty -> .)
    CTEF            reduce using rule 115 (empty -> .)
    CLLA            reduce using rule 115 (empty -> .)

    condpp                         shift and go to state 247
    checkElse                      shift and go to state 248
    empty                          shift and go to state 249

state 245

    (76) while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .

    ID              reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    READ            reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    IF              reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    FOR             reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    APAR            reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 76 (while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA .)


state 246

    (79) for -> FOR ID ididx IGUAL exp TO exp DO . ALLA estatutos CLLA

    ALLA            shift and go to state 251


state 247

    (68) cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .

    ID              reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    RETURN          reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 68 (cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp .)


state 248

    (72) condpp -> checkElse . ALLA estatutos CLLA

    ALLA            shift and go to state 252


state 249

    (73) condpp -> empty .

    ID              reduce using rule 73 (condpp -> empty .)
    RETURN          reduce using rule 73 (condpp -> empty .)
    READ            reduce using rule 73 (condpp -> empty .)
    WRITE           reduce using rule 73 (condpp -> empty .)
    IF              reduce using rule 73 (condpp -> empty .)
    FOR             reduce using rule 73 (condpp -> empty .)
    WHILE           reduce using rule 73 (condpp -> empty .)
    APAR            reduce using rule 73 (condpp -> empty .)
    CTEI            reduce using rule 73 (condpp -> empty .)
    CTEF            reduce using rule 73 (condpp -> empty .)
    CLLA            reduce using rule 73 (condpp -> empty .)


state 250

    (74) checkElse -> ELSE .

    ALLA            reduce using rule 74 (checkElse -> ELSE .)


state 251

    (79) for -> FOR ID ididx IGUAL exp TO exp DO ALLA . estatutos CLLA
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    exp                            shift and go to state 52
    estatutos                      shift and go to state 253
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 252

    (72) condpp -> checkElse ALLA . estatutos CLLA
    (18) estatutos -> . asig estatutop
    (19) estatutos -> . llamada estatutop
    (20) estatutos -> . return estatutop
    (21) estatutos -> . lectura estatutop
    (22) estatutos -> . escritura estatutop
    (23) estatutos -> . cond estatutop
    (24) estatutos -> . while estatutop
    (25) estatutos -> . for estatutop
    (26) estatutos -> . exp estatutop
    (37) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR exp CPAR PTCOMA
    (57) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (61) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (68) cond -> . IF APAR condp checkCond THEN ALLA estatutos CLLA condpp
    (76) while -> . saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA
    (79) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (80) exp -> . texp expp
    (38) varAs -> . ID
    (77) saveWhile -> . WHILE
    (83) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ID factorp
    (106) factor -> . ctes
    (112) ctes -> . ID factorp
    (113) ctes -> . CTEI
    (114) ctes -> . CTEF

    ID              shift and go to state 54
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    FOR             shift and go to state 60
    WHILE           shift and go to state 62
    APAR            shift and go to state 42
    CTEI            shift and go to state 68
    CTEF            shift and go to state 69

    estatutos                      shift and go to state 254
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    varAs                          shift and go to state 53
    saveWhile                      shift and go to state 59
    texp                           shift and go to state 61
    gexp                           shift and go to state 63
    mexp                           shift and go to state 64
    termino                        shift and go to state 65
    factor                         shift and go to state 66
    ctes                           shift and go to state 67

state 253

    (79) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos . CLLA

    CLLA            shift and go to state 255


state 254

    (72) condpp -> checkElse ALLA estatutos . CLLA

    CLLA            shift and go to state 256


state 255

    (79) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .

    ID              reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    READ            reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    IF              reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    FOR             reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    APAR            reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 79 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)


state 256

    (72) condpp -> checkElse ALLA estatutos CLLA .

    ID              reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    RETURN          reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    READ            reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    WRITE           reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    IF              reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    FOR             reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    WHILE           reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    APAR            reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEI            reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEF            reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)
    CLLA            reduce using rule 72 (condpp -> checkElse ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ACOR in state 54 resolved as shift
WARNING: shift/reduce conflict for APAR in state 54 resolved as shift
WARNING: shift/reduce conflict for APAR in state 76 resolved as shift
WARNING: shift/reduce conflict for COMA in state 138 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 93
WARNING: reduce/reduce conflict in state 138 resolved using rule (factor -> ctes)
WARNING: rejected rule (empty -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 174 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 174
WARNING: reduce/reduce conflict in state 179 resolved using rule (argsp -> empty)
WARNING: rejected rule (factorpp -> empty) in state 179
WARNING: Rule (ctes -> ID factorp) is never reduced
