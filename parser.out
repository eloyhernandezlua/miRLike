Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    IGUALIGUAL
    NOT
    STR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     poptomain -> <empty>
Rule 4     varss -> VARS vars
Rule 5     varss -> empty
Rule 6     vars -> tipo DOSPNTS insertVar varsppp varspp vars
Rule 7     vars -> empty
Rule 8     insertVar -> ID
Rule 9     varsppp -> initDim CTEI setDim
Rule 10    varsppp -> empty
Rule 11    setDim -> CCOR
Rule 12    initDim -> ACOR
Rule 13    varspp -> PTCOMA
Rule 14    varspp -> COMA insertVar varsppp varspp
Rule 15    funcs -> FUNCTION funcsp insertFunc funcspp
Rule 16    funcs -> empty
Rule 17    insertFunc -> ID
Rule 18    funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
Rule 19    updateParamTable -> <empty>
Rule 20    endfunction -> <empty>
Rule 21    addsize -> <empty>
Rule 22    funcsp -> VOID
Rule 23    funcsp -> tipo
Rule 24    estatutos -> asig estatutop
Rule 25    estatutos -> return estatutop
Rule 26    estatutos -> lectura estatutop
Rule 27    estatutos -> escritura estatutop
Rule 28    estatutos -> cond estatutop
Rule 29    estatutos -> while estatutop
Rule 30    estatutos -> for estatutop
Rule 31    estatutos -> exp estatutop
Rule 32    estatutop -> estatutos
Rule 33    estatutop -> empty
Rule 34    tipo -> INT
Rule 35    tipo -> FLOAT
Rule 36    tipo -> CHAR
Rule 37    params -> tipo DOSPNTS insertParams ididx paramsp
Rule 38    params -> empty
Rule 39    insertParams -> ID
Rule 40    paramsp -> COMA params
Rule 41    paramsp -> empty
Rule 42    asig -> varAs ididx igualAs asigpp PTCOMA
Rule 43    varAs -> ID
Rule 44    igualAs -> IGUAL
Rule 45    asigp -> exp asigppp
Rule 46    asigp -> empty
Rule 47    asigppp -> COMA asigp
Rule 48    asigppp -> empty
Rule 49    asigpp -> exp
Rule 50    ididx -> corArr exp ver CCOR
Rule 51    ididx -> empty
Rule 52    corArr -> ACOR
Rule 53    ver -> <empty>
Rule 54    return -> RETURN APAR exp CPAR PTCOMA
Rule 55    lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA
Rule 56    readId -> ID
Rule 57    lecturapp -> COMA readId ididx lecturapp
Rule 58    lecturapp -> empty
Rule 59    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 60    escriturap -> pushEsc
Rule 61    escriturap -> exp
Rule 62    pushEsc -> STRING
Rule 63    pushEsc -> CTEC
Rule 64    escriturapp -> COMA escriturap
Rule 65    escriturapp -> empty
Rule 66    cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
Rule 67    condpp -> checkElse ALLA estatutos CLLA
Rule 68    condpp -> empty
Rule 69    checkElse -> ELSE
Rule 70    checkCond -> CPAR
Rule 71    while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
Rule 72    saveWhile -> WHILE
Rule 73    checkWhileCond -> CPAR
Rule 74    for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
Rule 75    varFor -> ID
Rule 76    initFor -> TO
Rule 77    beforeDo -> DO
Rule 78    exp -> texp expp
Rule 79    expp -> OR exp
Rule 80    expp -> empty
Rule 81    texp -> gexp texpp
Rule 82    texpp -> andCheck texp
Rule 83    texpp -> empty
Rule 84    andCheck -> AND
Rule 85    gexp -> mexp gexpp
Rule 86    gexpp -> addPO mexp
Rule 87    gexpp -> empty
Rule 88    addPO -> MAYQ
Rule 89    addPO -> MENQ
Rule 90    addPO -> MAYI
Rule 91    addPO -> MENI
Rule 92    addPO -> IGUAL IGUAL
Rule 93    addPO -> DIF
Rule 94    mexp -> termino mexpp
Rule 95    mexpp -> operSR mexp
Rule 96    mexpp -> empty
Rule 97    operSR -> MENOS
Rule 98    operSR -> MAS
Rule 99    termino -> factor terminop
Rule 100   terminop -> oper termino
Rule 101   terminop -> empty
Rule 102   oper -> DIV
Rule 103   oper -> POR
Rule 104   factor -> APAR exp CPAR
Rule 105   factor -> ctes
Rule 106   factorp -> APAR createEra exp valParams factorpp cparParams
Rule 107   factorp -> corArr exp ver endArrfac
Rule 108   factorp -> empty
Rule 109   endArrfac -> CCOR
Rule 110   cparParams -> CPAR
Rule 111   createEra -> <empty>
Rule 112   valParams -> <empty>
Rule 113   factorpp -> COMA exp valParams factorpp
Rule 114   factorpp -> empty
Rule 115   ctes -> CTEC
Rule 116   ctes -> CTEI
Rule 117   ctes -> CTEF
Rule 118   ctes -> ID validateExistance factorp
Rule 119   validateExistance -> <empty>
Rule 120   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 12 52
ALLA                 : 1 18 66 67 71 74
AND                  : 84
APAR                 : 1 18 54 55 59 66 71 104 106
BOOL                 : 
CCOR                 : 11 50 109
CHAR                 : 36
CLLA                 : 1 18 66 67 71 74
COMA                 : 14 40 47 57 64 113
CPAR                 : 1 18 54 55 59 70 73 104 110
CTEC                 : 63 115
CTEF                 : 117
CTEI                 : 9 116
DIF                  : 93
DIV                  : 102
DO                   : 71 77
DOSPNTS              : 6 37
ELSE                 : 69
FALSE                : 
FLOAT                : 35
FOR                  : 74
FUNCTION             : 15
ID                   : 2 8 17 39 43 56 75 118
IF                   : 66
IGUAL                : 44 74 92 92
IGUALIGUAL           : 
INT                  : 34
MAIN                 : 1
MAS                  : 98
MAYI                 : 90
MAYQ                 : 88
MENI                 : 91
MENOS                : 97
MENQ                 : 89
NOT                  : 
OR                   : 79
POR                  : 103
PROGRAM              : 1
PTCOMA               : 2 13 18 42 54 55 59
READ                 : 55
RETURN               : 54
STR                  : 
STRING               : 62
THEN                 : 66
TO                   : 76
TRUE                 : 
VARS                 : 4
VOID                 : 22
WHILE                : 72
WRITE                : 59
error                : 

Nonterminals, with rules where they appear

addPO                : 86
addsize              : 18
agregarTablaFunciones : 1
andCheck             : 82
asig                 : 24
asigp                : 47
asigpp               : 42
asigppp              : 45
beforeDo             : 74
checkCond            : 66
checkElse            : 67
checkWhileCond       : 71
cond                 : 28
condpp               : 66
corArr               : 50 107
cparParams           : 106
createEra            : 106
ctes                 : 105
empty                : 5 7 10 16 33 38 41 46 48 51 58 65 68 80 83 87 96 101 108 114
endArrfac            : 107
endfunction          : 18
escritura            : 27
escriturap           : 59 64
escriturapp          : 59
estatutop            : 24 25 26 27 28 29 30 31
estatutos            : 1 18 32 66 67 71 74
exp                  : 31 45 49 50 54 61 66 71 74 74 79 104 106 107 113
expp                 : 78
factor               : 99
factorp              : 118
factorpp             : 106 113
for                  : 30
funcs                : 1 18
funcsp               : 15
funcspp              : 15
gexp                 : 81
gexpp                : 85
ididx                : 37 42 55 57 74
igualAs              : 42
initDim              : 9
initFor              : 74
insertFunc           : 15
insertParams         : 37
insertVar            : 6 14
lectura              : 26
lecturapp            : 55 57
mexp                 : 85 86 95
mexpp                : 94
oper                 : 100
operSR               : 95
params               : 18 40
paramsp              : 37
poptomain            : 1
program              : 0
pushEsc              : 60
readId               : 55 57
return               : 25
saveWhile            : 71
setDim               : 9
termino              : 94 100
terminop             : 99
texp                 : 78 82
texpp                : 81
tipo                 : 6 23 37
updateParamTable     : 18
valParams            : 106 113
validateExistance    : 118
varAs                : 42
varFor               : 74
vars                 : 4 6
varspp               : 6 14
varsppp              : 6 14
varss                : 1 18
ver                  : 50 107
while                : 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (120) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 120 (empty -> .)
    MAIN            reduce using rule 120 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (15) funcs -> . FUNCTION funcsp insertFunc funcspp
    (16) funcs -> . empty
    (120) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 120 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (4) varss -> VARS . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (120) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 120 (empty -> .)
    MAIN            reduce using rule 120 (empty -> .)
    ALLA            reduce using rule 120 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) varss -> empty .

    FUNCTION        reduce using rule 5 (varss -> empty .)
    MAIN            reduce using rule 5 (varss -> empty .)
    ALLA            reduce using rule 5 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA poptomain estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (15) funcs -> FUNCTION . funcsp insertFunc funcspp
    (22) funcsp -> . VOID
    (23) funcsp -> . tipo
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (16) funcs -> empty .

    MAIN            reduce using rule 16 (funcs -> empty .)


state 12

    (4) varss -> VARS vars .

    FUNCTION        reduce using rule 4 (varss -> VARS vars .)
    MAIN            reduce using rule 4 (varss -> VARS vars .)
    ALLA            reduce using rule 4 (varss -> VARS vars .)


state 13

    (6) vars -> tipo . DOSPNTS insertVar varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    ALLA            reduce using rule 7 (vars -> empty .)


state 15

    (34) tipo -> INT .

    DOSPNTS         reduce using rule 34 (tipo -> INT .)
    ID              reduce using rule 34 (tipo -> INT .)


state 16

    (35) tipo -> FLOAT .

    DOSPNTS         reduce using rule 35 (tipo -> FLOAT .)
    ID              reduce using rule 35 (tipo -> FLOAT .)


state 17

    (36) tipo -> CHAR .

    DOSPNTS         reduce using rule 36 (tipo -> CHAR .)
    ID              reduce using rule 36 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA poptomain estatutos CLLA

    APAR            shift and go to state 23


state 19

    (15) funcs -> FUNCTION funcsp . insertFunc funcspp
    (17) insertFunc -> . ID

    ID              shift and go to state 25

    insertFunc                     shift and go to state 24

state 20

    (22) funcsp -> VOID .

    ID              reduce using rule 22 (funcsp -> VOID .)


state 21

    (23) funcsp -> tipo .

    ID              reduce using rule 23 (funcsp -> tipo .)


state 22

    (6) vars -> tipo DOSPNTS . insertVar varsppp varspp vars
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 26

state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA poptomain estatutos CLLA

    CPAR            shift and go to state 28


state 24

    (15) funcs -> FUNCTION funcsp insertFunc . funcspp
    (18) funcspp -> . APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 25

    (17) insertFunc -> ID .

    APAR            reduce using rule 17 (insertFunc -> ID .)


state 26

    (6) vars -> tipo DOSPNTS insertVar . varsppp varspp vars
    (9) varsppp -> . initDim CTEI setDim
    (10) varsppp -> . empty
    (12) initDim -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)

    varsppp                        shift and go to state 31
    initDim                        shift and go to state 32
    empty                          shift and go to state 33

state 27

    (8) insertVar -> ID .

    ACOR            reduce using rule 8 (insertVar -> ID .)
    PTCOMA          reduce using rule 8 (insertVar -> ID .)
    COMA            reduce using rule 8 (insertVar -> ID .)


state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA poptomain estatutos CLLA

    ALLA            shift and go to state 35


state 29

    (15) funcs -> FUNCTION funcsp insertFunc funcspp .

    MAIN            reduce using rule 15 (funcs -> FUNCTION funcsp insertFunc funcspp .)


state 30

    (18) funcspp -> APAR . params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (37) params -> . tipo DOSPNTS insertParams ididx paramsp
    (38) params -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (120) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 120 (empty -> .)

    params                         shift and go to state 36
    tipo                           shift and go to state 37
    empty                          shift and go to state 38

state 31

    (6) vars -> tipo DOSPNTS insertVar varsppp . varspp vars
    (13) varspp -> . PTCOMA
    (14) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 40
    COMA            shift and go to state 41

    varspp                         shift and go to state 39

state 32

    (9) varsppp -> initDim . CTEI setDim

    CTEI            shift and go to state 42


state 33

    (10) varsppp -> empty .

    PTCOMA          reduce using rule 10 (varsppp -> empty .)
    COMA            reduce using rule 10 (varsppp -> empty .)


state 34

    (12) initDim -> ACOR .

    CTEI            reduce using rule 12 (initDim -> ACOR .)


state 35

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . poptomain estatutos CLLA
    (3) poptomain -> .

    RETURN          reduce using rule 3 (poptomain -> .)
    READ            reduce using rule 3 (poptomain -> .)
    WRITE           reduce using rule 3 (poptomain -> .)
    IF              reduce using rule 3 (poptomain -> .)
    FOR             reduce using rule 3 (poptomain -> .)
    ID              reduce using rule 3 (poptomain -> .)
    WHILE           reduce using rule 3 (poptomain -> .)
    APAR            reduce using rule 3 (poptomain -> .)
    CTEC            reduce using rule 3 (poptomain -> .)
    CTEI            reduce using rule 3 (poptomain -> .)
    CTEF            reduce using rule 3 (poptomain -> .)

    poptomain                      shift and go to state 43

state 36

    (18) funcspp -> APAR params . CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    CPAR            shift and go to state 44


state 37

    (37) params -> tipo . DOSPNTS insertParams ididx paramsp

    DOSPNTS         shift and go to state 45


state 38

    (38) params -> empty .

    CPAR            reduce using rule 38 (params -> empty .)


state 39

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (120) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 120 (empty -> .)
    MAIN            reduce using rule 120 (empty -> .)
    ALLA            reduce using rule 120 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 46
    empty                          shift and go to state 14

state 40

    (13) varspp -> PTCOMA .

    INT             reduce using rule 13 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 13 (varspp -> PTCOMA .)
    CHAR            reduce using rule 13 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 13 (varspp -> PTCOMA .)
    MAIN            reduce using rule 13 (varspp -> PTCOMA .)
    ALLA            reduce using rule 13 (varspp -> PTCOMA .)


state 41

    (14) varspp -> COMA . insertVar varsppp varspp
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 47

state 42

    (9) varsppp -> initDim CTEI . setDim
    (11) setDim -> . CCOR

    CCOR            shift and go to state 49

    setDim                         shift and go to state 48

state 43

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    estatutos                      shift and go to state 51
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 44

    (18) funcspp -> APAR params CPAR . updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (19) updateParamTable -> .

    PTCOMA          reduce using rule 19 (updateParamTable -> .)

    updateParamTable               shift and go to state 78

state 45

    (37) params -> tipo DOSPNTS . insertParams ididx paramsp
    (39) insertParams -> . ID

    ID              shift and go to state 80

    insertParams                   shift and go to state 79

state 46

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp vars .

    FUNCTION        reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    MAIN            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    ALLA            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)


state 47

    (14) varspp -> COMA insertVar . varsppp varspp
    (9) varsppp -> . initDim CTEI setDim
    (10) varsppp -> . empty
    (12) initDim -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)

    varsppp                        shift and go to state 81
    initDim                        shift and go to state 32
    empty                          shift and go to state 33

state 48

    (9) varsppp -> initDim CTEI setDim .

    PTCOMA          reduce using rule 9 (varsppp -> initDim CTEI setDim .)
    COMA            reduce using rule 9 (varsppp -> initDim CTEI setDim .)


state 49

    (11) setDim -> CCOR .

    PTCOMA          reduce using rule 11 (setDim -> CCOR .)
    COMA            reduce using rule 11 (setDim -> CCOR .)


state 50

    (104) factor -> APAR . exp CPAR
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 82
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 51

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos . CLLA

    CLLA            shift and go to state 84


state 52

    (24) estatutos -> asig . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    asig                           shift and go to state 52
    estatutop                      shift and go to state 85
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 53

    (25) estatutos -> return . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    return                         shift and go to state 53
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 54

    (26) estatutos -> lectura . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    lectura                        shift and go to state 54
    estatutop                      shift and go to state 89
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 55

    (27) estatutos -> escritura . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    escritura                      shift and go to state 55
    estatutop                      shift and go to state 90
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 56

    (28) estatutos -> cond . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    cond                           shift and go to state 56
    estatutop                      shift and go to state 91
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 57

    (29) estatutos -> while . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    while                          shift and go to state 57
    estatutop                      shift and go to state 92
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 58

    (30) estatutos -> for . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    for                            shift and go to state 58
    estatutop                      shift and go to state 93
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 59

    (31) estatutos -> exp . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (120) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 120 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    exp                            shift and go to state 59
    estatutop                      shift and go to state 94
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 60

    (42) asig -> varAs . ididx igualAs asigpp PTCOMA
    (50) ididx -> . corArr exp ver CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 98
    IGUAL           reduce using rule 120 (empty -> .)

    ididx                          shift and go to state 95
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 61

    (54) return -> RETURN . APAR exp CPAR PTCOMA

    APAR            shift and go to state 99


state 62

    (55) lectura -> READ . APAR readId ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 100


state 63

    (59) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 101


state 64

    (66) cond -> IF . APAR exp checkCond THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 102


state 65

    (71) while -> saveWhile . APAR exp checkWhileCond DO ALLA estatutos CLLA

    APAR            shift and go to state 103


state 66

    (74) for -> FOR . varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) varFor -> . ID

    ID              shift and go to state 105

    varFor                         shift and go to state 104

state 67

    (78) exp -> texp . expp
    (79) expp -> . OR exp
    (80) expp -> . empty
    (120) empty -> .

    OR              shift and go to state 107
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    APAR            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)
    CCOR            reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)
    PTCOMA          reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    DO              reduce using rule 120 (empty -> .)

    expp                           shift and go to state 106
    empty                          shift and go to state 108

state 68

    (43) varAs -> ID .
    (118) ctes -> ID . validateExistance factorp
    (119) validateExistance -> .

  ! reduce/reduce conflict for ACOR resolved using rule 43 (varAs -> ID .)
  ! reduce/reduce conflict for IGUAL resolved using rule 43 (varAs -> ID .)
    ACOR            reduce using rule 43 (varAs -> ID .)
    IGUAL           reduce using rule 43 (varAs -> ID .)
    APAR            reduce using rule 119 (validateExistance -> .)
    DIV             reduce using rule 119 (validateExistance -> .)
    POR             reduce using rule 119 (validateExistance -> .)
    MENOS           reduce using rule 119 (validateExistance -> .)
    MAS             reduce using rule 119 (validateExistance -> .)
    MAYQ            reduce using rule 119 (validateExistance -> .)
    MENQ            reduce using rule 119 (validateExistance -> .)
    MAYI            reduce using rule 119 (validateExistance -> .)
    MENI            reduce using rule 119 (validateExistance -> .)
    DIF             reduce using rule 119 (validateExistance -> .)
    AND             reduce using rule 119 (validateExistance -> .)
    OR              reduce using rule 119 (validateExistance -> .)
    RETURN          reduce using rule 119 (validateExistance -> .)
    READ            reduce using rule 119 (validateExistance -> .)
    WRITE           reduce using rule 119 (validateExistance -> .)
    IF              reduce using rule 119 (validateExistance -> .)
    FOR             reduce using rule 119 (validateExistance -> .)
    ID              reduce using rule 119 (validateExistance -> .)
    WHILE           reduce using rule 119 (validateExistance -> .)
    CTEC            reduce using rule 119 (validateExistance -> .)
    CTEI            reduce using rule 119 (validateExistance -> .)
    CTEF            reduce using rule 119 (validateExistance -> .)
    CLLA            reduce using rule 119 (validateExistance -> .)

  ! ACOR            [ reduce using rule 119 (validateExistance -> .) ]
  ! IGUAL           [ reduce using rule 119 (validateExistance -> .) ]

    validateExistance              shift and go to state 109

state 69

    (72) saveWhile -> WHILE .

    APAR            reduce using rule 72 (saveWhile -> WHILE .)


state 70

    (81) texp -> gexp . texpp
    (82) texpp -> . andCheck texp
    (83) texpp -> . empty
    (84) andCheck -> . AND
    (120) empty -> .

    AND             shift and go to state 113
    OR              reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    APAR            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)
    CCOR            reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)
    PTCOMA          reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    DO              reduce using rule 120 (empty -> .)

    texpp                          shift and go to state 110
    andCheck                       shift and go to state 111
    empty                          shift and go to state 112

state 71

    (85) gexp -> mexp . gexpp
    (86) gexpp -> . addPO mexp
    (87) gexpp -> . empty
    (88) addPO -> . MAYQ
    (89) addPO -> . MENQ
    (90) addPO -> . MAYI
    (91) addPO -> . MENI
    (92) addPO -> . IGUAL IGUAL
    (93) addPO -> . DIF
    (120) empty -> .

    MAYQ            shift and go to state 117
    MENQ            shift and go to state 118
    MAYI            shift and go to state 119
    MENI            shift and go to state 120
    IGUAL           shift and go to state 121
    DIF             shift and go to state 122
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    APAR            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)
    CCOR            reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)
    PTCOMA          reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    DO              reduce using rule 120 (empty -> .)

    gexpp                          shift and go to state 114
    addPO                          shift and go to state 115
    empty                          shift and go to state 116

state 72

    (94) mexp -> termino . mexpp
    (95) mexpp -> . operSR mexp
    (96) mexpp -> . empty
    (97) operSR -> . MENOS
    (98) operSR -> . MAS
    (120) empty -> .

    MENOS           shift and go to state 126
    MAS             shift and go to state 127
    MAYQ            reduce using rule 120 (empty -> .)
    MENQ            reduce using rule 120 (empty -> .)
    MAYI            reduce using rule 120 (empty -> .)
    MENI            reduce using rule 120 (empty -> .)
    IGUAL           reduce using rule 120 (empty -> .)
    DIF             reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    APAR            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)
    CCOR            reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)
    PTCOMA          reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    DO              reduce using rule 120 (empty -> .)

    mexpp                          shift and go to state 123
    operSR                         shift and go to state 124
    empty                          shift and go to state 125

state 73

    (99) termino -> factor . terminop
    (100) terminop -> . oper termino
    (101) terminop -> . empty
    (102) oper -> . DIV
    (103) oper -> . POR
    (120) empty -> .

    DIV             shift and go to state 131
    POR             shift and go to state 132
    MENOS           reduce using rule 120 (empty -> .)
    MAS             reduce using rule 120 (empty -> .)
    MAYQ            reduce using rule 120 (empty -> .)
    MENQ            reduce using rule 120 (empty -> .)
    MAYI            reduce using rule 120 (empty -> .)
    MENI            reduce using rule 120 (empty -> .)
    IGUAL           reduce using rule 120 (empty -> .)
    DIF             reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    APAR            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)
    CCOR            reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)
    PTCOMA          reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    DO              reduce using rule 120 (empty -> .)

    terminop                       shift and go to state 128
    oper                           shift and go to state 129
    empty                          shift and go to state 130

state 74

    (105) factor -> ctes .

    DIV             reduce using rule 105 (factor -> ctes .)
    POR             reduce using rule 105 (factor -> ctes .)
    MENOS           reduce using rule 105 (factor -> ctes .)
    MAS             reduce using rule 105 (factor -> ctes .)
    MAYQ            reduce using rule 105 (factor -> ctes .)
    MENQ            reduce using rule 105 (factor -> ctes .)
    MAYI            reduce using rule 105 (factor -> ctes .)
    MENI            reduce using rule 105 (factor -> ctes .)
    IGUAL           reduce using rule 105 (factor -> ctes .)
    DIF             reduce using rule 105 (factor -> ctes .)
    AND             reduce using rule 105 (factor -> ctes .)
    OR              reduce using rule 105 (factor -> ctes .)
    RETURN          reduce using rule 105 (factor -> ctes .)
    READ            reduce using rule 105 (factor -> ctes .)
    WRITE           reduce using rule 105 (factor -> ctes .)
    IF              reduce using rule 105 (factor -> ctes .)
    FOR             reduce using rule 105 (factor -> ctes .)
    ID              reduce using rule 105 (factor -> ctes .)
    WHILE           reduce using rule 105 (factor -> ctes .)
    APAR            reduce using rule 105 (factor -> ctes .)
    CTEC            reduce using rule 105 (factor -> ctes .)
    CTEI            reduce using rule 105 (factor -> ctes .)
    CTEF            reduce using rule 105 (factor -> ctes .)
    CLLA            reduce using rule 105 (factor -> ctes .)
    CPAR            reduce using rule 105 (factor -> ctes .)
    CCOR            reduce using rule 105 (factor -> ctes .)
    COMA            reduce using rule 105 (factor -> ctes .)
    PTCOMA          reduce using rule 105 (factor -> ctes .)
    TO              reduce using rule 105 (factor -> ctes .)
    DO              reduce using rule 105 (factor -> ctes .)


state 75

    (115) ctes -> CTEC .

    DIV             reduce using rule 115 (ctes -> CTEC .)
    POR             reduce using rule 115 (ctes -> CTEC .)
    MENOS           reduce using rule 115 (ctes -> CTEC .)
    MAS             reduce using rule 115 (ctes -> CTEC .)
    MAYQ            reduce using rule 115 (ctes -> CTEC .)
    MENQ            reduce using rule 115 (ctes -> CTEC .)
    MAYI            reduce using rule 115 (ctes -> CTEC .)
    MENI            reduce using rule 115 (ctes -> CTEC .)
    IGUAL           reduce using rule 115 (ctes -> CTEC .)
    DIF             reduce using rule 115 (ctes -> CTEC .)
    AND             reduce using rule 115 (ctes -> CTEC .)
    OR              reduce using rule 115 (ctes -> CTEC .)
    RETURN          reduce using rule 115 (ctes -> CTEC .)
    READ            reduce using rule 115 (ctes -> CTEC .)
    WRITE           reduce using rule 115 (ctes -> CTEC .)
    IF              reduce using rule 115 (ctes -> CTEC .)
    FOR             reduce using rule 115 (ctes -> CTEC .)
    ID              reduce using rule 115 (ctes -> CTEC .)
    WHILE           reduce using rule 115 (ctes -> CTEC .)
    APAR            reduce using rule 115 (ctes -> CTEC .)
    CTEC            reduce using rule 115 (ctes -> CTEC .)
    CTEI            reduce using rule 115 (ctes -> CTEC .)
    CTEF            reduce using rule 115 (ctes -> CTEC .)
    CLLA            reduce using rule 115 (ctes -> CTEC .)
    CPAR            reduce using rule 115 (ctes -> CTEC .)
    CCOR            reduce using rule 115 (ctes -> CTEC .)
    COMA            reduce using rule 115 (ctes -> CTEC .)
    PTCOMA          reduce using rule 115 (ctes -> CTEC .)
    TO              reduce using rule 115 (ctes -> CTEC .)
    DO              reduce using rule 115 (ctes -> CTEC .)


state 76

    (116) ctes -> CTEI .

    DIV             reduce using rule 116 (ctes -> CTEI .)
    POR             reduce using rule 116 (ctes -> CTEI .)
    MENOS           reduce using rule 116 (ctes -> CTEI .)
    MAS             reduce using rule 116 (ctes -> CTEI .)
    MAYQ            reduce using rule 116 (ctes -> CTEI .)
    MENQ            reduce using rule 116 (ctes -> CTEI .)
    MAYI            reduce using rule 116 (ctes -> CTEI .)
    MENI            reduce using rule 116 (ctes -> CTEI .)
    IGUAL           reduce using rule 116 (ctes -> CTEI .)
    DIF             reduce using rule 116 (ctes -> CTEI .)
    AND             reduce using rule 116 (ctes -> CTEI .)
    OR              reduce using rule 116 (ctes -> CTEI .)
    RETURN          reduce using rule 116 (ctes -> CTEI .)
    READ            reduce using rule 116 (ctes -> CTEI .)
    WRITE           reduce using rule 116 (ctes -> CTEI .)
    IF              reduce using rule 116 (ctes -> CTEI .)
    FOR             reduce using rule 116 (ctes -> CTEI .)
    ID              reduce using rule 116 (ctes -> CTEI .)
    WHILE           reduce using rule 116 (ctes -> CTEI .)
    APAR            reduce using rule 116 (ctes -> CTEI .)
    CTEC            reduce using rule 116 (ctes -> CTEI .)
    CTEI            reduce using rule 116 (ctes -> CTEI .)
    CTEF            reduce using rule 116 (ctes -> CTEI .)
    CLLA            reduce using rule 116 (ctes -> CTEI .)
    CPAR            reduce using rule 116 (ctes -> CTEI .)
    CCOR            reduce using rule 116 (ctes -> CTEI .)
    COMA            reduce using rule 116 (ctes -> CTEI .)
    PTCOMA          reduce using rule 116 (ctes -> CTEI .)
    TO              reduce using rule 116 (ctes -> CTEI .)
    DO              reduce using rule 116 (ctes -> CTEI .)


state 77

    (117) ctes -> CTEF .

    DIV             reduce using rule 117 (ctes -> CTEF .)
    POR             reduce using rule 117 (ctes -> CTEF .)
    MENOS           reduce using rule 117 (ctes -> CTEF .)
    MAS             reduce using rule 117 (ctes -> CTEF .)
    MAYQ            reduce using rule 117 (ctes -> CTEF .)
    MENQ            reduce using rule 117 (ctes -> CTEF .)
    MAYI            reduce using rule 117 (ctes -> CTEF .)
    MENI            reduce using rule 117 (ctes -> CTEF .)
    IGUAL           reduce using rule 117 (ctes -> CTEF .)
    DIF             reduce using rule 117 (ctes -> CTEF .)
    AND             reduce using rule 117 (ctes -> CTEF .)
    OR              reduce using rule 117 (ctes -> CTEF .)
    RETURN          reduce using rule 117 (ctes -> CTEF .)
    READ            reduce using rule 117 (ctes -> CTEF .)
    WRITE           reduce using rule 117 (ctes -> CTEF .)
    IF              reduce using rule 117 (ctes -> CTEF .)
    FOR             reduce using rule 117 (ctes -> CTEF .)
    ID              reduce using rule 117 (ctes -> CTEF .)
    WHILE           reduce using rule 117 (ctes -> CTEF .)
    APAR            reduce using rule 117 (ctes -> CTEF .)
    CTEC            reduce using rule 117 (ctes -> CTEF .)
    CTEI            reduce using rule 117 (ctes -> CTEF .)
    CTEF            reduce using rule 117 (ctes -> CTEF .)
    CLLA            reduce using rule 117 (ctes -> CTEF .)
    CPAR            reduce using rule 117 (ctes -> CTEF .)
    CCOR            reduce using rule 117 (ctes -> CTEF .)
    COMA            reduce using rule 117 (ctes -> CTEF .)
    PTCOMA          reduce using rule 117 (ctes -> CTEF .)
    TO              reduce using rule 117 (ctes -> CTEF .)
    DO              reduce using rule 117 (ctes -> CTEF .)


state 78

    (18) funcspp -> APAR params CPAR updateParamTable . PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    PTCOMA          shift and go to state 133


state 79

    (37) params -> tipo DOSPNTS insertParams . ididx paramsp
    (50) ididx -> . corArr exp ver CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 98
    COMA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)

    ididx                          shift and go to state 134
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 80

    (39) insertParams -> ID .

    ACOR            reduce using rule 39 (insertParams -> ID .)
    COMA            reduce using rule 39 (insertParams -> ID .)
    CPAR            reduce using rule 39 (insertParams -> ID .)


state 81

    (14) varspp -> COMA insertVar varsppp . varspp
    (13) varspp -> . PTCOMA
    (14) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 40
    COMA            shift and go to state 41

    varspp                         shift and go to state 135

state 82

    (104) factor -> APAR exp . CPAR

    CPAR            shift and go to state 136


state 83

    (118) ctes -> ID . validateExistance factorp
    (119) validateExistance -> .

    APAR            reduce using rule 119 (validateExistance -> .)
    ACOR            reduce using rule 119 (validateExistance -> .)
    DIV             reduce using rule 119 (validateExistance -> .)
    POR             reduce using rule 119 (validateExistance -> .)
    MENOS           reduce using rule 119 (validateExistance -> .)
    MAS             reduce using rule 119 (validateExistance -> .)
    MAYQ            reduce using rule 119 (validateExistance -> .)
    MENQ            reduce using rule 119 (validateExistance -> .)
    MAYI            reduce using rule 119 (validateExistance -> .)
    MENI            reduce using rule 119 (validateExistance -> .)
    IGUAL           reduce using rule 119 (validateExistance -> .)
    DIF             reduce using rule 119 (validateExistance -> .)
    AND             reduce using rule 119 (validateExistance -> .)
    OR              reduce using rule 119 (validateExistance -> .)
    CPAR            reduce using rule 119 (validateExistance -> .)
    CCOR            reduce using rule 119 (validateExistance -> .)
    COMA            reduce using rule 119 (validateExistance -> .)
    RETURN          reduce using rule 119 (validateExistance -> .)
    READ            reduce using rule 119 (validateExistance -> .)
    WRITE           reduce using rule 119 (validateExistance -> .)
    IF              reduce using rule 119 (validateExistance -> .)
    FOR             reduce using rule 119 (validateExistance -> .)
    ID              reduce using rule 119 (validateExistance -> .)
    WHILE           reduce using rule 119 (validateExistance -> .)
    CTEC            reduce using rule 119 (validateExistance -> .)
    CTEI            reduce using rule 119 (validateExistance -> .)
    CTEF            reduce using rule 119 (validateExistance -> .)
    CLLA            reduce using rule 119 (validateExistance -> .)
    PTCOMA          reduce using rule 119 (validateExistance -> .)
    TO              reduce using rule 119 (validateExistance -> .)
    DO              reduce using rule 119 (validateExistance -> .)

    validateExistance              shift and go to state 109

state 84

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .)


state 85

    (24) estatutos -> asig estatutop .

    CLLA            reduce using rule 24 (estatutos -> asig estatutop .)


state 86

    (32) estatutop -> estatutos .

    CLLA            reduce using rule 32 (estatutop -> estatutos .)


state 87

    (33) estatutop -> empty .

    CLLA            reduce using rule 33 (estatutop -> empty .)


state 88

    (25) estatutos -> return estatutop .

    CLLA            reduce using rule 25 (estatutos -> return estatutop .)


state 89

    (26) estatutos -> lectura estatutop .

    CLLA            reduce using rule 26 (estatutos -> lectura estatutop .)


state 90

    (27) estatutos -> escritura estatutop .

    CLLA            reduce using rule 27 (estatutos -> escritura estatutop .)


state 91

    (28) estatutos -> cond estatutop .

    CLLA            reduce using rule 28 (estatutos -> cond estatutop .)


state 92

    (29) estatutos -> while estatutop .

    CLLA            reduce using rule 29 (estatutos -> while estatutop .)


state 93

    (30) estatutos -> for estatutop .

    CLLA            reduce using rule 30 (estatutos -> for estatutop .)


state 94

    (31) estatutos -> exp estatutop .

    CLLA            reduce using rule 31 (estatutos -> exp estatutop .)


state 95

    (42) asig -> varAs ididx . igualAs asigpp PTCOMA
    (44) igualAs -> . IGUAL

    IGUAL           shift and go to state 138

    igualAs                        shift and go to state 137

state 96

    (50) ididx -> corArr . exp ver CCOR
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 139
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 97

    (51) ididx -> empty .

    IGUAL           reduce using rule 51 (ididx -> empty .)
    COMA            reduce using rule 51 (ididx -> empty .)
    CPAR            reduce using rule 51 (ididx -> empty .)


state 98

    (52) corArr -> ACOR .

    APAR            reduce using rule 52 (corArr -> ACOR .)
    CTEC            reduce using rule 52 (corArr -> ACOR .)
    CTEI            reduce using rule 52 (corArr -> ACOR .)
    CTEF            reduce using rule 52 (corArr -> ACOR .)
    ID              reduce using rule 52 (corArr -> ACOR .)


state 99

    (54) return -> RETURN APAR . exp CPAR PTCOMA
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 140
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 100

    (55) lectura -> READ APAR . readId ididx lecturapp CPAR PTCOMA
    (56) readId -> . ID

    ID              shift and go to state 142

    readId                         shift and go to state 141

state 101

    (59) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (60) escriturap -> . pushEsc
    (61) escriturap -> . exp
    (62) pushEsc -> . STRING
    (63) pushEsc -> . CTEC
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 146
    CTEC            shift and go to state 147
    APAR            shift and go to state 50
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    escriturap                     shift and go to state 143
    pushEsc                        shift and go to state 144
    exp                            shift and go to state 145
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 102

    (66) cond -> IF APAR . exp checkCond THEN ALLA estatutos CLLA condpp
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 148
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 103

    (71) while -> saveWhile APAR . exp checkWhileCond DO ALLA estatutos CLLA
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 149
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 104

    (74) for -> FOR varFor . ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (50) ididx -> . corArr exp ver CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 98
    IGUAL           reduce using rule 120 (empty -> .)

    ididx                          shift and go to state 150
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 105

    (75) varFor -> ID .

    ACOR            reduce using rule 75 (varFor -> ID .)
    IGUAL           reduce using rule 75 (varFor -> ID .)


state 106

    (78) exp -> texp expp .

    RETURN          reduce using rule 78 (exp -> texp expp .)
    READ            reduce using rule 78 (exp -> texp expp .)
    WRITE           reduce using rule 78 (exp -> texp expp .)
    IF              reduce using rule 78 (exp -> texp expp .)
    FOR             reduce using rule 78 (exp -> texp expp .)
    ID              reduce using rule 78 (exp -> texp expp .)
    WHILE           reduce using rule 78 (exp -> texp expp .)
    APAR            reduce using rule 78 (exp -> texp expp .)
    CTEC            reduce using rule 78 (exp -> texp expp .)
    CTEI            reduce using rule 78 (exp -> texp expp .)
    CTEF            reduce using rule 78 (exp -> texp expp .)
    CLLA            reduce using rule 78 (exp -> texp expp .)
    CPAR            reduce using rule 78 (exp -> texp expp .)
    CCOR            reduce using rule 78 (exp -> texp expp .)
    COMA            reduce using rule 78 (exp -> texp expp .)
    PTCOMA          reduce using rule 78 (exp -> texp expp .)
    TO              reduce using rule 78 (exp -> texp expp .)
    DO              reduce using rule 78 (exp -> texp expp .)


state 107

    (79) expp -> OR . exp
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 151
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 108

    (80) expp -> empty .

    RETURN          reduce using rule 80 (expp -> empty .)
    READ            reduce using rule 80 (expp -> empty .)
    WRITE           reduce using rule 80 (expp -> empty .)
    IF              reduce using rule 80 (expp -> empty .)
    FOR             reduce using rule 80 (expp -> empty .)
    ID              reduce using rule 80 (expp -> empty .)
    WHILE           reduce using rule 80 (expp -> empty .)
    APAR            reduce using rule 80 (expp -> empty .)
    CTEC            reduce using rule 80 (expp -> empty .)
    CTEI            reduce using rule 80 (expp -> empty .)
    CTEF            reduce using rule 80 (expp -> empty .)
    CLLA            reduce using rule 80 (expp -> empty .)
    CPAR            reduce using rule 80 (expp -> empty .)
    CCOR            reduce using rule 80 (expp -> empty .)
    COMA            reduce using rule 80 (expp -> empty .)
    PTCOMA          reduce using rule 80 (expp -> empty .)
    TO              reduce using rule 80 (expp -> empty .)
    DO              reduce using rule 80 (expp -> empty .)


state 109

    (118) ctes -> ID validateExistance . factorp
    (106) factorp -> . APAR createEra exp valParams factorpp cparParams
    (107) factorp -> . corArr exp ver endArrfac
    (108) factorp -> . empty
    (52) corArr -> . ACOR
    (120) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 153
    ACOR            shift and go to state 98
    DIV             reduce using rule 120 (empty -> .)
    POR             reduce using rule 120 (empty -> .)
    MENOS           reduce using rule 120 (empty -> .)
    MAS             reduce using rule 120 (empty -> .)
    MAYQ            reduce using rule 120 (empty -> .)
    MENQ            reduce using rule 120 (empty -> .)
    MAYI            reduce using rule 120 (empty -> .)
    MENI            reduce using rule 120 (empty -> .)
    IGUAL           reduce using rule 120 (empty -> .)
    DIF             reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)
    CCOR            reduce using rule 120 (empty -> .)
    COMA            reduce using rule 120 (empty -> .)
    PTCOMA          reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    DO              reduce using rule 120 (empty -> .)

  ! APAR            [ reduce using rule 120 (empty -> .) ]

    factorp                        shift and go to state 152
    corArr                         shift and go to state 154
    empty                          shift and go to state 155

state 110

    (81) texp -> gexp texpp .

    OR              reduce using rule 81 (texp -> gexp texpp .)
    RETURN          reduce using rule 81 (texp -> gexp texpp .)
    READ            reduce using rule 81 (texp -> gexp texpp .)
    WRITE           reduce using rule 81 (texp -> gexp texpp .)
    IF              reduce using rule 81 (texp -> gexp texpp .)
    FOR             reduce using rule 81 (texp -> gexp texpp .)
    ID              reduce using rule 81 (texp -> gexp texpp .)
    WHILE           reduce using rule 81 (texp -> gexp texpp .)
    APAR            reduce using rule 81 (texp -> gexp texpp .)
    CTEC            reduce using rule 81 (texp -> gexp texpp .)
    CTEI            reduce using rule 81 (texp -> gexp texpp .)
    CTEF            reduce using rule 81 (texp -> gexp texpp .)
    CLLA            reduce using rule 81 (texp -> gexp texpp .)
    CPAR            reduce using rule 81 (texp -> gexp texpp .)
    CCOR            reduce using rule 81 (texp -> gexp texpp .)
    COMA            reduce using rule 81 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 81 (texp -> gexp texpp .)
    TO              reduce using rule 81 (texp -> gexp texpp .)
    DO              reduce using rule 81 (texp -> gexp texpp .)


state 111

    (82) texpp -> andCheck . texp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    texp                           shift and go to state 156
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 112

    (83) texpp -> empty .

    OR              reduce using rule 83 (texpp -> empty .)
    RETURN          reduce using rule 83 (texpp -> empty .)
    READ            reduce using rule 83 (texpp -> empty .)
    WRITE           reduce using rule 83 (texpp -> empty .)
    IF              reduce using rule 83 (texpp -> empty .)
    FOR             reduce using rule 83 (texpp -> empty .)
    ID              reduce using rule 83 (texpp -> empty .)
    WHILE           reduce using rule 83 (texpp -> empty .)
    APAR            reduce using rule 83 (texpp -> empty .)
    CTEC            reduce using rule 83 (texpp -> empty .)
    CTEI            reduce using rule 83 (texpp -> empty .)
    CTEF            reduce using rule 83 (texpp -> empty .)
    CLLA            reduce using rule 83 (texpp -> empty .)
    CPAR            reduce using rule 83 (texpp -> empty .)
    CCOR            reduce using rule 83 (texpp -> empty .)
    COMA            reduce using rule 83 (texpp -> empty .)
    PTCOMA          reduce using rule 83 (texpp -> empty .)
    TO              reduce using rule 83 (texpp -> empty .)
    DO              reduce using rule 83 (texpp -> empty .)


state 113

    (84) andCheck -> AND .

    APAR            reduce using rule 84 (andCheck -> AND .)
    CTEC            reduce using rule 84 (andCheck -> AND .)
    CTEI            reduce using rule 84 (andCheck -> AND .)
    CTEF            reduce using rule 84 (andCheck -> AND .)
    ID              reduce using rule 84 (andCheck -> AND .)


state 114

    (85) gexp -> mexp gexpp .

    AND             reduce using rule 85 (gexp -> mexp gexpp .)
    OR              reduce using rule 85 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 85 (gexp -> mexp gexpp .)
    READ            reduce using rule 85 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 85 (gexp -> mexp gexpp .)
    IF              reduce using rule 85 (gexp -> mexp gexpp .)
    FOR             reduce using rule 85 (gexp -> mexp gexpp .)
    ID              reduce using rule 85 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 85 (gexp -> mexp gexpp .)
    APAR            reduce using rule 85 (gexp -> mexp gexpp .)
    CTEC            reduce using rule 85 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 85 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 85 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 85 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 85 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 85 (gexp -> mexp gexpp .)
    COMA            reduce using rule 85 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 85 (gexp -> mexp gexpp .)
    TO              reduce using rule 85 (gexp -> mexp gexpp .)
    DO              reduce using rule 85 (gexp -> mexp gexpp .)


state 115

    (86) gexpp -> addPO . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    mexp                           shift and go to state 157
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 116

    (87) gexpp -> empty .

    AND             reduce using rule 87 (gexpp -> empty .)
    OR              reduce using rule 87 (gexpp -> empty .)
    RETURN          reduce using rule 87 (gexpp -> empty .)
    READ            reduce using rule 87 (gexpp -> empty .)
    WRITE           reduce using rule 87 (gexpp -> empty .)
    IF              reduce using rule 87 (gexpp -> empty .)
    FOR             reduce using rule 87 (gexpp -> empty .)
    ID              reduce using rule 87 (gexpp -> empty .)
    WHILE           reduce using rule 87 (gexpp -> empty .)
    APAR            reduce using rule 87 (gexpp -> empty .)
    CTEC            reduce using rule 87 (gexpp -> empty .)
    CTEI            reduce using rule 87 (gexpp -> empty .)
    CTEF            reduce using rule 87 (gexpp -> empty .)
    CLLA            reduce using rule 87 (gexpp -> empty .)
    CPAR            reduce using rule 87 (gexpp -> empty .)
    CCOR            reduce using rule 87 (gexpp -> empty .)
    COMA            reduce using rule 87 (gexpp -> empty .)
    PTCOMA          reduce using rule 87 (gexpp -> empty .)
    TO              reduce using rule 87 (gexpp -> empty .)
    DO              reduce using rule 87 (gexpp -> empty .)


state 117

    (88) addPO -> MAYQ .

    APAR            reduce using rule 88 (addPO -> MAYQ .)
    CTEC            reduce using rule 88 (addPO -> MAYQ .)
    CTEI            reduce using rule 88 (addPO -> MAYQ .)
    CTEF            reduce using rule 88 (addPO -> MAYQ .)
    ID              reduce using rule 88 (addPO -> MAYQ .)


state 118

    (89) addPO -> MENQ .

    APAR            reduce using rule 89 (addPO -> MENQ .)
    CTEC            reduce using rule 89 (addPO -> MENQ .)
    CTEI            reduce using rule 89 (addPO -> MENQ .)
    CTEF            reduce using rule 89 (addPO -> MENQ .)
    ID              reduce using rule 89 (addPO -> MENQ .)


state 119

    (90) addPO -> MAYI .

    APAR            reduce using rule 90 (addPO -> MAYI .)
    CTEC            reduce using rule 90 (addPO -> MAYI .)
    CTEI            reduce using rule 90 (addPO -> MAYI .)
    CTEF            reduce using rule 90 (addPO -> MAYI .)
    ID              reduce using rule 90 (addPO -> MAYI .)


state 120

    (91) addPO -> MENI .

    APAR            reduce using rule 91 (addPO -> MENI .)
    CTEC            reduce using rule 91 (addPO -> MENI .)
    CTEI            reduce using rule 91 (addPO -> MENI .)
    CTEF            reduce using rule 91 (addPO -> MENI .)
    ID              reduce using rule 91 (addPO -> MENI .)


state 121

    (92) addPO -> IGUAL . IGUAL

    IGUAL           shift and go to state 158


state 122

    (93) addPO -> DIF .

    APAR            reduce using rule 93 (addPO -> DIF .)
    CTEC            reduce using rule 93 (addPO -> DIF .)
    CTEI            reduce using rule 93 (addPO -> DIF .)
    CTEF            reduce using rule 93 (addPO -> DIF .)
    ID              reduce using rule 93 (addPO -> DIF .)


state 123

    (94) mexp -> termino mexpp .

    MAYQ            reduce using rule 94 (mexp -> termino mexpp .)
    MENQ            reduce using rule 94 (mexp -> termino mexpp .)
    MAYI            reduce using rule 94 (mexp -> termino mexpp .)
    MENI            reduce using rule 94 (mexp -> termino mexpp .)
    IGUAL           reduce using rule 94 (mexp -> termino mexpp .)
    DIF             reduce using rule 94 (mexp -> termino mexpp .)
    AND             reduce using rule 94 (mexp -> termino mexpp .)
    OR              reduce using rule 94 (mexp -> termino mexpp .)
    RETURN          reduce using rule 94 (mexp -> termino mexpp .)
    READ            reduce using rule 94 (mexp -> termino mexpp .)
    WRITE           reduce using rule 94 (mexp -> termino mexpp .)
    IF              reduce using rule 94 (mexp -> termino mexpp .)
    FOR             reduce using rule 94 (mexp -> termino mexpp .)
    ID              reduce using rule 94 (mexp -> termino mexpp .)
    WHILE           reduce using rule 94 (mexp -> termino mexpp .)
    APAR            reduce using rule 94 (mexp -> termino mexpp .)
    CTEC            reduce using rule 94 (mexp -> termino mexpp .)
    CTEI            reduce using rule 94 (mexp -> termino mexpp .)
    CTEF            reduce using rule 94 (mexp -> termino mexpp .)
    CLLA            reduce using rule 94 (mexp -> termino mexpp .)
    CPAR            reduce using rule 94 (mexp -> termino mexpp .)
    CCOR            reduce using rule 94 (mexp -> termino mexpp .)
    COMA            reduce using rule 94 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 94 (mexp -> termino mexpp .)
    TO              reduce using rule 94 (mexp -> termino mexpp .)
    DO              reduce using rule 94 (mexp -> termino mexpp .)


state 124

    (95) mexpp -> operSR . mexp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    mexp                           shift and go to state 159
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 125

    (96) mexpp -> empty .

    MAYQ            reduce using rule 96 (mexpp -> empty .)
    MENQ            reduce using rule 96 (mexpp -> empty .)
    MAYI            reduce using rule 96 (mexpp -> empty .)
    MENI            reduce using rule 96 (mexpp -> empty .)
    IGUAL           reduce using rule 96 (mexpp -> empty .)
    DIF             reduce using rule 96 (mexpp -> empty .)
    AND             reduce using rule 96 (mexpp -> empty .)
    OR              reduce using rule 96 (mexpp -> empty .)
    RETURN          reduce using rule 96 (mexpp -> empty .)
    READ            reduce using rule 96 (mexpp -> empty .)
    WRITE           reduce using rule 96 (mexpp -> empty .)
    IF              reduce using rule 96 (mexpp -> empty .)
    FOR             reduce using rule 96 (mexpp -> empty .)
    ID              reduce using rule 96 (mexpp -> empty .)
    WHILE           reduce using rule 96 (mexpp -> empty .)
    APAR            reduce using rule 96 (mexpp -> empty .)
    CTEC            reduce using rule 96 (mexpp -> empty .)
    CTEI            reduce using rule 96 (mexpp -> empty .)
    CTEF            reduce using rule 96 (mexpp -> empty .)
    CLLA            reduce using rule 96 (mexpp -> empty .)
    CPAR            reduce using rule 96 (mexpp -> empty .)
    CCOR            reduce using rule 96 (mexpp -> empty .)
    COMA            reduce using rule 96 (mexpp -> empty .)
    PTCOMA          reduce using rule 96 (mexpp -> empty .)
    TO              reduce using rule 96 (mexpp -> empty .)
    DO              reduce using rule 96 (mexpp -> empty .)


state 126

    (97) operSR -> MENOS .

    APAR            reduce using rule 97 (operSR -> MENOS .)
    CTEC            reduce using rule 97 (operSR -> MENOS .)
    CTEI            reduce using rule 97 (operSR -> MENOS .)
    CTEF            reduce using rule 97 (operSR -> MENOS .)
    ID              reduce using rule 97 (operSR -> MENOS .)


state 127

    (98) operSR -> MAS .

    APAR            reduce using rule 98 (operSR -> MAS .)
    CTEC            reduce using rule 98 (operSR -> MAS .)
    CTEI            reduce using rule 98 (operSR -> MAS .)
    CTEF            reduce using rule 98 (operSR -> MAS .)
    ID              reduce using rule 98 (operSR -> MAS .)


state 128

    (99) termino -> factor terminop .

    MENOS           reduce using rule 99 (termino -> factor terminop .)
    MAS             reduce using rule 99 (termino -> factor terminop .)
    MAYQ            reduce using rule 99 (termino -> factor terminop .)
    MENQ            reduce using rule 99 (termino -> factor terminop .)
    MAYI            reduce using rule 99 (termino -> factor terminop .)
    MENI            reduce using rule 99 (termino -> factor terminop .)
    IGUAL           reduce using rule 99 (termino -> factor terminop .)
    DIF             reduce using rule 99 (termino -> factor terminop .)
    AND             reduce using rule 99 (termino -> factor terminop .)
    OR              reduce using rule 99 (termino -> factor terminop .)
    RETURN          reduce using rule 99 (termino -> factor terminop .)
    READ            reduce using rule 99 (termino -> factor terminop .)
    WRITE           reduce using rule 99 (termino -> factor terminop .)
    IF              reduce using rule 99 (termino -> factor terminop .)
    FOR             reduce using rule 99 (termino -> factor terminop .)
    ID              reduce using rule 99 (termino -> factor terminop .)
    WHILE           reduce using rule 99 (termino -> factor terminop .)
    APAR            reduce using rule 99 (termino -> factor terminop .)
    CTEC            reduce using rule 99 (termino -> factor terminop .)
    CTEI            reduce using rule 99 (termino -> factor terminop .)
    CTEF            reduce using rule 99 (termino -> factor terminop .)
    CLLA            reduce using rule 99 (termino -> factor terminop .)
    CPAR            reduce using rule 99 (termino -> factor terminop .)
    CCOR            reduce using rule 99 (termino -> factor terminop .)
    COMA            reduce using rule 99 (termino -> factor terminop .)
    PTCOMA          reduce using rule 99 (termino -> factor terminop .)
    TO              reduce using rule 99 (termino -> factor terminop .)
    DO              reduce using rule 99 (termino -> factor terminop .)


state 129

    (100) terminop -> oper . termino
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    termino                        shift and go to state 160
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 130

    (101) terminop -> empty .

    MENOS           reduce using rule 101 (terminop -> empty .)
    MAS             reduce using rule 101 (terminop -> empty .)
    MAYQ            reduce using rule 101 (terminop -> empty .)
    MENQ            reduce using rule 101 (terminop -> empty .)
    MAYI            reduce using rule 101 (terminop -> empty .)
    MENI            reduce using rule 101 (terminop -> empty .)
    IGUAL           reduce using rule 101 (terminop -> empty .)
    DIF             reduce using rule 101 (terminop -> empty .)
    AND             reduce using rule 101 (terminop -> empty .)
    OR              reduce using rule 101 (terminop -> empty .)
    RETURN          reduce using rule 101 (terminop -> empty .)
    READ            reduce using rule 101 (terminop -> empty .)
    WRITE           reduce using rule 101 (terminop -> empty .)
    IF              reduce using rule 101 (terminop -> empty .)
    FOR             reduce using rule 101 (terminop -> empty .)
    ID              reduce using rule 101 (terminop -> empty .)
    WHILE           reduce using rule 101 (terminop -> empty .)
    APAR            reduce using rule 101 (terminop -> empty .)
    CTEC            reduce using rule 101 (terminop -> empty .)
    CTEI            reduce using rule 101 (terminop -> empty .)
    CTEF            reduce using rule 101 (terminop -> empty .)
    CLLA            reduce using rule 101 (terminop -> empty .)
    CPAR            reduce using rule 101 (terminop -> empty .)
    CCOR            reduce using rule 101 (terminop -> empty .)
    COMA            reduce using rule 101 (terminop -> empty .)
    PTCOMA          reduce using rule 101 (terminop -> empty .)
    TO              reduce using rule 101 (terminop -> empty .)
    DO              reduce using rule 101 (terminop -> empty .)


state 131

    (102) oper -> DIV .

    APAR            reduce using rule 102 (oper -> DIV .)
    CTEC            reduce using rule 102 (oper -> DIV .)
    CTEI            reduce using rule 102 (oper -> DIV .)
    CTEF            reduce using rule 102 (oper -> DIV .)
    ID              reduce using rule 102 (oper -> DIV .)


state 132

    (103) oper -> POR .

    APAR            reduce using rule 103 (oper -> POR .)
    CTEC            reduce using rule 103 (oper -> POR .)
    CTEI            reduce using rule 103 (oper -> POR .)
    CTEF            reduce using rule 103 (oper -> POR .)
    ID              reduce using rule 103 (oper -> POR .)


state 133

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA . varss ALLA addsize estatutos CLLA endfunction funcs
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (120) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 120 (empty -> .)

    varss                          shift and go to state 161
    empty                          shift and go to state 7

state 134

    (37) params -> tipo DOSPNTS insertParams ididx . paramsp
    (40) paramsp -> . COMA params
    (41) paramsp -> . empty
    (120) empty -> .

    COMA            shift and go to state 163
    CPAR            reduce using rule 120 (empty -> .)

    paramsp                        shift and go to state 162
    empty                          shift and go to state 164

state 135

    (14) varspp -> COMA insertVar varsppp varspp .

    INT             reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    FLOAT           reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    CHAR            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    FUNCTION        reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    MAIN            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    ALLA            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)


state 136

    (104) factor -> APAR exp CPAR .

    DIV             reduce using rule 104 (factor -> APAR exp CPAR .)
    POR             reduce using rule 104 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 104 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 104 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 104 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 104 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 104 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 104 (factor -> APAR exp CPAR .)
    IGUAL           reduce using rule 104 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 104 (factor -> APAR exp CPAR .)
    AND             reduce using rule 104 (factor -> APAR exp CPAR .)
    OR              reduce using rule 104 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 104 (factor -> APAR exp CPAR .)
    READ            reduce using rule 104 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 104 (factor -> APAR exp CPAR .)
    IF              reduce using rule 104 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 104 (factor -> APAR exp CPAR .)
    ID              reduce using rule 104 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 104 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 104 (factor -> APAR exp CPAR .)
    CTEC            reduce using rule 104 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 104 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 104 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 104 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 104 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 104 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 104 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 104 (factor -> APAR exp CPAR .)
    TO              reduce using rule 104 (factor -> APAR exp CPAR .)
    DO              reduce using rule 104 (factor -> APAR exp CPAR .)


state 137

    (42) asig -> varAs ididx igualAs . asigpp PTCOMA
    (49) asigpp -> . exp
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    asigpp                         shift and go to state 165
    exp                            shift and go to state 166
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 138

    (44) igualAs -> IGUAL .

    APAR            reduce using rule 44 (igualAs -> IGUAL .)
    CTEC            reduce using rule 44 (igualAs -> IGUAL .)
    CTEI            reduce using rule 44 (igualAs -> IGUAL .)
    CTEF            reduce using rule 44 (igualAs -> IGUAL .)
    ID              reduce using rule 44 (igualAs -> IGUAL .)


state 139

    (50) ididx -> corArr exp . ver CCOR
    (53) ver -> .

    CCOR            reduce using rule 53 (ver -> .)

    ver                            shift and go to state 167

state 140

    (54) return -> RETURN APAR exp . CPAR PTCOMA

    CPAR            shift and go to state 168


state 141

    (55) lectura -> READ APAR readId . ididx lecturapp CPAR PTCOMA
    (50) ididx -> . corArr exp ver CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 98
    COMA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)

    ididx                          shift and go to state 169
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 142

    (56) readId -> ID .

    ACOR            reduce using rule 56 (readId -> ID .)
    COMA            reduce using rule 56 (readId -> ID .)
    CPAR            reduce using rule 56 (readId -> ID .)


state 143

    (59) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (64) escriturapp -> . COMA escriturap
    (65) escriturapp -> . empty
    (120) empty -> .

    COMA            shift and go to state 171
    CPAR            reduce using rule 120 (empty -> .)

    escriturapp                    shift and go to state 170
    empty                          shift and go to state 172

state 144

    (60) escriturap -> pushEsc .

    COMA            reduce using rule 60 (escriturap -> pushEsc .)
    CPAR            reduce using rule 60 (escriturap -> pushEsc .)


state 145

    (61) escriturap -> exp .

    COMA            reduce using rule 61 (escriturap -> exp .)
    CPAR            reduce using rule 61 (escriturap -> exp .)


state 146

    (62) pushEsc -> STRING .

    COMA            reduce using rule 62 (pushEsc -> STRING .)
    CPAR            reduce using rule 62 (pushEsc -> STRING .)


state 147

    (63) pushEsc -> CTEC .
    (115) ctes -> CTEC .

  ! reduce/reduce conflict for COMA resolved using rule 63 (pushEsc -> CTEC .)
  ! reduce/reduce conflict for CPAR resolved using rule 63 (pushEsc -> CTEC .)
    COMA            reduce using rule 63 (pushEsc -> CTEC .)
    CPAR            reduce using rule 63 (pushEsc -> CTEC .)
    DIV             reduce using rule 115 (ctes -> CTEC .)
    POR             reduce using rule 115 (ctes -> CTEC .)
    MENOS           reduce using rule 115 (ctes -> CTEC .)
    MAS             reduce using rule 115 (ctes -> CTEC .)
    MAYQ            reduce using rule 115 (ctes -> CTEC .)
    MENQ            reduce using rule 115 (ctes -> CTEC .)
    MAYI            reduce using rule 115 (ctes -> CTEC .)
    MENI            reduce using rule 115 (ctes -> CTEC .)
    IGUAL           reduce using rule 115 (ctes -> CTEC .)
    DIF             reduce using rule 115 (ctes -> CTEC .)
    AND             reduce using rule 115 (ctes -> CTEC .)
    OR              reduce using rule 115 (ctes -> CTEC .)

  ! COMA            [ reduce using rule 115 (ctes -> CTEC .) ]
  ! CPAR            [ reduce using rule 115 (ctes -> CTEC .) ]


state 148

    (66) cond -> IF APAR exp . checkCond THEN ALLA estatutos CLLA condpp
    (70) checkCond -> . CPAR

    CPAR            shift and go to state 174

    checkCond                      shift and go to state 173

state 149

    (71) while -> saveWhile APAR exp . checkWhileCond DO ALLA estatutos CLLA
    (73) checkWhileCond -> . CPAR

    CPAR            shift and go to state 176

    checkWhileCond                 shift and go to state 175

state 150

    (74) for -> FOR varFor ididx . IGUAL exp initFor exp beforeDo ALLA estatutos CLLA

    IGUAL           shift and go to state 177


state 151

    (79) expp -> OR exp .

    RETURN          reduce using rule 79 (expp -> OR exp .)
    READ            reduce using rule 79 (expp -> OR exp .)
    WRITE           reduce using rule 79 (expp -> OR exp .)
    IF              reduce using rule 79 (expp -> OR exp .)
    FOR             reduce using rule 79 (expp -> OR exp .)
    ID              reduce using rule 79 (expp -> OR exp .)
    WHILE           reduce using rule 79 (expp -> OR exp .)
    APAR            reduce using rule 79 (expp -> OR exp .)
    CTEC            reduce using rule 79 (expp -> OR exp .)
    CTEI            reduce using rule 79 (expp -> OR exp .)
    CTEF            reduce using rule 79 (expp -> OR exp .)
    CLLA            reduce using rule 79 (expp -> OR exp .)
    CPAR            reduce using rule 79 (expp -> OR exp .)
    CCOR            reduce using rule 79 (expp -> OR exp .)
    COMA            reduce using rule 79 (expp -> OR exp .)
    PTCOMA          reduce using rule 79 (expp -> OR exp .)
    TO              reduce using rule 79 (expp -> OR exp .)
    DO              reduce using rule 79 (expp -> OR exp .)


state 152

    (118) ctes -> ID validateExistance factorp .

    DIV             reduce using rule 118 (ctes -> ID validateExistance factorp .)
    POR             reduce using rule 118 (ctes -> ID validateExistance factorp .)
    MENOS           reduce using rule 118 (ctes -> ID validateExistance factorp .)
    MAS             reduce using rule 118 (ctes -> ID validateExistance factorp .)
    MAYQ            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    MENQ            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    MAYI            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    MENI            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    IGUAL           reduce using rule 118 (ctes -> ID validateExistance factorp .)
    DIF             reduce using rule 118 (ctes -> ID validateExistance factorp .)
    AND             reduce using rule 118 (ctes -> ID validateExistance factorp .)
    OR              reduce using rule 118 (ctes -> ID validateExistance factorp .)
    RETURN          reduce using rule 118 (ctes -> ID validateExistance factorp .)
    READ            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    WRITE           reduce using rule 118 (ctes -> ID validateExistance factorp .)
    IF              reduce using rule 118 (ctes -> ID validateExistance factorp .)
    FOR             reduce using rule 118 (ctes -> ID validateExistance factorp .)
    ID              reduce using rule 118 (ctes -> ID validateExistance factorp .)
    WHILE           reduce using rule 118 (ctes -> ID validateExistance factorp .)
    APAR            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    CTEC            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    CTEI            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    CTEF            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    CLLA            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    CPAR            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    CCOR            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    COMA            reduce using rule 118 (ctes -> ID validateExistance factorp .)
    PTCOMA          reduce using rule 118 (ctes -> ID validateExistance factorp .)
    TO              reduce using rule 118 (ctes -> ID validateExistance factorp .)
    DO              reduce using rule 118 (ctes -> ID validateExistance factorp .)


state 153

    (106) factorp -> APAR . createEra exp valParams factorpp cparParams
    (111) createEra -> .

    APAR            reduce using rule 111 (createEra -> .)
    CTEC            reduce using rule 111 (createEra -> .)
    CTEI            reduce using rule 111 (createEra -> .)
    CTEF            reduce using rule 111 (createEra -> .)
    ID              reduce using rule 111 (createEra -> .)

    createEra                      shift and go to state 178

state 154

    (107) factorp -> corArr . exp ver endArrfac
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 179
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 155

    (108) factorp -> empty .

    DIV             reduce using rule 108 (factorp -> empty .)
    POR             reduce using rule 108 (factorp -> empty .)
    MENOS           reduce using rule 108 (factorp -> empty .)
    MAS             reduce using rule 108 (factorp -> empty .)
    MAYQ            reduce using rule 108 (factorp -> empty .)
    MENQ            reduce using rule 108 (factorp -> empty .)
    MAYI            reduce using rule 108 (factorp -> empty .)
    MENI            reduce using rule 108 (factorp -> empty .)
    IGUAL           reduce using rule 108 (factorp -> empty .)
    DIF             reduce using rule 108 (factorp -> empty .)
    AND             reduce using rule 108 (factorp -> empty .)
    OR              reduce using rule 108 (factorp -> empty .)
    RETURN          reduce using rule 108 (factorp -> empty .)
    READ            reduce using rule 108 (factorp -> empty .)
    WRITE           reduce using rule 108 (factorp -> empty .)
    IF              reduce using rule 108 (factorp -> empty .)
    FOR             reduce using rule 108 (factorp -> empty .)
    ID              reduce using rule 108 (factorp -> empty .)
    WHILE           reduce using rule 108 (factorp -> empty .)
    APAR            reduce using rule 108 (factorp -> empty .)
    CTEC            reduce using rule 108 (factorp -> empty .)
    CTEI            reduce using rule 108 (factorp -> empty .)
    CTEF            reduce using rule 108 (factorp -> empty .)
    CLLA            reduce using rule 108 (factorp -> empty .)
    CPAR            reduce using rule 108 (factorp -> empty .)
    CCOR            reduce using rule 108 (factorp -> empty .)
    COMA            reduce using rule 108 (factorp -> empty .)
    PTCOMA          reduce using rule 108 (factorp -> empty .)
    TO              reduce using rule 108 (factorp -> empty .)
    DO              reduce using rule 108 (factorp -> empty .)


state 156

    (82) texpp -> andCheck texp .

    OR              reduce using rule 82 (texpp -> andCheck texp .)
    RETURN          reduce using rule 82 (texpp -> andCheck texp .)
    READ            reduce using rule 82 (texpp -> andCheck texp .)
    WRITE           reduce using rule 82 (texpp -> andCheck texp .)
    IF              reduce using rule 82 (texpp -> andCheck texp .)
    FOR             reduce using rule 82 (texpp -> andCheck texp .)
    ID              reduce using rule 82 (texpp -> andCheck texp .)
    WHILE           reduce using rule 82 (texpp -> andCheck texp .)
    APAR            reduce using rule 82 (texpp -> andCheck texp .)
    CTEC            reduce using rule 82 (texpp -> andCheck texp .)
    CTEI            reduce using rule 82 (texpp -> andCheck texp .)
    CTEF            reduce using rule 82 (texpp -> andCheck texp .)
    CLLA            reduce using rule 82 (texpp -> andCheck texp .)
    CPAR            reduce using rule 82 (texpp -> andCheck texp .)
    CCOR            reduce using rule 82 (texpp -> andCheck texp .)
    COMA            reduce using rule 82 (texpp -> andCheck texp .)
    PTCOMA          reduce using rule 82 (texpp -> andCheck texp .)
    TO              reduce using rule 82 (texpp -> andCheck texp .)
    DO              reduce using rule 82 (texpp -> andCheck texp .)


state 157

    (86) gexpp -> addPO mexp .

    AND             reduce using rule 86 (gexpp -> addPO mexp .)
    OR              reduce using rule 86 (gexpp -> addPO mexp .)
    RETURN          reduce using rule 86 (gexpp -> addPO mexp .)
    READ            reduce using rule 86 (gexpp -> addPO mexp .)
    WRITE           reduce using rule 86 (gexpp -> addPO mexp .)
    IF              reduce using rule 86 (gexpp -> addPO mexp .)
    FOR             reduce using rule 86 (gexpp -> addPO mexp .)
    ID              reduce using rule 86 (gexpp -> addPO mexp .)
    WHILE           reduce using rule 86 (gexpp -> addPO mexp .)
    APAR            reduce using rule 86 (gexpp -> addPO mexp .)
    CTEC            reduce using rule 86 (gexpp -> addPO mexp .)
    CTEI            reduce using rule 86 (gexpp -> addPO mexp .)
    CTEF            reduce using rule 86 (gexpp -> addPO mexp .)
    CLLA            reduce using rule 86 (gexpp -> addPO mexp .)
    CPAR            reduce using rule 86 (gexpp -> addPO mexp .)
    CCOR            reduce using rule 86 (gexpp -> addPO mexp .)
    COMA            reduce using rule 86 (gexpp -> addPO mexp .)
    PTCOMA          reduce using rule 86 (gexpp -> addPO mexp .)
    TO              reduce using rule 86 (gexpp -> addPO mexp .)
    DO              reduce using rule 86 (gexpp -> addPO mexp .)


state 158

    (92) addPO -> IGUAL IGUAL .

    APAR            reduce using rule 92 (addPO -> IGUAL IGUAL .)
    CTEC            reduce using rule 92 (addPO -> IGUAL IGUAL .)
    CTEI            reduce using rule 92 (addPO -> IGUAL IGUAL .)
    CTEF            reduce using rule 92 (addPO -> IGUAL IGUAL .)
    ID              reduce using rule 92 (addPO -> IGUAL IGUAL .)


state 159

    (95) mexpp -> operSR mexp .

    MAYQ            reduce using rule 95 (mexpp -> operSR mexp .)
    MENQ            reduce using rule 95 (mexpp -> operSR mexp .)
    MAYI            reduce using rule 95 (mexpp -> operSR mexp .)
    MENI            reduce using rule 95 (mexpp -> operSR mexp .)
    IGUAL           reduce using rule 95 (mexpp -> operSR mexp .)
    DIF             reduce using rule 95 (mexpp -> operSR mexp .)
    AND             reduce using rule 95 (mexpp -> operSR mexp .)
    OR              reduce using rule 95 (mexpp -> operSR mexp .)
    RETURN          reduce using rule 95 (mexpp -> operSR mexp .)
    READ            reduce using rule 95 (mexpp -> operSR mexp .)
    WRITE           reduce using rule 95 (mexpp -> operSR mexp .)
    IF              reduce using rule 95 (mexpp -> operSR mexp .)
    FOR             reduce using rule 95 (mexpp -> operSR mexp .)
    ID              reduce using rule 95 (mexpp -> operSR mexp .)
    WHILE           reduce using rule 95 (mexpp -> operSR mexp .)
    APAR            reduce using rule 95 (mexpp -> operSR mexp .)
    CTEC            reduce using rule 95 (mexpp -> operSR mexp .)
    CTEI            reduce using rule 95 (mexpp -> operSR mexp .)
    CTEF            reduce using rule 95 (mexpp -> operSR mexp .)
    CLLA            reduce using rule 95 (mexpp -> operSR mexp .)
    CPAR            reduce using rule 95 (mexpp -> operSR mexp .)
    CCOR            reduce using rule 95 (mexpp -> operSR mexp .)
    COMA            reduce using rule 95 (mexpp -> operSR mexp .)
    PTCOMA          reduce using rule 95 (mexpp -> operSR mexp .)
    TO              reduce using rule 95 (mexpp -> operSR mexp .)
    DO              reduce using rule 95 (mexpp -> operSR mexp .)


state 160

    (100) terminop -> oper termino .

    MENOS           reduce using rule 100 (terminop -> oper termino .)
    MAS             reduce using rule 100 (terminop -> oper termino .)
    MAYQ            reduce using rule 100 (terminop -> oper termino .)
    MENQ            reduce using rule 100 (terminop -> oper termino .)
    MAYI            reduce using rule 100 (terminop -> oper termino .)
    MENI            reduce using rule 100 (terminop -> oper termino .)
    IGUAL           reduce using rule 100 (terminop -> oper termino .)
    DIF             reduce using rule 100 (terminop -> oper termino .)
    AND             reduce using rule 100 (terminop -> oper termino .)
    OR              reduce using rule 100 (terminop -> oper termino .)
    RETURN          reduce using rule 100 (terminop -> oper termino .)
    READ            reduce using rule 100 (terminop -> oper termino .)
    WRITE           reduce using rule 100 (terminop -> oper termino .)
    IF              reduce using rule 100 (terminop -> oper termino .)
    FOR             reduce using rule 100 (terminop -> oper termino .)
    ID              reduce using rule 100 (terminop -> oper termino .)
    WHILE           reduce using rule 100 (terminop -> oper termino .)
    APAR            reduce using rule 100 (terminop -> oper termino .)
    CTEC            reduce using rule 100 (terminop -> oper termino .)
    CTEI            reduce using rule 100 (terminop -> oper termino .)
    CTEF            reduce using rule 100 (terminop -> oper termino .)
    CLLA            reduce using rule 100 (terminop -> oper termino .)
    CPAR            reduce using rule 100 (terminop -> oper termino .)
    CCOR            reduce using rule 100 (terminop -> oper termino .)
    COMA            reduce using rule 100 (terminop -> oper termino .)
    PTCOMA          reduce using rule 100 (terminop -> oper termino .)
    TO              reduce using rule 100 (terminop -> oper termino .)
    DO              reduce using rule 100 (terminop -> oper termino .)


state 161

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss . ALLA addsize estatutos CLLA endfunction funcs

    ALLA            shift and go to state 180


state 162

    (37) params -> tipo DOSPNTS insertParams ididx paramsp .

    CPAR            reduce using rule 37 (params -> tipo DOSPNTS insertParams ididx paramsp .)


state 163

    (40) paramsp -> COMA . params
    (37) params -> . tipo DOSPNTS insertParams ididx paramsp
    (38) params -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (120) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 120 (empty -> .)

    params                         shift and go to state 181
    tipo                           shift and go to state 37
    empty                          shift and go to state 38

state 164

    (41) paramsp -> empty .

    CPAR            reduce using rule 41 (paramsp -> empty .)


state 165

    (42) asig -> varAs ididx igualAs asigpp . PTCOMA

    PTCOMA          shift and go to state 182


state 166

    (49) asigpp -> exp .

    PTCOMA          reduce using rule 49 (asigpp -> exp .)


state 167

    (50) ididx -> corArr exp ver . CCOR

    CCOR            shift and go to state 183


state 168

    (54) return -> RETURN APAR exp CPAR . PTCOMA

    PTCOMA          shift and go to state 184


state 169

    (55) lectura -> READ APAR readId ididx . lecturapp CPAR PTCOMA
    (57) lecturapp -> . COMA readId ididx lecturapp
    (58) lecturapp -> . empty
    (120) empty -> .

    COMA            shift and go to state 186
    CPAR            reduce using rule 120 (empty -> .)

    lecturapp                      shift and go to state 185
    empty                          shift and go to state 187

state 170

    (59) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 188


state 171

    (64) escriturapp -> COMA . escriturap
    (60) escriturap -> . pushEsc
    (61) escriturap -> . exp
    (62) pushEsc -> . STRING
    (63) pushEsc -> . CTEC
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 146
    CTEC            shift and go to state 147
    APAR            shift and go to state 50
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    escriturap                     shift and go to state 189
    pushEsc                        shift and go to state 144
    exp                            shift and go to state 145
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 172

    (65) escriturapp -> empty .

    CPAR            reduce using rule 65 (escriturapp -> empty .)


state 173

    (66) cond -> IF APAR exp checkCond . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 190


state 174

    (70) checkCond -> CPAR .

    THEN            reduce using rule 70 (checkCond -> CPAR .)


state 175

    (71) while -> saveWhile APAR exp checkWhileCond . DO ALLA estatutos CLLA

    DO              shift and go to state 191


state 176

    (73) checkWhileCond -> CPAR .

    DO              reduce using rule 73 (checkWhileCond -> CPAR .)


state 177

    (74) for -> FOR varFor ididx IGUAL . exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 192
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 178

    (106) factorp -> APAR createEra . exp valParams factorpp cparParams
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 193
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 179

    (107) factorp -> corArr exp . ver endArrfac
    (53) ver -> .

    CCOR            reduce using rule 53 (ver -> .)

    ver                            shift and go to state 194

state 180

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA . addsize estatutos CLLA endfunction funcs
    (21) addsize -> .

    RETURN          reduce using rule 21 (addsize -> .)
    READ            reduce using rule 21 (addsize -> .)
    WRITE           reduce using rule 21 (addsize -> .)
    IF              reduce using rule 21 (addsize -> .)
    FOR             reduce using rule 21 (addsize -> .)
    ID              reduce using rule 21 (addsize -> .)
    WHILE           reduce using rule 21 (addsize -> .)
    APAR            reduce using rule 21 (addsize -> .)
    CTEC            reduce using rule 21 (addsize -> .)
    CTEI            reduce using rule 21 (addsize -> .)
    CTEF            reduce using rule 21 (addsize -> .)

    addsize                        shift and go to state 195

state 181

    (40) paramsp -> COMA params .

    CPAR            reduce using rule 40 (paramsp -> COMA params .)


state 182

    (42) asig -> varAs ididx igualAs asigpp PTCOMA .

    RETURN          reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    READ            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WRITE           reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    IF              reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    FOR             reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    ID              reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WHILE           reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    APAR            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEC            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEI            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEF            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CLLA            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)


state 183

    (50) ididx -> corArr exp ver CCOR .

    IGUAL           reduce using rule 50 (ididx -> corArr exp ver CCOR .)
    COMA            reduce using rule 50 (ididx -> corArr exp ver CCOR .)
    CPAR            reduce using rule 50 (ididx -> corArr exp ver CCOR .)


state 184

    (54) return -> RETURN APAR exp CPAR PTCOMA .

    RETURN          reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    READ            reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    WRITE           reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    IF              reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    FOR             reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    ID              reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    WHILE           reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    APAR            reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEC            reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEI            reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEF            reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)
    CLLA            reduce using rule 54 (return -> RETURN APAR exp CPAR PTCOMA .)


state 185

    (55) lectura -> READ APAR readId ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 196


state 186

    (57) lecturapp -> COMA . readId ididx lecturapp
    (56) readId -> . ID

    ID              shift and go to state 142

    readId                         shift and go to state 197

state 187

    (58) lecturapp -> empty .

    CPAR            reduce using rule 58 (lecturapp -> empty .)


state 188

    (59) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 198


state 189

    (64) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 64 (escriturapp -> COMA escriturap .)


state 190

    (66) cond -> IF APAR exp checkCond THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 199


state 191

    (71) while -> saveWhile APAR exp checkWhileCond DO . ALLA estatutos CLLA

    ALLA            shift and go to state 200


state 192

    (74) for -> FOR varFor ididx IGUAL exp . initFor exp beforeDo ALLA estatutos CLLA
    (76) initFor -> . TO

    TO              shift and go to state 202

    initFor                        shift and go to state 201

state 193

    (106) factorp -> APAR createEra exp . valParams factorpp cparParams
    (112) valParams -> .

    COMA            reduce using rule 112 (valParams -> .)
    CPAR            reduce using rule 112 (valParams -> .)

    valParams                      shift and go to state 203

state 194

    (107) factorp -> corArr exp ver . endArrfac
    (109) endArrfac -> . CCOR

    CCOR            shift and go to state 205

    endArrfac                      shift and go to state 204

state 195

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize . estatutos CLLA endfunction funcs
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    estatutos                      shift and go to state 206
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 196

    (55) lectura -> READ APAR readId ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 207


state 197

    (57) lecturapp -> COMA readId . ididx lecturapp
    (50) ididx -> . corArr exp ver CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (120) empty -> .

    ACOR            shift and go to state 98
    COMA            reduce using rule 120 (empty -> .)
    CPAR            reduce using rule 120 (empty -> .)

    ididx                          shift and go to state 208
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 198

    (59) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    RETURN          reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    ID              reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEC            reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 59 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 199

    (66) cond -> IF APAR exp checkCond THEN ALLA . estatutos CLLA condpp
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    exp                            shift and go to state 59
    estatutos                      shift and go to state 209
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 200

    (71) while -> saveWhile APAR exp checkWhileCond DO ALLA . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    saveWhile                      shift and go to state 65
    exp                            shift and go to state 59
    estatutos                      shift and go to state 210
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 201

    (74) for -> FOR varFor ididx IGUAL exp initFor . exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 211
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 202

    (76) initFor -> TO .

    APAR            reduce using rule 76 (initFor -> TO .)
    CTEC            reduce using rule 76 (initFor -> TO .)
    CTEI            reduce using rule 76 (initFor -> TO .)
    CTEF            reduce using rule 76 (initFor -> TO .)
    ID              reduce using rule 76 (initFor -> TO .)


state 203

    (106) factorp -> APAR createEra exp valParams . factorpp cparParams
    (113) factorpp -> . COMA exp valParams factorpp
    (114) factorpp -> . empty
    (120) empty -> .

    COMA            shift and go to state 213
    CPAR            reduce using rule 120 (empty -> .)

    factorpp                       shift and go to state 212
    empty                          shift and go to state 214

state 204

    (107) factorp -> corArr exp ver endArrfac .

    DIV             reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    POR             reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    MENOS           reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    MAS             reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    MAYQ            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    MENQ            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    MAYI            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    MENI            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    IGUAL           reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    DIF             reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    AND             reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    OR              reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    RETURN          reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    READ            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    WRITE           reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    IF              reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    FOR             reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    ID              reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    WHILE           reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    APAR            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    CTEC            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    CTEI            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    CTEF            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    CLLA            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    CPAR            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    CCOR            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    COMA            reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    PTCOMA          reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    TO              reduce using rule 107 (factorp -> corArr exp ver endArrfac .)
    DO              reduce using rule 107 (factorp -> corArr exp ver endArrfac .)


state 205

    (109) endArrfac -> CCOR .

    DIV             reduce using rule 109 (endArrfac -> CCOR .)
    POR             reduce using rule 109 (endArrfac -> CCOR .)
    MENOS           reduce using rule 109 (endArrfac -> CCOR .)
    MAS             reduce using rule 109 (endArrfac -> CCOR .)
    MAYQ            reduce using rule 109 (endArrfac -> CCOR .)
    MENQ            reduce using rule 109 (endArrfac -> CCOR .)
    MAYI            reduce using rule 109 (endArrfac -> CCOR .)
    MENI            reduce using rule 109 (endArrfac -> CCOR .)
    IGUAL           reduce using rule 109 (endArrfac -> CCOR .)
    DIF             reduce using rule 109 (endArrfac -> CCOR .)
    AND             reduce using rule 109 (endArrfac -> CCOR .)
    OR              reduce using rule 109 (endArrfac -> CCOR .)
    RETURN          reduce using rule 109 (endArrfac -> CCOR .)
    READ            reduce using rule 109 (endArrfac -> CCOR .)
    WRITE           reduce using rule 109 (endArrfac -> CCOR .)
    IF              reduce using rule 109 (endArrfac -> CCOR .)
    FOR             reduce using rule 109 (endArrfac -> CCOR .)
    ID              reduce using rule 109 (endArrfac -> CCOR .)
    WHILE           reduce using rule 109 (endArrfac -> CCOR .)
    APAR            reduce using rule 109 (endArrfac -> CCOR .)
    CTEC            reduce using rule 109 (endArrfac -> CCOR .)
    CTEI            reduce using rule 109 (endArrfac -> CCOR .)
    CTEF            reduce using rule 109 (endArrfac -> CCOR .)
    CLLA            reduce using rule 109 (endArrfac -> CCOR .)
    CPAR            reduce using rule 109 (endArrfac -> CCOR .)
    CCOR            reduce using rule 109 (endArrfac -> CCOR .)
    COMA            reduce using rule 109 (endArrfac -> CCOR .)
    PTCOMA          reduce using rule 109 (endArrfac -> CCOR .)
    TO              reduce using rule 109 (endArrfac -> CCOR .)
    DO              reduce using rule 109 (endArrfac -> CCOR .)


state 206

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos . CLLA endfunction funcs

    CLLA            shift and go to state 215


state 207

    (55) lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .

    RETURN          reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    ID              reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEC            reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 55 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)


state 208

    (57) lecturapp -> COMA readId ididx . lecturapp
    (57) lecturapp -> . COMA readId ididx lecturapp
    (58) lecturapp -> . empty
    (120) empty -> .

    COMA            shift and go to state 186
    CPAR            reduce using rule 120 (empty -> .)

    lecturapp                      shift and go to state 216
    empty                          shift and go to state 187

state 209

    (66) cond -> IF APAR exp checkCond THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 217


state 210

    (71) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos . CLLA

    CLLA            shift and go to state 218


state 211

    (74) for -> FOR varFor ididx IGUAL exp initFor exp . beforeDo ALLA estatutos CLLA
    (77) beforeDo -> . DO

    DO              shift and go to state 220

    beforeDo                       shift and go to state 219

state 212

    (106) factorp -> APAR createEra exp valParams factorpp . cparParams
    (110) cparParams -> . CPAR

    CPAR            shift and go to state 222

    cparParams                     shift and go to state 221

state 213

    (113) factorpp -> COMA . exp valParams factorpp
    (78) exp -> . texp expp
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 223
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 214

    (114) factorpp -> empty .

    CPAR            reduce using rule 114 (factorpp -> empty .)


state 215

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA . endfunction funcs
    (20) endfunction -> .

    FUNCTION        reduce using rule 20 (endfunction -> .)
    MAIN            reduce using rule 20 (endfunction -> .)

    endfunction                    shift and go to state 224

state 216

    (57) lecturapp -> COMA readId ididx lecturapp .

    CPAR            reduce using rule 57 (lecturapp -> COMA readId ididx lecturapp .)


state 217

    (66) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA . condpp
    (67) condpp -> . checkElse ALLA estatutos CLLA
    (68) condpp -> . empty
    (69) checkElse -> . ELSE
    (120) empty -> .

    ELSE            shift and go to state 228
    RETURN          reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WRITE           reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    APAR            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    CTEI            reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CLLA            reduce using rule 120 (empty -> .)

    condpp                         shift and go to state 225
    checkElse                      shift and go to state 226
    empty                          shift and go to state 227

state 218

    (71) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .

    RETURN          reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    READ            reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    IF              reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    FOR             reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    ID              reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    APAR            reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEC            reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 71 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)


state 219

    (74) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo . ALLA estatutos CLLA

    ALLA            shift and go to state 229


state 220

    (77) beforeDo -> DO .

    ALLA            reduce using rule 77 (beforeDo -> DO .)


state 221

    (106) factorp -> APAR createEra exp valParams factorpp cparParams .

    DIV             reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    POR             reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MENOS           reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MAS             reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MAYQ            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MENQ            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MAYI            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MENI            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    IGUAL           reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    DIF             reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    AND             reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    OR              reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    RETURN          reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    READ            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    WRITE           reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    IF              reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    FOR             reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    ID              reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    WHILE           reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    APAR            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CTEC            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CTEI            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CTEF            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CLLA            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CPAR            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CCOR            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    COMA            reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    PTCOMA          reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    TO              reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    DO              reduce using rule 106 (factorp -> APAR createEra exp valParams factorpp cparParams .)


state 222

    (110) cparParams -> CPAR .

    DIV             reduce using rule 110 (cparParams -> CPAR .)
    POR             reduce using rule 110 (cparParams -> CPAR .)
    MENOS           reduce using rule 110 (cparParams -> CPAR .)
    MAS             reduce using rule 110 (cparParams -> CPAR .)
    MAYQ            reduce using rule 110 (cparParams -> CPAR .)
    MENQ            reduce using rule 110 (cparParams -> CPAR .)
    MAYI            reduce using rule 110 (cparParams -> CPAR .)
    MENI            reduce using rule 110 (cparParams -> CPAR .)
    IGUAL           reduce using rule 110 (cparParams -> CPAR .)
    DIF             reduce using rule 110 (cparParams -> CPAR .)
    AND             reduce using rule 110 (cparParams -> CPAR .)
    OR              reduce using rule 110 (cparParams -> CPAR .)
    RETURN          reduce using rule 110 (cparParams -> CPAR .)
    READ            reduce using rule 110 (cparParams -> CPAR .)
    WRITE           reduce using rule 110 (cparParams -> CPAR .)
    IF              reduce using rule 110 (cparParams -> CPAR .)
    FOR             reduce using rule 110 (cparParams -> CPAR .)
    ID              reduce using rule 110 (cparParams -> CPAR .)
    WHILE           reduce using rule 110 (cparParams -> CPAR .)
    APAR            reduce using rule 110 (cparParams -> CPAR .)
    CTEC            reduce using rule 110 (cparParams -> CPAR .)
    CTEI            reduce using rule 110 (cparParams -> CPAR .)
    CTEF            reduce using rule 110 (cparParams -> CPAR .)
    CLLA            reduce using rule 110 (cparParams -> CPAR .)
    CPAR            reduce using rule 110 (cparParams -> CPAR .)
    CCOR            reduce using rule 110 (cparParams -> CPAR .)
    COMA            reduce using rule 110 (cparParams -> CPAR .)
    PTCOMA          reduce using rule 110 (cparParams -> CPAR .)
    TO              reduce using rule 110 (cparParams -> CPAR .)
    DO              reduce using rule 110 (cparParams -> CPAR .)


state 223

    (113) factorpp -> COMA exp . valParams factorpp
    (112) valParams -> .

    COMA            reduce using rule 112 (valParams -> .)
    CPAR            reduce using rule 112 (valParams -> .)

    valParams                      shift and go to state 230

state 224

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction . funcs
    (15) funcs -> . FUNCTION funcsp insertFunc funcspp
    (16) funcs -> . empty
    (120) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 120 (empty -> .)

    funcs                          shift and go to state 231
    empty                          shift and go to state 11

state 225

    (66) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .

    RETURN          reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    ID              reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEC            reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 66 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)


state 226

    (67) condpp -> checkElse . ALLA estatutos CLLA

    ALLA            shift and go to state 232


state 227

    (68) condpp -> empty .

    RETURN          reduce using rule 68 (condpp -> empty .)
    READ            reduce using rule 68 (condpp -> empty .)
    WRITE           reduce using rule 68 (condpp -> empty .)
    IF              reduce using rule 68 (condpp -> empty .)
    FOR             reduce using rule 68 (condpp -> empty .)
    ID              reduce using rule 68 (condpp -> empty .)
    WHILE           reduce using rule 68 (condpp -> empty .)
    APAR            reduce using rule 68 (condpp -> empty .)
    CTEC            reduce using rule 68 (condpp -> empty .)
    CTEI            reduce using rule 68 (condpp -> empty .)
    CTEF            reduce using rule 68 (condpp -> empty .)
    CLLA            reduce using rule 68 (condpp -> empty .)


state 228

    (69) checkElse -> ELSE .

    ALLA            reduce using rule 69 (checkElse -> ELSE .)


state 229

    (74) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    exp                            shift and go to state 59
    estatutos                      shift and go to state 233
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 230

    (113) factorpp -> COMA exp valParams . factorpp
    (113) factorpp -> . COMA exp valParams factorpp
    (114) factorpp -> . empty
    (120) empty -> .

    COMA            shift and go to state 213
    CPAR            reduce using rule 120 (empty -> .)

    factorpp                       shift and go to state 234
    empty                          shift and go to state 214

state 231

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .

    MAIN            reduce using rule 18 (funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .)


state 232

    (67) condpp -> checkElse ALLA . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (54) return -> . RETURN APAR exp CPAR PTCOMA
    (55) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (59) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (71) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (74) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (78) exp -> . texp expp
    (43) varAs -> . ID
    (72) saveWhile -> . WHILE
    (81) texp -> . gexp texpp
    (85) gexp -> . mexp gexpp
    (94) mexp -> . termino mexpp
    (99) termino -> . factor terminop
    (104) factor -> . APAR exp CPAR
    (105) factor -> . ctes
    (115) ctes -> . CTEC
    (116) ctes -> . CTEI
    (117) ctes -> . CTEF
    (118) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    estatutos                      shift and go to state 235
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 233

    (74) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos . CLLA

    CLLA            shift and go to state 236


state 234

    (113) factorpp -> COMA exp valParams factorpp .

    CPAR            reduce using rule 113 (factorpp -> COMA exp valParams factorpp .)


state 235

    (67) condpp -> checkElse ALLA estatutos . CLLA

    CLLA            shift and go to state 237


state 236

    (74) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .

    RETURN          reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    READ            reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WRITE           reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    IF              reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    FOR             reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    ID              reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WHILE           reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    APAR            reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEC            reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEI            reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEF            reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CLLA            reduce using rule 74 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)


state 237

    (67) condpp -> checkElse ALLA estatutos CLLA .

    RETURN          reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    READ            reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    WRITE           reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    IF              reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    FOR             reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    ID              reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    WHILE           reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    APAR            reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEC            reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEI            reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEF            reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)
    CLLA            reduce using rule 67 (condpp -> checkElse ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 109 resolved as shift
WARNING: reduce/reduce conflict in state 68 resolved using rule (varAs -> ID)
WARNING: rejected rule (validateExistance -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 147 resolved using rule (pushEsc -> CTEC)
WARNING: rejected rule (ctes -> CTEC) in state 147
