Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    IGUALIGUAL
    NOT
    STR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     poptomain -> <empty>
Rule 4     varss -> VARS vars
Rule 5     varss -> empty
Rule 6     vars -> tipo DOSPNTS insertVar varsppp varspp vars
Rule 7     vars -> empty
Rule 8     insertVar -> ID
Rule 9     varsppp -> initDim CTEI setDim
Rule 10    varsppp -> empty
Rule 11    setDim -> CCOR
Rule 12    initDim -> ACOR
Rule 13    varspp -> PTCOMA
Rule 14    varspp -> COMA insertVar varsppp varspp
Rule 15    funcs -> FUNCTION funcsp insertFunc funcspp
Rule 16    funcs -> empty
Rule 17    insertFunc -> ID
Rule 18    funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
Rule 19    updateParamTable -> <empty>
Rule 20    endfunction -> <empty>
Rule 21    addsize -> <empty>
Rule 22    funcsp -> VOID
Rule 23    funcsp -> tipo
Rule 24    estatutos -> asig estatutop
Rule 25    estatutos -> return estatutop
Rule 26    estatutos -> lectura estatutop
Rule 27    estatutos -> escritura estatutop
Rule 28    estatutos -> cond estatutop
Rule 29    estatutos -> while estatutop
Rule 30    estatutos -> for estatutop
Rule 31    estatutos -> exp estatutop
Rule 32    estatutop -> estatutos
Rule 33    estatutop -> empty
Rule 34    tipo -> INT
Rule 35    tipo -> FLOAT
Rule 36    tipo -> CHAR
Rule 37    params -> tipo DOSPNTS insertParams ididx paramsp
Rule 38    params -> empty
Rule 39    insertParams -> ID
Rule 40    paramsp -> COMA params
Rule 41    paramsp -> empty
Rule 42    asig -> varAs ididx igualAs asigpp PTCOMA
Rule 43    varAs -> ID
Rule 44    igualAs -> IGUAL
Rule 45    asigp -> exp asigppp
Rule 46    asigp -> empty
Rule 47    asigppp -> COMA asigp
Rule 48    asigppp -> empty
Rule 49    asigpp -> exp
Rule 50    ididx -> corArr exp CCOR
Rule 51    ididx -> empty
Rule 52    corArr -> ACOR
Rule 53    return -> RETURN APAR exp CPAR PTCOMA
Rule 54    lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA
Rule 55    readId -> ID
Rule 56    lecturapp -> COMA readId ididx lecturapp
Rule 57    lecturapp -> empty
Rule 58    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 59    escriturap -> pushEsc
Rule 60    escriturap -> exp
Rule 61    pushEsc -> STRING
Rule 62    pushEsc -> CTEC
Rule 63    escriturapp -> COMA escriturap
Rule 64    escriturapp -> empty
Rule 65    cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
Rule 66    condpp -> checkElse ALLA estatutos CLLA
Rule 67    condpp -> empty
Rule 68    checkElse -> ELSE
Rule 69    checkCond -> CPAR
Rule 70    while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
Rule 71    saveWhile -> WHILE
Rule 72    checkWhileCond -> CPAR
Rule 73    for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
Rule 74    varFor -> ID
Rule 75    initFor -> TO
Rule 76    beforeDo -> DO
Rule 77    exp -> texp expp
Rule 78    expp -> OR exp
Rule 79    expp -> empty
Rule 80    texp -> gexp texpp
Rule 81    texpp -> andCheck texp
Rule 82    texpp -> empty
Rule 83    andCheck -> AND
Rule 84    gexp -> mexp gexpp
Rule 85    gexpp -> addPO mexp
Rule 86    gexpp -> empty
Rule 87    addPO -> MAYQ
Rule 88    addPO -> MENQ
Rule 89    addPO -> MAYI
Rule 90    addPO -> MENI
Rule 91    addPO -> IGUAL IGUAL
Rule 92    addPO -> DIF
Rule 93    mexp -> termino mexpp
Rule 94    mexpp -> operSR mexp
Rule 95    mexpp -> empty
Rule 96    operSR -> MENOS
Rule 97    operSR -> MAS
Rule 98    termino -> factor terminop
Rule 99    terminop -> oper termino
Rule 100   terminop -> empty
Rule 101   oper -> DIV
Rule 102   oper -> POR
Rule 103   factor -> APAR exp CPAR
Rule 104   factor -> ctes
Rule 105   factorp -> APAR createEra exp valParams factorpp cparParams
Rule 106   factorp -> ACOR exp CCOR
Rule 107   factorp -> empty
Rule 108   cparParams -> CPAR
Rule 109   createEra -> <empty>
Rule 110   valParams -> <empty>
Rule 111   factorpp -> COMA exp valParams factorpp
Rule 112   factorpp -> empty
Rule 113   ctes -> CTEC
Rule 114   ctes -> CTEI
Rule 115   ctes -> CTEF
Rule 116   ctes -> ID validateExistance factorp
Rule 117   validateExistance -> <empty>
Rule 118   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 12 52 106
ALLA                 : 1 18 65 66 70 73
AND                  : 83
APAR                 : 1 18 53 54 58 65 70 103 105
BOOL                 : 
CCOR                 : 11 50 106
CHAR                 : 36
CLLA                 : 1 18 65 66 70 73
COMA                 : 14 40 47 56 63 111
CPAR                 : 1 18 53 54 58 69 72 103 108
CTEC                 : 62 113
CTEF                 : 115
CTEI                 : 9 114
DIF                  : 92
DIV                  : 101
DO                   : 70 76
DOSPNTS              : 6 37
ELSE                 : 68
FALSE                : 
FLOAT                : 35
FOR                  : 73
FUNCTION             : 15
ID                   : 2 8 17 39 43 55 74 116
IF                   : 65
IGUAL                : 44 73 91 91
IGUALIGUAL           : 
INT                  : 34
MAIN                 : 1
MAS                  : 97
MAYI                 : 89
MAYQ                 : 87
MENI                 : 90
MENOS                : 96
MENQ                 : 88
NOT                  : 
OR                   : 78
POR                  : 102
PROGRAM              : 1
PTCOMA               : 2 13 18 42 53 54 58
READ                 : 54
RETURN               : 53
STR                  : 
STRING               : 61
THEN                 : 65
TO                   : 75
TRUE                 : 
VARS                 : 4
VOID                 : 22
WHILE                : 71
WRITE                : 58
error                : 

Nonterminals, with rules where they appear

addPO                : 85
addsize              : 18
agregarTablaFunciones : 1
andCheck             : 81
asig                 : 24
asigp                : 47
asigpp               : 42
asigppp              : 45
beforeDo             : 73
checkCond            : 65
checkElse            : 66
checkWhileCond       : 70
cond                 : 28
condpp               : 65
corArr               : 50
cparParams           : 105
createEra            : 105
ctes                 : 104
empty                : 5 7 10 16 33 38 41 46 48 51 57 64 67 79 82 86 95 100 107 112
endfunction          : 18
escritura            : 27
escriturap           : 58 63
escriturapp          : 58
estatutop            : 24 25 26 27 28 29 30 31
estatutos            : 1 18 32 65 66 70 73
exp                  : 31 45 49 50 53 60 65 70 73 73 78 103 105 106 111
expp                 : 77
factor               : 98
factorp              : 116
factorpp             : 105 111
for                  : 30
funcs                : 1 18
funcsp               : 15
funcspp              : 15
gexp                 : 80
gexpp                : 84
ididx                : 37 42 54 56 73
igualAs              : 42
initDim              : 9
initFor              : 73
insertFunc           : 15
insertParams         : 37
insertVar            : 6 14
lectura              : 26
lecturapp            : 54 56
mexp                 : 84 85 94
mexpp                : 93
oper                 : 99
operSR               : 94
params               : 18 40
paramsp              : 37
poptomain            : 1
program              : 0
pushEsc              : 59
readId               : 54 56
return               : 25
saveWhile            : 70
setDim               : 9
termino              : 93 99
terminop             : 98
texp                 : 77 81
texpp                : 80
tipo                 : 6 23 37
updateParamTable     : 18
valParams            : 105 111
validateExistance    : 116
varAs                : 42
varFor               : 73
vars                 : 4 6
varspp               : 6 14
varsppp              : 6 14
varss                : 1 18
while                : 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (118) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 118 (empty -> .)
    MAIN            reduce using rule 118 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (15) funcs -> . FUNCTION funcsp insertFunc funcspp
    (16) funcs -> . empty
    (118) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 118 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (4) varss -> VARS . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (118) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 118 (empty -> .)
    MAIN            reduce using rule 118 (empty -> .)
    ALLA            reduce using rule 118 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) varss -> empty .

    FUNCTION        reduce using rule 5 (varss -> empty .)
    MAIN            reduce using rule 5 (varss -> empty .)
    ALLA            reduce using rule 5 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA poptomain estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (15) funcs -> FUNCTION . funcsp insertFunc funcspp
    (22) funcsp -> . VOID
    (23) funcsp -> . tipo
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (16) funcs -> empty .

    MAIN            reduce using rule 16 (funcs -> empty .)


state 12

    (4) varss -> VARS vars .

    FUNCTION        reduce using rule 4 (varss -> VARS vars .)
    MAIN            reduce using rule 4 (varss -> VARS vars .)
    ALLA            reduce using rule 4 (varss -> VARS vars .)


state 13

    (6) vars -> tipo . DOSPNTS insertVar varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    ALLA            reduce using rule 7 (vars -> empty .)


state 15

    (34) tipo -> INT .

    DOSPNTS         reduce using rule 34 (tipo -> INT .)
    ID              reduce using rule 34 (tipo -> INT .)


state 16

    (35) tipo -> FLOAT .

    DOSPNTS         reduce using rule 35 (tipo -> FLOAT .)
    ID              reduce using rule 35 (tipo -> FLOAT .)


state 17

    (36) tipo -> CHAR .

    DOSPNTS         reduce using rule 36 (tipo -> CHAR .)
    ID              reduce using rule 36 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA poptomain estatutos CLLA

    APAR            shift and go to state 23


state 19

    (15) funcs -> FUNCTION funcsp . insertFunc funcspp
    (17) insertFunc -> . ID

    ID              shift and go to state 25

    insertFunc                     shift and go to state 24

state 20

    (22) funcsp -> VOID .

    ID              reduce using rule 22 (funcsp -> VOID .)


state 21

    (23) funcsp -> tipo .

    ID              reduce using rule 23 (funcsp -> tipo .)


state 22

    (6) vars -> tipo DOSPNTS . insertVar varsppp varspp vars
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 26

state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA poptomain estatutos CLLA

    CPAR            shift and go to state 28


state 24

    (15) funcs -> FUNCTION funcsp insertFunc . funcspp
    (18) funcspp -> . APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 25

    (17) insertFunc -> ID .

    APAR            reduce using rule 17 (insertFunc -> ID .)


state 26

    (6) vars -> tipo DOSPNTS insertVar . varsppp varspp vars
    (9) varsppp -> . initDim CTEI setDim
    (10) varsppp -> . empty
    (12) initDim -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)

    varsppp                        shift and go to state 31
    initDim                        shift and go to state 32
    empty                          shift and go to state 33

state 27

    (8) insertVar -> ID .

    ACOR            reduce using rule 8 (insertVar -> ID .)
    PTCOMA          reduce using rule 8 (insertVar -> ID .)
    COMA            reduce using rule 8 (insertVar -> ID .)


state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA poptomain estatutos CLLA

    ALLA            shift and go to state 35


state 29

    (15) funcs -> FUNCTION funcsp insertFunc funcspp .

    MAIN            reduce using rule 15 (funcs -> FUNCTION funcsp insertFunc funcspp .)


state 30

    (18) funcspp -> APAR . params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (37) params -> . tipo DOSPNTS insertParams ididx paramsp
    (38) params -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (118) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 118 (empty -> .)

    params                         shift and go to state 36
    tipo                           shift and go to state 37
    empty                          shift and go to state 38

state 31

    (6) vars -> tipo DOSPNTS insertVar varsppp . varspp vars
    (13) varspp -> . PTCOMA
    (14) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 40
    COMA            shift and go to state 41

    varspp                         shift and go to state 39

state 32

    (9) varsppp -> initDim . CTEI setDim

    CTEI            shift and go to state 42


state 33

    (10) varsppp -> empty .

    PTCOMA          reduce using rule 10 (varsppp -> empty .)
    COMA            reduce using rule 10 (varsppp -> empty .)


state 34

    (12) initDim -> ACOR .

    CTEI            reduce using rule 12 (initDim -> ACOR .)


state 35

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . poptomain estatutos CLLA
    (3) poptomain -> .

    RETURN          reduce using rule 3 (poptomain -> .)
    READ            reduce using rule 3 (poptomain -> .)
    WRITE           reduce using rule 3 (poptomain -> .)
    IF              reduce using rule 3 (poptomain -> .)
    FOR             reduce using rule 3 (poptomain -> .)
    ID              reduce using rule 3 (poptomain -> .)
    WHILE           reduce using rule 3 (poptomain -> .)
    APAR            reduce using rule 3 (poptomain -> .)
    CTEC            reduce using rule 3 (poptomain -> .)
    CTEI            reduce using rule 3 (poptomain -> .)
    CTEF            reduce using rule 3 (poptomain -> .)

    poptomain                      shift and go to state 43

state 36

    (18) funcspp -> APAR params . CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    CPAR            shift and go to state 44


state 37

    (37) params -> tipo . DOSPNTS insertParams ididx paramsp

    DOSPNTS         shift and go to state 45


state 38

    (38) params -> empty .

    CPAR            reduce using rule 38 (params -> empty .)


state 39

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (118) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 118 (empty -> .)
    MAIN            reduce using rule 118 (empty -> .)
    ALLA            reduce using rule 118 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 46
    empty                          shift and go to state 14

state 40

    (13) varspp -> PTCOMA .

    INT             reduce using rule 13 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 13 (varspp -> PTCOMA .)
    CHAR            reduce using rule 13 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 13 (varspp -> PTCOMA .)
    MAIN            reduce using rule 13 (varspp -> PTCOMA .)
    ALLA            reduce using rule 13 (varspp -> PTCOMA .)


state 41

    (14) varspp -> COMA . insertVar varsppp varspp
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 47

state 42

    (9) varsppp -> initDim CTEI . setDim
    (11) setDim -> . CCOR

    CCOR            shift and go to state 49

    setDim                         shift and go to state 48

state 43

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    estatutos                      shift and go to state 51
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 44

    (18) funcspp -> APAR params CPAR . updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (19) updateParamTable -> .

    PTCOMA          reduce using rule 19 (updateParamTable -> .)

    updateParamTable               shift and go to state 78

state 45

    (37) params -> tipo DOSPNTS . insertParams ididx paramsp
    (39) insertParams -> . ID

    ID              shift and go to state 80

    insertParams                   shift and go to state 79

state 46

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp vars .

    FUNCTION        reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    MAIN            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    ALLA            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)


state 47

    (14) varspp -> COMA insertVar . varsppp varspp
    (9) varsppp -> . initDim CTEI setDim
    (10) varsppp -> . empty
    (12) initDim -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)

    varsppp                        shift and go to state 81
    initDim                        shift and go to state 32
    empty                          shift and go to state 33

state 48

    (9) varsppp -> initDim CTEI setDim .

    PTCOMA          reduce using rule 9 (varsppp -> initDim CTEI setDim .)
    COMA            reduce using rule 9 (varsppp -> initDim CTEI setDim .)


state 49

    (11) setDim -> CCOR .

    PTCOMA          reduce using rule 11 (setDim -> CCOR .)
    COMA            reduce using rule 11 (setDim -> CCOR .)


state 50

    (103) factor -> APAR . exp CPAR
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 82
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 51

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos . CLLA

    CLLA            shift and go to state 84


state 52

    (24) estatutos -> asig . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    asig                           shift and go to state 52
    estatutop                      shift and go to state 85
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 53

    (25) estatutos -> return . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    return                         shift and go to state 53
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 54

    (26) estatutos -> lectura . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    lectura                        shift and go to state 54
    estatutop                      shift and go to state 89
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 55

    (27) estatutos -> escritura . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    escritura                      shift and go to state 55
    estatutop                      shift and go to state 90
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 56

    (28) estatutos -> cond . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    cond                           shift and go to state 56
    estatutop                      shift and go to state 91
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 57

    (29) estatutos -> while . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    while                          shift and go to state 57
    estatutop                      shift and go to state 92
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 58

    (30) estatutos -> for . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    for                            shift and go to state 58
    estatutop                      shift and go to state 93
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 59

    (31) estatutos -> exp . estatutop
    (32) estatutop -> . estatutos
    (33) estatutop -> . empty
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (118) empty -> .
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 118 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    exp                            shift and go to state 59
    estatutop                      shift and go to state 94
    estatutos                      shift and go to state 86
    empty                          shift and go to state 87
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 60

    (42) asig -> varAs . ididx igualAs asigpp PTCOMA
    (50) ididx -> . corArr exp CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 98
    IGUAL           reduce using rule 118 (empty -> .)

    ididx                          shift and go to state 95
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 61

    (53) return -> RETURN . APAR exp CPAR PTCOMA

    APAR            shift and go to state 99


state 62

    (54) lectura -> READ . APAR readId ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 100


state 63

    (58) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 101


state 64

    (65) cond -> IF . APAR exp checkCond THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 102


state 65

    (70) while -> saveWhile . APAR exp checkWhileCond DO ALLA estatutos CLLA

    APAR            shift and go to state 103


state 66

    (73) for -> FOR . varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) varFor -> . ID

    ID              shift and go to state 105

    varFor                         shift and go to state 104

state 67

    (77) exp -> texp . expp
    (78) expp -> . OR exp
    (79) expp -> . empty
    (118) empty -> .

    OR              shift and go to state 107
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    APAR            reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)
    CCOR            reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)
    PTCOMA          reduce using rule 118 (empty -> .)
    TO              reduce using rule 118 (empty -> .)
    DO              reduce using rule 118 (empty -> .)

    expp                           shift and go to state 106
    empty                          shift and go to state 108

state 68

    (43) varAs -> ID .
    (116) ctes -> ID . validateExistance factorp
    (117) validateExistance -> .

  ! reduce/reduce conflict for ACOR resolved using rule 43 (varAs -> ID .)
  ! reduce/reduce conflict for IGUAL resolved using rule 43 (varAs -> ID .)
    ACOR            reduce using rule 43 (varAs -> ID .)
    IGUAL           reduce using rule 43 (varAs -> ID .)
    APAR            reduce using rule 117 (validateExistance -> .)
    DIV             reduce using rule 117 (validateExistance -> .)
    POR             reduce using rule 117 (validateExistance -> .)
    MENOS           reduce using rule 117 (validateExistance -> .)
    MAS             reduce using rule 117 (validateExistance -> .)
    MAYQ            reduce using rule 117 (validateExistance -> .)
    MENQ            reduce using rule 117 (validateExistance -> .)
    MAYI            reduce using rule 117 (validateExistance -> .)
    MENI            reduce using rule 117 (validateExistance -> .)
    DIF             reduce using rule 117 (validateExistance -> .)
    AND             reduce using rule 117 (validateExistance -> .)
    OR              reduce using rule 117 (validateExistance -> .)
    RETURN          reduce using rule 117 (validateExistance -> .)
    READ            reduce using rule 117 (validateExistance -> .)
    WRITE           reduce using rule 117 (validateExistance -> .)
    IF              reduce using rule 117 (validateExistance -> .)
    FOR             reduce using rule 117 (validateExistance -> .)
    ID              reduce using rule 117 (validateExistance -> .)
    WHILE           reduce using rule 117 (validateExistance -> .)
    CTEC            reduce using rule 117 (validateExistance -> .)
    CTEI            reduce using rule 117 (validateExistance -> .)
    CTEF            reduce using rule 117 (validateExistance -> .)
    CLLA            reduce using rule 117 (validateExistance -> .)

  ! ACOR            [ reduce using rule 117 (validateExistance -> .) ]
  ! IGUAL           [ reduce using rule 117 (validateExistance -> .) ]

    validateExistance              shift and go to state 109

state 69

    (71) saveWhile -> WHILE .

    APAR            reduce using rule 71 (saveWhile -> WHILE .)


state 70

    (80) texp -> gexp . texpp
    (81) texpp -> . andCheck texp
    (82) texpp -> . empty
    (83) andCheck -> . AND
    (118) empty -> .

    AND             shift and go to state 113
    OR              reduce using rule 118 (empty -> .)
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    APAR            reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)
    CCOR            reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)
    PTCOMA          reduce using rule 118 (empty -> .)
    TO              reduce using rule 118 (empty -> .)
    DO              reduce using rule 118 (empty -> .)

    texpp                          shift and go to state 110
    andCheck                       shift and go to state 111
    empty                          shift and go to state 112

state 71

    (84) gexp -> mexp . gexpp
    (85) gexpp -> . addPO mexp
    (86) gexpp -> . empty
    (87) addPO -> . MAYQ
    (88) addPO -> . MENQ
    (89) addPO -> . MAYI
    (90) addPO -> . MENI
    (91) addPO -> . IGUAL IGUAL
    (92) addPO -> . DIF
    (118) empty -> .

    MAYQ            shift and go to state 117
    MENQ            shift and go to state 118
    MAYI            shift and go to state 119
    MENI            shift and go to state 120
    IGUAL           shift and go to state 121
    DIF             shift and go to state 122
    AND             reduce using rule 118 (empty -> .)
    OR              reduce using rule 118 (empty -> .)
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    APAR            reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)
    CCOR            reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)
    PTCOMA          reduce using rule 118 (empty -> .)
    TO              reduce using rule 118 (empty -> .)
    DO              reduce using rule 118 (empty -> .)

    gexpp                          shift and go to state 114
    addPO                          shift and go to state 115
    empty                          shift and go to state 116

state 72

    (93) mexp -> termino . mexpp
    (94) mexpp -> . operSR mexp
    (95) mexpp -> . empty
    (96) operSR -> . MENOS
    (97) operSR -> . MAS
    (118) empty -> .

    MENOS           shift and go to state 126
    MAS             shift and go to state 127
    MAYQ            reduce using rule 118 (empty -> .)
    MENQ            reduce using rule 118 (empty -> .)
    MAYI            reduce using rule 118 (empty -> .)
    MENI            reduce using rule 118 (empty -> .)
    IGUAL           reduce using rule 118 (empty -> .)
    DIF             reduce using rule 118 (empty -> .)
    AND             reduce using rule 118 (empty -> .)
    OR              reduce using rule 118 (empty -> .)
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    APAR            reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)
    CCOR            reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)
    PTCOMA          reduce using rule 118 (empty -> .)
    TO              reduce using rule 118 (empty -> .)
    DO              reduce using rule 118 (empty -> .)

    mexpp                          shift and go to state 123
    operSR                         shift and go to state 124
    empty                          shift and go to state 125

state 73

    (98) termino -> factor . terminop
    (99) terminop -> . oper termino
    (100) terminop -> . empty
    (101) oper -> . DIV
    (102) oper -> . POR
    (118) empty -> .

    DIV             shift and go to state 131
    POR             shift and go to state 132
    MENOS           reduce using rule 118 (empty -> .)
    MAS             reduce using rule 118 (empty -> .)
    MAYQ            reduce using rule 118 (empty -> .)
    MENQ            reduce using rule 118 (empty -> .)
    MAYI            reduce using rule 118 (empty -> .)
    MENI            reduce using rule 118 (empty -> .)
    IGUAL           reduce using rule 118 (empty -> .)
    DIF             reduce using rule 118 (empty -> .)
    AND             reduce using rule 118 (empty -> .)
    OR              reduce using rule 118 (empty -> .)
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    APAR            reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)
    CCOR            reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)
    PTCOMA          reduce using rule 118 (empty -> .)
    TO              reduce using rule 118 (empty -> .)
    DO              reduce using rule 118 (empty -> .)

    terminop                       shift and go to state 128
    oper                           shift and go to state 129
    empty                          shift and go to state 130

state 74

    (104) factor -> ctes .

    DIV             reduce using rule 104 (factor -> ctes .)
    POR             reduce using rule 104 (factor -> ctes .)
    MENOS           reduce using rule 104 (factor -> ctes .)
    MAS             reduce using rule 104 (factor -> ctes .)
    MAYQ            reduce using rule 104 (factor -> ctes .)
    MENQ            reduce using rule 104 (factor -> ctes .)
    MAYI            reduce using rule 104 (factor -> ctes .)
    MENI            reduce using rule 104 (factor -> ctes .)
    IGUAL           reduce using rule 104 (factor -> ctes .)
    DIF             reduce using rule 104 (factor -> ctes .)
    AND             reduce using rule 104 (factor -> ctes .)
    OR              reduce using rule 104 (factor -> ctes .)
    RETURN          reduce using rule 104 (factor -> ctes .)
    READ            reduce using rule 104 (factor -> ctes .)
    WRITE           reduce using rule 104 (factor -> ctes .)
    IF              reduce using rule 104 (factor -> ctes .)
    FOR             reduce using rule 104 (factor -> ctes .)
    ID              reduce using rule 104 (factor -> ctes .)
    WHILE           reduce using rule 104 (factor -> ctes .)
    APAR            reduce using rule 104 (factor -> ctes .)
    CTEC            reduce using rule 104 (factor -> ctes .)
    CTEI            reduce using rule 104 (factor -> ctes .)
    CTEF            reduce using rule 104 (factor -> ctes .)
    CLLA            reduce using rule 104 (factor -> ctes .)
    CPAR            reduce using rule 104 (factor -> ctes .)
    CCOR            reduce using rule 104 (factor -> ctes .)
    COMA            reduce using rule 104 (factor -> ctes .)
    PTCOMA          reduce using rule 104 (factor -> ctes .)
    TO              reduce using rule 104 (factor -> ctes .)
    DO              reduce using rule 104 (factor -> ctes .)


state 75

    (113) ctes -> CTEC .

    DIV             reduce using rule 113 (ctes -> CTEC .)
    POR             reduce using rule 113 (ctes -> CTEC .)
    MENOS           reduce using rule 113 (ctes -> CTEC .)
    MAS             reduce using rule 113 (ctes -> CTEC .)
    MAYQ            reduce using rule 113 (ctes -> CTEC .)
    MENQ            reduce using rule 113 (ctes -> CTEC .)
    MAYI            reduce using rule 113 (ctes -> CTEC .)
    MENI            reduce using rule 113 (ctes -> CTEC .)
    IGUAL           reduce using rule 113 (ctes -> CTEC .)
    DIF             reduce using rule 113 (ctes -> CTEC .)
    AND             reduce using rule 113 (ctes -> CTEC .)
    OR              reduce using rule 113 (ctes -> CTEC .)
    RETURN          reduce using rule 113 (ctes -> CTEC .)
    READ            reduce using rule 113 (ctes -> CTEC .)
    WRITE           reduce using rule 113 (ctes -> CTEC .)
    IF              reduce using rule 113 (ctes -> CTEC .)
    FOR             reduce using rule 113 (ctes -> CTEC .)
    ID              reduce using rule 113 (ctes -> CTEC .)
    WHILE           reduce using rule 113 (ctes -> CTEC .)
    APAR            reduce using rule 113 (ctes -> CTEC .)
    CTEC            reduce using rule 113 (ctes -> CTEC .)
    CTEI            reduce using rule 113 (ctes -> CTEC .)
    CTEF            reduce using rule 113 (ctes -> CTEC .)
    CLLA            reduce using rule 113 (ctes -> CTEC .)
    CPAR            reduce using rule 113 (ctes -> CTEC .)
    CCOR            reduce using rule 113 (ctes -> CTEC .)
    COMA            reduce using rule 113 (ctes -> CTEC .)
    PTCOMA          reduce using rule 113 (ctes -> CTEC .)
    TO              reduce using rule 113 (ctes -> CTEC .)
    DO              reduce using rule 113 (ctes -> CTEC .)


state 76

    (114) ctes -> CTEI .

    DIV             reduce using rule 114 (ctes -> CTEI .)
    POR             reduce using rule 114 (ctes -> CTEI .)
    MENOS           reduce using rule 114 (ctes -> CTEI .)
    MAS             reduce using rule 114 (ctes -> CTEI .)
    MAYQ            reduce using rule 114 (ctes -> CTEI .)
    MENQ            reduce using rule 114 (ctes -> CTEI .)
    MAYI            reduce using rule 114 (ctes -> CTEI .)
    MENI            reduce using rule 114 (ctes -> CTEI .)
    IGUAL           reduce using rule 114 (ctes -> CTEI .)
    DIF             reduce using rule 114 (ctes -> CTEI .)
    AND             reduce using rule 114 (ctes -> CTEI .)
    OR              reduce using rule 114 (ctes -> CTEI .)
    RETURN          reduce using rule 114 (ctes -> CTEI .)
    READ            reduce using rule 114 (ctes -> CTEI .)
    WRITE           reduce using rule 114 (ctes -> CTEI .)
    IF              reduce using rule 114 (ctes -> CTEI .)
    FOR             reduce using rule 114 (ctes -> CTEI .)
    ID              reduce using rule 114 (ctes -> CTEI .)
    WHILE           reduce using rule 114 (ctes -> CTEI .)
    APAR            reduce using rule 114 (ctes -> CTEI .)
    CTEC            reduce using rule 114 (ctes -> CTEI .)
    CTEI            reduce using rule 114 (ctes -> CTEI .)
    CTEF            reduce using rule 114 (ctes -> CTEI .)
    CLLA            reduce using rule 114 (ctes -> CTEI .)
    CPAR            reduce using rule 114 (ctes -> CTEI .)
    CCOR            reduce using rule 114 (ctes -> CTEI .)
    COMA            reduce using rule 114 (ctes -> CTEI .)
    PTCOMA          reduce using rule 114 (ctes -> CTEI .)
    TO              reduce using rule 114 (ctes -> CTEI .)
    DO              reduce using rule 114 (ctes -> CTEI .)


state 77

    (115) ctes -> CTEF .

    DIV             reduce using rule 115 (ctes -> CTEF .)
    POR             reduce using rule 115 (ctes -> CTEF .)
    MENOS           reduce using rule 115 (ctes -> CTEF .)
    MAS             reduce using rule 115 (ctes -> CTEF .)
    MAYQ            reduce using rule 115 (ctes -> CTEF .)
    MENQ            reduce using rule 115 (ctes -> CTEF .)
    MAYI            reduce using rule 115 (ctes -> CTEF .)
    MENI            reduce using rule 115 (ctes -> CTEF .)
    IGUAL           reduce using rule 115 (ctes -> CTEF .)
    DIF             reduce using rule 115 (ctes -> CTEF .)
    AND             reduce using rule 115 (ctes -> CTEF .)
    OR              reduce using rule 115 (ctes -> CTEF .)
    RETURN          reduce using rule 115 (ctes -> CTEF .)
    READ            reduce using rule 115 (ctes -> CTEF .)
    WRITE           reduce using rule 115 (ctes -> CTEF .)
    IF              reduce using rule 115 (ctes -> CTEF .)
    FOR             reduce using rule 115 (ctes -> CTEF .)
    ID              reduce using rule 115 (ctes -> CTEF .)
    WHILE           reduce using rule 115 (ctes -> CTEF .)
    APAR            reduce using rule 115 (ctes -> CTEF .)
    CTEC            reduce using rule 115 (ctes -> CTEF .)
    CTEI            reduce using rule 115 (ctes -> CTEF .)
    CTEF            reduce using rule 115 (ctes -> CTEF .)
    CLLA            reduce using rule 115 (ctes -> CTEF .)
    CPAR            reduce using rule 115 (ctes -> CTEF .)
    CCOR            reduce using rule 115 (ctes -> CTEF .)
    COMA            reduce using rule 115 (ctes -> CTEF .)
    PTCOMA          reduce using rule 115 (ctes -> CTEF .)
    TO              reduce using rule 115 (ctes -> CTEF .)
    DO              reduce using rule 115 (ctes -> CTEF .)


state 78

    (18) funcspp -> APAR params CPAR updateParamTable . PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    PTCOMA          shift and go to state 133


state 79

    (37) params -> tipo DOSPNTS insertParams . ididx paramsp
    (50) ididx -> . corArr exp CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 98
    COMA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)

    ididx                          shift and go to state 134
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 80

    (39) insertParams -> ID .

    ACOR            reduce using rule 39 (insertParams -> ID .)
    COMA            reduce using rule 39 (insertParams -> ID .)
    CPAR            reduce using rule 39 (insertParams -> ID .)


state 81

    (14) varspp -> COMA insertVar varsppp . varspp
    (13) varspp -> . PTCOMA
    (14) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 40
    COMA            shift and go to state 41

    varspp                         shift and go to state 135

state 82

    (103) factor -> APAR exp . CPAR

    CPAR            shift and go to state 136


state 83

    (116) ctes -> ID . validateExistance factorp
    (117) validateExistance -> .

    APAR            reduce using rule 117 (validateExistance -> .)
    ACOR            reduce using rule 117 (validateExistance -> .)
    DIV             reduce using rule 117 (validateExistance -> .)
    POR             reduce using rule 117 (validateExistance -> .)
    MENOS           reduce using rule 117 (validateExistance -> .)
    MAS             reduce using rule 117 (validateExistance -> .)
    MAYQ            reduce using rule 117 (validateExistance -> .)
    MENQ            reduce using rule 117 (validateExistance -> .)
    MAYI            reduce using rule 117 (validateExistance -> .)
    MENI            reduce using rule 117 (validateExistance -> .)
    IGUAL           reduce using rule 117 (validateExistance -> .)
    DIF             reduce using rule 117 (validateExistance -> .)
    AND             reduce using rule 117 (validateExistance -> .)
    OR              reduce using rule 117 (validateExistance -> .)
    CPAR            reduce using rule 117 (validateExistance -> .)
    CCOR            reduce using rule 117 (validateExistance -> .)
    COMA            reduce using rule 117 (validateExistance -> .)
    RETURN          reduce using rule 117 (validateExistance -> .)
    READ            reduce using rule 117 (validateExistance -> .)
    WRITE           reduce using rule 117 (validateExistance -> .)
    IF              reduce using rule 117 (validateExistance -> .)
    FOR             reduce using rule 117 (validateExistance -> .)
    ID              reduce using rule 117 (validateExistance -> .)
    WHILE           reduce using rule 117 (validateExistance -> .)
    CTEC            reduce using rule 117 (validateExistance -> .)
    CTEI            reduce using rule 117 (validateExistance -> .)
    CTEF            reduce using rule 117 (validateExistance -> .)
    CLLA            reduce using rule 117 (validateExistance -> .)
    PTCOMA          reduce using rule 117 (validateExistance -> .)
    TO              reduce using rule 117 (validateExistance -> .)
    DO              reduce using rule 117 (validateExistance -> .)

    validateExistance              shift and go to state 109

state 84

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .)


state 85

    (24) estatutos -> asig estatutop .

    CLLA            reduce using rule 24 (estatutos -> asig estatutop .)


state 86

    (32) estatutop -> estatutos .

    CLLA            reduce using rule 32 (estatutop -> estatutos .)


state 87

    (33) estatutop -> empty .

    CLLA            reduce using rule 33 (estatutop -> empty .)


state 88

    (25) estatutos -> return estatutop .

    CLLA            reduce using rule 25 (estatutos -> return estatutop .)


state 89

    (26) estatutos -> lectura estatutop .

    CLLA            reduce using rule 26 (estatutos -> lectura estatutop .)


state 90

    (27) estatutos -> escritura estatutop .

    CLLA            reduce using rule 27 (estatutos -> escritura estatutop .)


state 91

    (28) estatutos -> cond estatutop .

    CLLA            reduce using rule 28 (estatutos -> cond estatutop .)


state 92

    (29) estatutos -> while estatutop .

    CLLA            reduce using rule 29 (estatutos -> while estatutop .)


state 93

    (30) estatutos -> for estatutop .

    CLLA            reduce using rule 30 (estatutos -> for estatutop .)


state 94

    (31) estatutos -> exp estatutop .

    CLLA            reduce using rule 31 (estatutos -> exp estatutop .)


state 95

    (42) asig -> varAs ididx . igualAs asigpp PTCOMA
    (44) igualAs -> . IGUAL

    IGUAL           shift and go to state 138

    igualAs                        shift and go to state 137

state 96

    (50) ididx -> corArr . exp CCOR
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 139
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 97

    (51) ididx -> empty .

    IGUAL           reduce using rule 51 (ididx -> empty .)
    COMA            reduce using rule 51 (ididx -> empty .)
    CPAR            reduce using rule 51 (ididx -> empty .)


state 98

    (52) corArr -> ACOR .

    APAR            reduce using rule 52 (corArr -> ACOR .)
    CTEC            reduce using rule 52 (corArr -> ACOR .)
    CTEI            reduce using rule 52 (corArr -> ACOR .)
    CTEF            reduce using rule 52 (corArr -> ACOR .)
    ID              reduce using rule 52 (corArr -> ACOR .)


state 99

    (53) return -> RETURN APAR . exp CPAR PTCOMA
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 140
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 100

    (54) lectura -> READ APAR . readId ididx lecturapp CPAR PTCOMA
    (55) readId -> . ID

    ID              shift and go to state 142

    readId                         shift and go to state 141

state 101

    (58) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (59) escriturap -> . pushEsc
    (60) escriturap -> . exp
    (61) pushEsc -> . STRING
    (62) pushEsc -> . CTEC
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 146
    CTEC            shift and go to state 147
    APAR            shift and go to state 50
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    escriturap                     shift and go to state 143
    pushEsc                        shift and go to state 144
    exp                            shift and go to state 145
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 102

    (65) cond -> IF APAR . exp checkCond THEN ALLA estatutos CLLA condpp
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 148
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 103

    (70) while -> saveWhile APAR . exp checkWhileCond DO ALLA estatutos CLLA
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 149
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 104

    (73) for -> FOR varFor . ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (50) ididx -> . corArr exp CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 98
    IGUAL           reduce using rule 118 (empty -> .)

    ididx                          shift and go to state 150
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 105

    (74) varFor -> ID .

    ACOR            reduce using rule 74 (varFor -> ID .)
    IGUAL           reduce using rule 74 (varFor -> ID .)


state 106

    (77) exp -> texp expp .

    RETURN          reduce using rule 77 (exp -> texp expp .)
    READ            reduce using rule 77 (exp -> texp expp .)
    WRITE           reduce using rule 77 (exp -> texp expp .)
    IF              reduce using rule 77 (exp -> texp expp .)
    FOR             reduce using rule 77 (exp -> texp expp .)
    ID              reduce using rule 77 (exp -> texp expp .)
    WHILE           reduce using rule 77 (exp -> texp expp .)
    APAR            reduce using rule 77 (exp -> texp expp .)
    CTEC            reduce using rule 77 (exp -> texp expp .)
    CTEI            reduce using rule 77 (exp -> texp expp .)
    CTEF            reduce using rule 77 (exp -> texp expp .)
    CLLA            reduce using rule 77 (exp -> texp expp .)
    CPAR            reduce using rule 77 (exp -> texp expp .)
    CCOR            reduce using rule 77 (exp -> texp expp .)
    COMA            reduce using rule 77 (exp -> texp expp .)
    PTCOMA          reduce using rule 77 (exp -> texp expp .)
    TO              reduce using rule 77 (exp -> texp expp .)
    DO              reduce using rule 77 (exp -> texp expp .)


state 107

    (78) expp -> OR . exp
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 151
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 108

    (79) expp -> empty .

    RETURN          reduce using rule 79 (expp -> empty .)
    READ            reduce using rule 79 (expp -> empty .)
    WRITE           reduce using rule 79 (expp -> empty .)
    IF              reduce using rule 79 (expp -> empty .)
    FOR             reduce using rule 79 (expp -> empty .)
    ID              reduce using rule 79 (expp -> empty .)
    WHILE           reduce using rule 79 (expp -> empty .)
    APAR            reduce using rule 79 (expp -> empty .)
    CTEC            reduce using rule 79 (expp -> empty .)
    CTEI            reduce using rule 79 (expp -> empty .)
    CTEF            reduce using rule 79 (expp -> empty .)
    CLLA            reduce using rule 79 (expp -> empty .)
    CPAR            reduce using rule 79 (expp -> empty .)
    CCOR            reduce using rule 79 (expp -> empty .)
    COMA            reduce using rule 79 (expp -> empty .)
    PTCOMA          reduce using rule 79 (expp -> empty .)
    TO              reduce using rule 79 (expp -> empty .)
    DO              reduce using rule 79 (expp -> empty .)


state 109

    (116) ctes -> ID validateExistance . factorp
    (105) factorp -> . APAR createEra exp valParams factorpp cparParams
    (106) factorp -> . ACOR exp CCOR
    (107) factorp -> . empty
    (118) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 153
    ACOR            shift and go to state 154
    DIV             reduce using rule 118 (empty -> .)
    POR             reduce using rule 118 (empty -> .)
    MENOS           reduce using rule 118 (empty -> .)
    MAS             reduce using rule 118 (empty -> .)
    MAYQ            reduce using rule 118 (empty -> .)
    MENQ            reduce using rule 118 (empty -> .)
    MAYI            reduce using rule 118 (empty -> .)
    MENI            reduce using rule 118 (empty -> .)
    IGUAL           reduce using rule 118 (empty -> .)
    DIF             reduce using rule 118 (empty -> .)
    AND             reduce using rule 118 (empty -> .)
    OR              reduce using rule 118 (empty -> .)
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)
    CCOR            reduce using rule 118 (empty -> .)
    COMA            reduce using rule 118 (empty -> .)
    PTCOMA          reduce using rule 118 (empty -> .)
    TO              reduce using rule 118 (empty -> .)
    DO              reduce using rule 118 (empty -> .)

  ! APAR            [ reduce using rule 118 (empty -> .) ]

    factorp                        shift and go to state 152
    empty                          shift and go to state 155

state 110

    (80) texp -> gexp texpp .

    OR              reduce using rule 80 (texp -> gexp texpp .)
    RETURN          reduce using rule 80 (texp -> gexp texpp .)
    READ            reduce using rule 80 (texp -> gexp texpp .)
    WRITE           reduce using rule 80 (texp -> gexp texpp .)
    IF              reduce using rule 80 (texp -> gexp texpp .)
    FOR             reduce using rule 80 (texp -> gexp texpp .)
    ID              reduce using rule 80 (texp -> gexp texpp .)
    WHILE           reduce using rule 80 (texp -> gexp texpp .)
    APAR            reduce using rule 80 (texp -> gexp texpp .)
    CTEC            reduce using rule 80 (texp -> gexp texpp .)
    CTEI            reduce using rule 80 (texp -> gexp texpp .)
    CTEF            reduce using rule 80 (texp -> gexp texpp .)
    CLLA            reduce using rule 80 (texp -> gexp texpp .)
    CPAR            reduce using rule 80 (texp -> gexp texpp .)
    CCOR            reduce using rule 80 (texp -> gexp texpp .)
    COMA            reduce using rule 80 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 80 (texp -> gexp texpp .)
    TO              reduce using rule 80 (texp -> gexp texpp .)
    DO              reduce using rule 80 (texp -> gexp texpp .)


state 111

    (81) texpp -> andCheck . texp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    texp                           shift and go to state 156
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 112

    (82) texpp -> empty .

    OR              reduce using rule 82 (texpp -> empty .)
    RETURN          reduce using rule 82 (texpp -> empty .)
    READ            reduce using rule 82 (texpp -> empty .)
    WRITE           reduce using rule 82 (texpp -> empty .)
    IF              reduce using rule 82 (texpp -> empty .)
    FOR             reduce using rule 82 (texpp -> empty .)
    ID              reduce using rule 82 (texpp -> empty .)
    WHILE           reduce using rule 82 (texpp -> empty .)
    APAR            reduce using rule 82 (texpp -> empty .)
    CTEC            reduce using rule 82 (texpp -> empty .)
    CTEI            reduce using rule 82 (texpp -> empty .)
    CTEF            reduce using rule 82 (texpp -> empty .)
    CLLA            reduce using rule 82 (texpp -> empty .)
    CPAR            reduce using rule 82 (texpp -> empty .)
    CCOR            reduce using rule 82 (texpp -> empty .)
    COMA            reduce using rule 82 (texpp -> empty .)
    PTCOMA          reduce using rule 82 (texpp -> empty .)
    TO              reduce using rule 82 (texpp -> empty .)
    DO              reduce using rule 82 (texpp -> empty .)


state 113

    (83) andCheck -> AND .

    APAR            reduce using rule 83 (andCheck -> AND .)
    CTEC            reduce using rule 83 (andCheck -> AND .)
    CTEI            reduce using rule 83 (andCheck -> AND .)
    CTEF            reduce using rule 83 (andCheck -> AND .)
    ID              reduce using rule 83 (andCheck -> AND .)


state 114

    (84) gexp -> mexp gexpp .

    AND             reduce using rule 84 (gexp -> mexp gexpp .)
    OR              reduce using rule 84 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 84 (gexp -> mexp gexpp .)
    READ            reduce using rule 84 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 84 (gexp -> mexp gexpp .)
    IF              reduce using rule 84 (gexp -> mexp gexpp .)
    FOR             reduce using rule 84 (gexp -> mexp gexpp .)
    ID              reduce using rule 84 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 84 (gexp -> mexp gexpp .)
    APAR            reduce using rule 84 (gexp -> mexp gexpp .)
    CTEC            reduce using rule 84 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 84 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 84 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 84 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 84 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 84 (gexp -> mexp gexpp .)
    COMA            reduce using rule 84 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 84 (gexp -> mexp gexpp .)
    TO              reduce using rule 84 (gexp -> mexp gexpp .)
    DO              reduce using rule 84 (gexp -> mexp gexpp .)


state 115

    (85) gexpp -> addPO . mexp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    mexp                           shift and go to state 157
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 116

    (86) gexpp -> empty .

    AND             reduce using rule 86 (gexpp -> empty .)
    OR              reduce using rule 86 (gexpp -> empty .)
    RETURN          reduce using rule 86 (gexpp -> empty .)
    READ            reduce using rule 86 (gexpp -> empty .)
    WRITE           reduce using rule 86 (gexpp -> empty .)
    IF              reduce using rule 86 (gexpp -> empty .)
    FOR             reduce using rule 86 (gexpp -> empty .)
    ID              reduce using rule 86 (gexpp -> empty .)
    WHILE           reduce using rule 86 (gexpp -> empty .)
    APAR            reduce using rule 86 (gexpp -> empty .)
    CTEC            reduce using rule 86 (gexpp -> empty .)
    CTEI            reduce using rule 86 (gexpp -> empty .)
    CTEF            reduce using rule 86 (gexpp -> empty .)
    CLLA            reduce using rule 86 (gexpp -> empty .)
    CPAR            reduce using rule 86 (gexpp -> empty .)
    CCOR            reduce using rule 86 (gexpp -> empty .)
    COMA            reduce using rule 86 (gexpp -> empty .)
    PTCOMA          reduce using rule 86 (gexpp -> empty .)
    TO              reduce using rule 86 (gexpp -> empty .)
    DO              reduce using rule 86 (gexpp -> empty .)


state 117

    (87) addPO -> MAYQ .

    APAR            reduce using rule 87 (addPO -> MAYQ .)
    CTEC            reduce using rule 87 (addPO -> MAYQ .)
    CTEI            reduce using rule 87 (addPO -> MAYQ .)
    CTEF            reduce using rule 87 (addPO -> MAYQ .)
    ID              reduce using rule 87 (addPO -> MAYQ .)


state 118

    (88) addPO -> MENQ .

    APAR            reduce using rule 88 (addPO -> MENQ .)
    CTEC            reduce using rule 88 (addPO -> MENQ .)
    CTEI            reduce using rule 88 (addPO -> MENQ .)
    CTEF            reduce using rule 88 (addPO -> MENQ .)
    ID              reduce using rule 88 (addPO -> MENQ .)


state 119

    (89) addPO -> MAYI .

    APAR            reduce using rule 89 (addPO -> MAYI .)
    CTEC            reduce using rule 89 (addPO -> MAYI .)
    CTEI            reduce using rule 89 (addPO -> MAYI .)
    CTEF            reduce using rule 89 (addPO -> MAYI .)
    ID              reduce using rule 89 (addPO -> MAYI .)


state 120

    (90) addPO -> MENI .

    APAR            reduce using rule 90 (addPO -> MENI .)
    CTEC            reduce using rule 90 (addPO -> MENI .)
    CTEI            reduce using rule 90 (addPO -> MENI .)
    CTEF            reduce using rule 90 (addPO -> MENI .)
    ID              reduce using rule 90 (addPO -> MENI .)


state 121

    (91) addPO -> IGUAL . IGUAL

    IGUAL           shift and go to state 158


state 122

    (92) addPO -> DIF .

    APAR            reduce using rule 92 (addPO -> DIF .)
    CTEC            reduce using rule 92 (addPO -> DIF .)
    CTEI            reduce using rule 92 (addPO -> DIF .)
    CTEF            reduce using rule 92 (addPO -> DIF .)
    ID              reduce using rule 92 (addPO -> DIF .)


state 123

    (93) mexp -> termino mexpp .

    MAYQ            reduce using rule 93 (mexp -> termino mexpp .)
    MENQ            reduce using rule 93 (mexp -> termino mexpp .)
    MAYI            reduce using rule 93 (mexp -> termino mexpp .)
    MENI            reduce using rule 93 (mexp -> termino mexpp .)
    IGUAL           reduce using rule 93 (mexp -> termino mexpp .)
    DIF             reduce using rule 93 (mexp -> termino mexpp .)
    AND             reduce using rule 93 (mexp -> termino mexpp .)
    OR              reduce using rule 93 (mexp -> termino mexpp .)
    RETURN          reduce using rule 93 (mexp -> termino mexpp .)
    READ            reduce using rule 93 (mexp -> termino mexpp .)
    WRITE           reduce using rule 93 (mexp -> termino mexpp .)
    IF              reduce using rule 93 (mexp -> termino mexpp .)
    FOR             reduce using rule 93 (mexp -> termino mexpp .)
    ID              reduce using rule 93 (mexp -> termino mexpp .)
    WHILE           reduce using rule 93 (mexp -> termino mexpp .)
    APAR            reduce using rule 93 (mexp -> termino mexpp .)
    CTEC            reduce using rule 93 (mexp -> termino mexpp .)
    CTEI            reduce using rule 93 (mexp -> termino mexpp .)
    CTEF            reduce using rule 93 (mexp -> termino mexpp .)
    CLLA            reduce using rule 93 (mexp -> termino mexpp .)
    CPAR            reduce using rule 93 (mexp -> termino mexpp .)
    CCOR            reduce using rule 93 (mexp -> termino mexpp .)
    COMA            reduce using rule 93 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 93 (mexp -> termino mexpp .)
    TO              reduce using rule 93 (mexp -> termino mexpp .)
    DO              reduce using rule 93 (mexp -> termino mexpp .)


state 124

    (94) mexpp -> operSR . mexp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    mexp                           shift and go to state 159
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 125

    (95) mexpp -> empty .

    MAYQ            reduce using rule 95 (mexpp -> empty .)
    MENQ            reduce using rule 95 (mexpp -> empty .)
    MAYI            reduce using rule 95 (mexpp -> empty .)
    MENI            reduce using rule 95 (mexpp -> empty .)
    IGUAL           reduce using rule 95 (mexpp -> empty .)
    DIF             reduce using rule 95 (mexpp -> empty .)
    AND             reduce using rule 95 (mexpp -> empty .)
    OR              reduce using rule 95 (mexpp -> empty .)
    RETURN          reduce using rule 95 (mexpp -> empty .)
    READ            reduce using rule 95 (mexpp -> empty .)
    WRITE           reduce using rule 95 (mexpp -> empty .)
    IF              reduce using rule 95 (mexpp -> empty .)
    FOR             reduce using rule 95 (mexpp -> empty .)
    ID              reduce using rule 95 (mexpp -> empty .)
    WHILE           reduce using rule 95 (mexpp -> empty .)
    APAR            reduce using rule 95 (mexpp -> empty .)
    CTEC            reduce using rule 95 (mexpp -> empty .)
    CTEI            reduce using rule 95 (mexpp -> empty .)
    CTEF            reduce using rule 95 (mexpp -> empty .)
    CLLA            reduce using rule 95 (mexpp -> empty .)
    CPAR            reduce using rule 95 (mexpp -> empty .)
    CCOR            reduce using rule 95 (mexpp -> empty .)
    COMA            reduce using rule 95 (mexpp -> empty .)
    PTCOMA          reduce using rule 95 (mexpp -> empty .)
    TO              reduce using rule 95 (mexpp -> empty .)
    DO              reduce using rule 95 (mexpp -> empty .)


state 126

    (96) operSR -> MENOS .

    APAR            reduce using rule 96 (operSR -> MENOS .)
    CTEC            reduce using rule 96 (operSR -> MENOS .)
    CTEI            reduce using rule 96 (operSR -> MENOS .)
    CTEF            reduce using rule 96 (operSR -> MENOS .)
    ID              reduce using rule 96 (operSR -> MENOS .)


state 127

    (97) operSR -> MAS .

    APAR            reduce using rule 97 (operSR -> MAS .)
    CTEC            reduce using rule 97 (operSR -> MAS .)
    CTEI            reduce using rule 97 (operSR -> MAS .)
    CTEF            reduce using rule 97 (operSR -> MAS .)
    ID              reduce using rule 97 (operSR -> MAS .)


state 128

    (98) termino -> factor terminop .

    MENOS           reduce using rule 98 (termino -> factor terminop .)
    MAS             reduce using rule 98 (termino -> factor terminop .)
    MAYQ            reduce using rule 98 (termino -> factor terminop .)
    MENQ            reduce using rule 98 (termino -> factor terminop .)
    MAYI            reduce using rule 98 (termino -> factor terminop .)
    MENI            reduce using rule 98 (termino -> factor terminop .)
    IGUAL           reduce using rule 98 (termino -> factor terminop .)
    DIF             reduce using rule 98 (termino -> factor terminop .)
    AND             reduce using rule 98 (termino -> factor terminop .)
    OR              reduce using rule 98 (termino -> factor terminop .)
    RETURN          reduce using rule 98 (termino -> factor terminop .)
    READ            reduce using rule 98 (termino -> factor terminop .)
    WRITE           reduce using rule 98 (termino -> factor terminop .)
    IF              reduce using rule 98 (termino -> factor terminop .)
    FOR             reduce using rule 98 (termino -> factor terminop .)
    ID              reduce using rule 98 (termino -> factor terminop .)
    WHILE           reduce using rule 98 (termino -> factor terminop .)
    APAR            reduce using rule 98 (termino -> factor terminop .)
    CTEC            reduce using rule 98 (termino -> factor terminop .)
    CTEI            reduce using rule 98 (termino -> factor terminop .)
    CTEF            reduce using rule 98 (termino -> factor terminop .)
    CLLA            reduce using rule 98 (termino -> factor terminop .)
    CPAR            reduce using rule 98 (termino -> factor terminop .)
    CCOR            reduce using rule 98 (termino -> factor terminop .)
    COMA            reduce using rule 98 (termino -> factor terminop .)
    PTCOMA          reduce using rule 98 (termino -> factor terminop .)
    TO              reduce using rule 98 (termino -> factor terminop .)
    DO              reduce using rule 98 (termino -> factor terminop .)


state 129

    (99) terminop -> oper . termino
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    termino                        shift and go to state 160
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 130

    (100) terminop -> empty .

    MENOS           reduce using rule 100 (terminop -> empty .)
    MAS             reduce using rule 100 (terminop -> empty .)
    MAYQ            reduce using rule 100 (terminop -> empty .)
    MENQ            reduce using rule 100 (terminop -> empty .)
    MAYI            reduce using rule 100 (terminop -> empty .)
    MENI            reduce using rule 100 (terminop -> empty .)
    IGUAL           reduce using rule 100 (terminop -> empty .)
    DIF             reduce using rule 100 (terminop -> empty .)
    AND             reduce using rule 100 (terminop -> empty .)
    OR              reduce using rule 100 (terminop -> empty .)
    RETURN          reduce using rule 100 (terminop -> empty .)
    READ            reduce using rule 100 (terminop -> empty .)
    WRITE           reduce using rule 100 (terminop -> empty .)
    IF              reduce using rule 100 (terminop -> empty .)
    FOR             reduce using rule 100 (terminop -> empty .)
    ID              reduce using rule 100 (terminop -> empty .)
    WHILE           reduce using rule 100 (terminop -> empty .)
    APAR            reduce using rule 100 (terminop -> empty .)
    CTEC            reduce using rule 100 (terminop -> empty .)
    CTEI            reduce using rule 100 (terminop -> empty .)
    CTEF            reduce using rule 100 (terminop -> empty .)
    CLLA            reduce using rule 100 (terminop -> empty .)
    CPAR            reduce using rule 100 (terminop -> empty .)
    CCOR            reduce using rule 100 (terminop -> empty .)
    COMA            reduce using rule 100 (terminop -> empty .)
    PTCOMA          reduce using rule 100 (terminop -> empty .)
    TO              reduce using rule 100 (terminop -> empty .)
    DO              reduce using rule 100 (terminop -> empty .)


state 131

    (101) oper -> DIV .

    APAR            reduce using rule 101 (oper -> DIV .)
    CTEC            reduce using rule 101 (oper -> DIV .)
    CTEI            reduce using rule 101 (oper -> DIV .)
    CTEF            reduce using rule 101 (oper -> DIV .)
    ID              reduce using rule 101 (oper -> DIV .)


state 132

    (102) oper -> POR .

    APAR            reduce using rule 102 (oper -> POR .)
    CTEC            reduce using rule 102 (oper -> POR .)
    CTEI            reduce using rule 102 (oper -> POR .)
    CTEF            reduce using rule 102 (oper -> POR .)
    ID              reduce using rule 102 (oper -> POR .)


state 133

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA . varss ALLA addsize estatutos CLLA endfunction funcs
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (118) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 118 (empty -> .)

    varss                          shift and go to state 161
    empty                          shift and go to state 7

state 134

    (37) params -> tipo DOSPNTS insertParams ididx . paramsp
    (40) paramsp -> . COMA params
    (41) paramsp -> . empty
    (118) empty -> .

    COMA            shift and go to state 163
    CPAR            reduce using rule 118 (empty -> .)

    paramsp                        shift and go to state 162
    empty                          shift and go to state 164

state 135

    (14) varspp -> COMA insertVar varsppp varspp .

    INT             reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    FLOAT           reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    CHAR            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    FUNCTION        reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    MAIN            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    ALLA            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)


state 136

    (103) factor -> APAR exp CPAR .

    DIV             reduce using rule 103 (factor -> APAR exp CPAR .)
    POR             reduce using rule 103 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 103 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 103 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 103 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 103 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 103 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 103 (factor -> APAR exp CPAR .)
    IGUAL           reduce using rule 103 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 103 (factor -> APAR exp CPAR .)
    AND             reduce using rule 103 (factor -> APAR exp CPAR .)
    OR              reduce using rule 103 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 103 (factor -> APAR exp CPAR .)
    READ            reduce using rule 103 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 103 (factor -> APAR exp CPAR .)
    IF              reduce using rule 103 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 103 (factor -> APAR exp CPAR .)
    ID              reduce using rule 103 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 103 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 103 (factor -> APAR exp CPAR .)
    CTEC            reduce using rule 103 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 103 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 103 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 103 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 103 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 103 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 103 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 103 (factor -> APAR exp CPAR .)
    TO              reduce using rule 103 (factor -> APAR exp CPAR .)
    DO              reduce using rule 103 (factor -> APAR exp CPAR .)


state 137

    (42) asig -> varAs ididx igualAs . asigpp PTCOMA
    (49) asigpp -> . exp
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    asigpp                         shift and go to state 165
    exp                            shift and go to state 166
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 138

    (44) igualAs -> IGUAL .

    APAR            reduce using rule 44 (igualAs -> IGUAL .)
    CTEC            reduce using rule 44 (igualAs -> IGUAL .)
    CTEI            reduce using rule 44 (igualAs -> IGUAL .)
    CTEF            reduce using rule 44 (igualAs -> IGUAL .)
    ID              reduce using rule 44 (igualAs -> IGUAL .)


state 139

    (50) ididx -> corArr exp . CCOR

    CCOR            shift and go to state 167


state 140

    (53) return -> RETURN APAR exp . CPAR PTCOMA

    CPAR            shift and go to state 168


state 141

    (54) lectura -> READ APAR readId . ididx lecturapp CPAR PTCOMA
    (50) ididx -> . corArr exp CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 98
    COMA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)

    ididx                          shift and go to state 169
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 142

    (55) readId -> ID .

    ACOR            reduce using rule 55 (readId -> ID .)
    COMA            reduce using rule 55 (readId -> ID .)
    CPAR            reduce using rule 55 (readId -> ID .)


state 143

    (58) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (63) escriturapp -> . COMA escriturap
    (64) escriturapp -> . empty
    (118) empty -> .

    COMA            shift and go to state 171
    CPAR            reduce using rule 118 (empty -> .)

    escriturapp                    shift and go to state 170
    empty                          shift and go to state 172

state 144

    (59) escriturap -> pushEsc .

    COMA            reduce using rule 59 (escriturap -> pushEsc .)
    CPAR            reduce using rule 59 (escriturap -> pushEsc .)


state 145

    (60) escriturap -> exp .

    COMA            reduce using rule 60 (escriturap -> exp .)
    CPAR            reduce using rule 60 (escriturap -> exp .)


state 146

    (61) pushEsc -> STRING .

    COMA            reduce using rule 61 (pushEsc -> STRING .)
    CPAR            reduce using rule 61 (pushEsc -> STRING .)


state 147

    (62) pushEsc -> CTEC .
    (113) ctes -> CTEC .

  ! reduce/reduce conflict for COMA resolved using rule 62 (pushEsc -> CTEC .)
  ! reduce/reduce conflict for CPAR resolved using rule 62 (pushEsc -> CTEC .)
    COMA            reduce using rule 62 (pushEsc -> CTEC .)
    CPAR            reduce using rule 62 (pushEsc -> CTEC .)
    DIV             reduce using rule 113 (ctes -> CTEC .)
    POR             reduce using rule 113 (ctes -> CTEC .)
    MENOS           reduce using rule 113 (ctes -> CTEC .)
    MAS             reduce using rule 113 (ctes -> CTEC .)
    MAYQ            reduce using rule 113 (ctes -> CTEC .)
    MENQ            reduce using rule 113 (ctes -> CTEC .)
    MAYI            reduce using rule 113 (ctes -> CTEC .)
    MENI            reduce using rule 113 (ctes -> CTEC .)
    IGUAL           reduce using rule 113 (ctes -> CTEC .)
    DIF             reduce using rule 113 (ctes -> CTEC .)
    AND             reduce using rule 113 (ctes -> CTEC .)
    OR              reduce using rule 113 (ctes -> CTEC .)

  ! COMA            [ reduce using rule 113 (ctes -> CTEC .) ]
  ! CPAR            [ reduce using rule 113 (ctes -> CTEC .) ]


state 148

    (65) cond -> IF APAR exp . checkCond THEN ALLA estatutos CLLA condpp
    (69) checkCond -> . CPAR

    CPAR            shift and go to state 174

    checkCond                      shift and go to state 173

state 149

    (70) while -> saveWhile APAR exp . checkWhileCond DO ALLA estatutos CLLA
    (72) checkWhileCond -> . CPAR

    CPAR            shift and go to state 176

    checkWhileCond                 shift and go to state 175

state 150

    (73) for -> FOR varFor ididx . IGUAL exp initFor exp beforeDo ALLA estatutos CLLA

    IGUAL           shift and go to state 177


state 151

    (78) expp -> OR exp .

    RETURN          reduce using rule 78 (expp -> OR exp .)
    READ            reduce using rule 78 (expp -> OR exp .)
    WRITE           reduce using rule 78 (expp -> OR exp .)
    IF              reduce using rule 78 (expp -> OR exp .)
    FOR             reduce using rule 78 (expp -> OR exp .)
    ID              reduce using rule 78 (expp -> OR exp .)
    WHILE           reduce using rule 78 (expp -> OR exp .)
    APAR            reduce using rule 78 (expp -> OR exp .)
    CTEC            reduce using rule 78 (expp -> OR exp .)
    CTEI            reduce using rule 78 (expp -> OR exp .)
    CTEF            reduce using rule 78 (expp -> OR exp .)
    CLLA            reduce using rule 78 (expp -> OR exp .)
    CPAR            reduce using rule 78 (expp -> OR exp .)
    CCOR            reduce using rule 78 (expp -> OR exp .)
    COMA            reduce using rule 78 (expp -> OR exp .)
    PTCOMA          reduce using rule 78 (expp -> OR exp .)
    TO              reduce using rule 78 (expp -> OR exp .)
    DO              reduce using rule 78 (expp -> OR exp .)


state 152

    (116) ctes -> ID validateExistance factorp .

    DIV             reduce using rule 116 (ctes -> ID validateExistance factorp .)
    POR             reduce using rule 116 (ctes -> ID validateExistance factorp .)
    MENOS           reduce using rule 116 (ctes -> ID validateExistance factorp .)
    MAS             reduce using rule 116 (ctes -> ID validateExistance factorp .)
    MAYQ            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    MENQ            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    MAYI            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    MENI            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    IGUAL           reduce using rule 116 (ctes -> ID validateExistance factorp .)
    DIF             reduce using rule 116 (ctes -> ID validateExistance factorp .)
    AND             reduce using rule 116 (ctes -> ID validateExistance factorp .)
    OR              reduce using rule 116 (ctes -> ID validateExistance factorp .)
    RETURN          reduce using rule 116 (ctes -> ID validateExistance factorp .)
    READ            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    WRITE           reduce using rule 116 (ctes -> ID validateExistance factorp .)
    IF              reduce using rule 116 (ctes -> ID validateExistance factorp .)
    FOR             reduce using rule 116 (ctes -> ID validateExistance factorp .)
    ID              reduce using rule 116 (ctes -> ID validateExistance factorp .)
    WHILE           reduce using rule 116 (ctes -> ID validateExistance factorp .)
    APAR            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    CTEC            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    CTEI            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    CTEF            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    CLLA            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    CPAR            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    CCOR            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    COMA            reduce using rule 116 (ctes -> ID validateExistance factorp .)
    PTCOMA          reduce using rule 116 (ctes -> ID validateExistance factorp .)
    TO              reduce using rule 116 (ctes -> ID validateExistance factorp .)
    DO              reduce using rule 116 (ctes -> ID validateExistance factorp .)


state 153

    (105) factorp -> APAR . createEra exp valParams factorpp cparParams
    (109) createEra -> .

    APAR            reduce using rule 109 (createEra -> .)
    CTEC            reduce using rule 109 (createEra -> .)
    CTEI            reduce using rule 109 (createEra -> .)
    CTEF            reduce using rule 109 (createEra -> .)
    ID              reduce using rule 109 (createEra -> .)

    createEra                      shift and go to state 178

state 154

    (106) factorp -> ACOR . exp CCOR
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 179
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 155

    (107) factorp -> empty .

    DIV             reduce using rule 107 (factorp -> empty .)
    POR             reduce using rule 107 (factorp -> empty .)
    MENOS           reduce using rule 107 (factorp -> empty .)
    MAS             reduce using rule 107 (factorp -> empty .)
    MAYQ            reduce using rule 107 (factorp -> empty .)
    MENQ            reduce using rule 107 (factorp -> empty .)
    MAYI            reduce using rule 107 (factorp -> empty .)
    MENI            reduce using rule 107 (factorp -> empty .)
    IGUAL           reduce using rule 107 (factorp -> empty .)
    DIF             reduce using rule 107 (factorp -> empty .)
    AND             reduce using rule 107 (factorp -> empty .)
    OR              reduce using rule 107 (factorp -> empty .)
    RETURN          reduce using rule 107 (factorp -> empty .)
    READ            reduce using rule 107 (factorp -> empty .)
    WRITE           reduce using rule 107 (factorp -> empty .)
    IF              reduce using rule 107 (factorp -> empty .)
    FOR             reduce using rule 107 (factorp -> empty .)
    ID              reduce using rule 107 (factorp -> empty .)
    WHILE           reduce using rule 107 (factorp -> empty .)
    APAR            reduce using rule 107 (factorp -> empty .)
    CTEC            reduce using rule 107 (factorp -> empty .)
    CTEI            reduce using rule 107 (factorp -> empty .)
    CTEF            reduce using rule 107 (factorp -> empty .)
    CLLA            reduce using rule 107 (factorp -> empty .)
    CPAR            reduce using rule 107 (factorp -> empty .)
    CCOR            reduce using rule 107 (factorp -> empty .)
    COMA            reduce using rule 107 (factorp -> empty .)
    PTCOMA          reduce using rule 107 (factorp -> empty .)
    TO              reduce using rule 107 (factorp -> empty .)
    DO              reduce using rule 107 (factorp -> empty .)


state 156

    (81) texpp -> andCheck texp .

    OR              reduce using rule 81 (texpp -> andCheck texp .)
    RETURN          reduce using rule 81 (texpp -> andCheck texp .)
    READ            reduce using rule 81 (texpp -> andCheck texp .)
    WRITE           reduce using rule 81 (texpp -> andCheck texp .)
    IF              reduce using rule 81 (texpp -> andCheck texp .)
    FOR             reduce using rule 81 (texpp -> andCheck texp .)
    ID              reduce using rule 81 (texpp -> andCheck texp .)
    WHILE           reduce using rule 81 (texpp -> andCheck texp .)
    APAR            reduce using rule 81 (texpp -> andCheck texp .)
    CTEC            reduce using rule 81 (texpp -> andCheck texp .)
    CTEI            reduce using rule 81 (texpp -> andCheck texp .)
    CTEF            reduce using rule 81 (texpp -> andCheck texp .)
    CLLA            reduce using rule 81 (texpp -> andCheck texp .)
    CPAR            reduce using rule 81 (texpp -> andCheck texp .)
    CCOR            reduce using rule 81 (texpp -> andCheck texp .)
    COMA            reduce using rule 81 (texpp -> andCheck texp .)
    PTCOMA          reduce using rule 81 (texpp -> andCheck texp .)
    TO              reduce using rule 81 (texpp -> andCheck texp .)
    DO              reduce using rule 81 (texpp -> andCheck texp .)


state 157

    (85) gexpp -> addPO mexp .

    AND             reduce using rule 85 (gexpp -> addPO mexp .)
    OR              reduce using rule 85 (gexpp -> addPO mexp .)
    RETURN          reduce using rule 85 (gexpp -> addPO mexp .)
    READ            reduce using rule 85 (gexpp -> addPO mexp .)
    WRITE           reduce using rule 85 (gexpp -> addPO mexp .)
    IF              reduce using rule 85 (gexpp -> addPO mexp .)
    FOR             reduce using rule 85 (gexpp -> addPO mexp .)
    ID              reduce using rule 85 (gexpp -> addPO mexp .)
    WHILE           reduce using rule 85 (gexpp -> addPO mexp .)
    APAR            reduce using rule 85 (gexpp -> addPO mexp .)
    CTEC            reduce using rule 85 (gexpp -> addPO mexp .)
    CTEI            reduce using rule 85 (gexpp -> addPO mexp .)
    CTEF            reduce using rule 85 (gexpp -> addPO mexp .)
    CLLA            reduce using rule 85 (gexpp -> addPO mexp .)
    CPAR            reduce using rule 85 (gexpp -> addPO mexp .)
    CCOR            reduce using rule 85 (gexpp -> addPO mexp .)
    COMA            reduce using rule 85 (gexpp -> addPO mexp .)
    PTCOMA          reduce using rule 85 (gexpp -> addPO mexp .)
    TO              reduce using rule 85 (gexpp -> addPO mexp .)
    DO              reduce using rule 85 (gexpp -> addPO mexp .)


state 158

    (91) addPO -> IGUAL IGUAL .

    APAR            reduce using rule 91 (addPO -> IGUAL IGUAL .)
    CTEC            reduce using rule 91 (addPO -> IGUAL IGUAL .)
    CTEI            reduce using rule 91 (addPO -> IGUAL IGUAL .)
    CTEF            reduce using rule 91 (addPO -> IGUAL IGUAL .)
    ID              reduce using rule 91 (addPO -> IGUAL IGUAL .)


state 159

    (94) mexpp -> operSR mexp .

    MAYQ            reduce using rule 94 (mexpp -> operSR mexp .)
    MENQ            reduce using rule 94 (mexpp -> operSR mexp .)
    MAYI            reduce using rule 94 (mexpp -> operSR mexp .)
    MENI            reduce using rule 94 (mexpp -> operSR mexp .)
    IGUAL           reduce using rule 94 (mexpp -> operSR mexp .)
    DIF             reduce using rule 94 (mexpp -> operSR mexp .)
    AND             reduce using rule 94 (mexpp -> operSR mexp .)
    OR              reduce using rule 94 (mexpp -> operSR mexp .)
    RETURN          reduce using rule 94 (mexpp -> operSR mexp .)
    READ            reduce using rule 94 (mexpp -> operSR mexp .)
    WRITE           reduce using rule 94 (mexpp -> operSR mexp .)
    IF              reduce using rule 94 (mexpp -> operSR mexp .)
    FOR             reduce using rule 94 (mexpp -> operSR mexp .)
    ID              reduce using rule 94 (mexpp -> operSR mexp .)
    WHILE           reduce using rule 94 (mexpp -> operSR mexp .)
    APAR            reduce using rule 94 (mexpp -> operSR mexp .)
    CTEC            reduce using rule 94 (mexpp -> operSR mexp .)
    CTEI            reduce using rule 94 (mexpp -> operSR mexp .)
    CTEF            reduce using rule 94 (mexpp -> operSR mexp .)
    CLLA            reduce using rule 94 (mexpp -> operSR mexp .)
    CPAR            reduce using rule 94 (mexpp -> operSR mexp .)
    CCOR            reduce using rule 94 (mexpp -> operSR mexp .)
    COMA            reduce using rule 94 (mexpp -> operSR mexp .)
    PTCOMA          reduce using rule 94 (mexpp -> operSR mexp .)
    TO              reduce using rule 94 (mexpp -> operSR mexp .)
    DO              reduce using rule 94 (mexpp -> operSR mexp .)


state 160

    (99) terminop -> oper termino .

    MENOS           reduce using rule 99 (terminop -> oper termino .)
    MAS             reduce using rule 99 (terminop -> oper termino .)
    MAYQ            reduce using rule 99 (terminop -> oper termino .)
    MENQ            reduce using rule 99 (terminop -> oper termino .)
    MAYI            reduce using rule 99 (terminop -> oper termino .)
    MENI            reduce using rule 99 (terminop -> oper termino .)
    IGUAL           reduce using rule 99 (terminop -> oper termino .)
    DIF             reduce using rule 99 (terminop -> oper termino .)
    AND             reduce using rule 99 (terminop -> oper termino .)
    OR              reduce using rule 99 (terminop -> oper termino .)
    RETURN          reduce using rule 99 (terminop -> oper termino .)
    READ            reduce using rule 99 (terminop -> oper termino .)
    WRITE           reduce using rule 99 (terminop -> oper termino .)
    IF              reduce using rule 99 (terminop -> oper termino .)
    FOR             reduce using rule 99 (terminop -> oper termino .)
    ID              reduce using rule 99 (terminop -> oper termino .)
    WHILE           reduce using rule 99 (terminop -> oper termino .)
    APAR            reduce using rule 99 (terminop -> oper termino .)
    CTEC            reduce using rule 99 (terminop -> oper termino .)
    CTEI            reduce using rule 99 (terminop -> oper termino .)
    CTEF            reduce using rule 99 (terminop -> oper termino .)
    CLLA            reduce using rule 99 (terminop -> oper termino .)
    CPAR            reduce using rule 99 (terminop -> oper termino .)
    CCOR            reduce using rule 99 (terminop -> oper termino .)
    COMA            reduce using rule 99 (terminop -> oper termino .)
    PTCOMA          reduce using rule 99 (terminop -> oper termino .)
    TO              reduce using rule 99 (terminop -> oper termino .)
    DO              reduce using rule 99 (terminop -> oper termino .)


state 161

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss . ALLA addsize estatutos CLLA endfunction funcs

    ALLA            shift and go to state 180


state 162

    (37) params -> tipo DOSPNTS insertParams ididx paramsp .

    CPAR            reduce using rule 37 (params -> tipo DOSPNTS insertParams ididx paramsp .)


state 163

    (40) paramsp -> COMA . params
    (37) params -> . tipo DOSPNTS insertParams ididx paramsp
    (38) params -> . empty
    (34) tipo -> . INT
    (35) tipo -> . FLOAT
    (36) tipo -> . CHAR
    (118) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 118 (empty -> .)

    params                         shift and go to state 181
    tipo                           shift and go to state 37
    empty                          shift and go to state 38

state 164

    (41) paramsp -> empty .

    CPAR            reduce using rule 41 (paramsp -> empty .)


state 165

    (42) asig -> varAs ididx igualAs asigpp . PTCOMA

    PTCOMA          shift and go to state 182


state 166

    (49) asigpp -> exp .

    PTCOMA          reduce using rule 49 (asigpp -> exp .)


state 167

    (50) ididx -> corArr exp CCOR .

    IGUAL           reduce using rule 50 (ididx -> corArr exp CCOR .)
    COMA            reduce using rule 50 (ididx -> corArr exp CCOR .)
    CPAR            reduce using rule 50 (ididx -> corArr exp CCOR .)


state 168

    (53) return -> RETURN APAR exp CPAR . PTCOMA

    PTCOMA          shift and go to state 183


state 169

    (54) lectura -> READ APAR readId ididx . lecturapp CPAR PTCOMA
    (56) lecturapp -> . COMA readId ididx lecturapp
    (57) lecturapp -> . empty
    (118) empty -> .

    COMA            shift and go to state 185
    CPAR            reduce using rule 118 (empty -> .)

    lecturapp                      shift and go to state 184
    empty                          shift and go to state 186

state 170

    (58) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 187


state 171

    (63) escriturapp -> COMA . escriturap
    (59) escriturap -> . pushEsc
    (60) escriturap -> . exp
    (61) pushEsc -> . STRING
    (62) pushEsc -> . CTEC
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 146
    CTEC            shift and go to state 147
    APAR            shift and go to state 50
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    escriturap                     shift and go to state 188
    pushEsc                        shift and go to state 144
    exp                            shift and go to state 145
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 172

    (64) escriturapp -> empty .

    CPAR            reduce using rule 64 (escriturapp -> empty .)


state 173

    (65) cond -> IF APAR exp checkCond . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 189


state 174

    (69) checkCond -> CPAR .

    THEN            reduce using rule 69 (checkCond -> CPAR .)


state 175

    (70) while -> saveWhile APAR exp checkWhileCond . DO ALLA estatutos CLLA

    DO              shift and go to state 190


state 176

    (72) checkWhileCond -> CPAR .

    DO              reduce using rule 72 (checkWhileCond -> CPAR .)


state 177

    (73) for -> FOR varFor ididx IGUAL . exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 191
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 178

    (105) factorp -> APAR createEra . exp valParams factorpp cparParams
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 192
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 179

    (106) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 193


state 180

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA . addsize estatutos CLLA endfunction funcs
    (21) addsize -> .

    RETURN          reduce using rule 21 (addsize -> .)
    READ            reduce using rule 21 (addsize -> .)
    WRITE           reduce using rule 21 (addsize -> .)
    IF              reduce using rule 21 (addsize -> .)
    FOR             reduce using rule 21 (addsize -> .)
    ID              reduce using rule 21 (addsize -> .)
    WHILE           reduce using rule 21 (addsize -> .)
    APAR            reduce using rule 21 (addsize -> .)
    CTEC            reduce using rule 21 (addsize -> .)
    CTEI            reduce using rule 21 (addsize -> .)
    CTEF            reduce using rule 21 (addsize -> .)

    addsize                        shift and go to state 194

state 181

    (40) paramsp -> COMA params .

    CPAR            reduce using rule 40 (paramsp -> COMA params .)


state 182

    (42) asig -> varAs ididx igualAs asigpp PTCOMA .

    RETURN          reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    READ            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WRITE           reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    IF              reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    FOR             reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    ID              reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WHILE           reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    APAR            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEC            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEI            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEF            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CLLA            reduce using rule 42 (asig -> varAs ididx igualAs asigpp PTCOMA .)


state 183

    (53) return -> RETURN APAR exp CPAR PTCOMA .

    RETURN          reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    READ            reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    WRITE           reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    IF              reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    FOR             reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    ID              reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    WHILE           reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    APAR            reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEC            reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEI            reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEF            reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)
    CLLA            reduce using rule 53 (return -> RETURN APAR exp CPAR PTCOMA .)


state 184

    (54) lectura -> READ APAR readId ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 195


state 185

    (56) lecturapp -> COMA . readId ididx lecturapp
    (55) readId -> . ID

    ID              shift and go to state 142

    readId                         shift and go to state 196

state 186

    (57) lecturapp -> empty .

    CPAR            reduce using rule 57 (lecturapp -> empty .)


state 187

    (58) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 197


state 188

    (63) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 63 (escriturapp -> COMA escriturap .)


state 189

    (65) cond -> IF APAR exp checkCond THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 198


state 190

    (70) while -> saveWhile APAR exp checkWhileCond DO . ALLA estatutos CLLA

    ALLA            shift and go to state 199


state 191

    (73) for -> FOR varFor ididx IGUAL exp . initFor exp beforeDo ALLA estatutos CLLA
    (75) initFor -> . TO

    TO              shift and go to state 201

    initFor                        shift and go to state 200

state 192

    (105) factorp -> APAR createEra exp . valParams factorpp cparParams
    (110) valParams -> .

    COMA            reduce using rule 110 (valParams -> .)
    CPAR            reduce using rule 110 (valParams -> .)

    valParams                      shift and go to state 202

state 193

    (106) factorp -> ACOR exp CCOR .

    DIV             reduce using rule 106 (factorp -> ACOR exp CCOR .)
    POR             reduce using rule 106 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 106 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 106 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    IGUAL           reduce using rule 106 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 106 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 106 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 106 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 106 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 106 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 106 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 106 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 106 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 106 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    CTEC            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 106 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 106 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 106 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 106 (factorp -> ACOR exp CCOR .)


state 194

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize . estatutos CLLA endfunction funcs
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    estatutos                      shift and go to state 203
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 195

    (54) lectura -> READ APAR readId ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 204


state 196

    (56) lecturapp -> COMA readId . ididx lecturapp
    (50) ididx -> . corArr exp CCOR
    (51) ididx -> . empty
    (52) corArr -> . ACOR
    (118) empty -> .

    ACOR            shift and go to state 98
    COMA            reduce using rule 118 (empty -> .)
    CPAR            reduce using rule 118 (empty -> .)

    ididx                          shift and go to state 205
    corArr                         shift and go to state 96
    empty                          shift and go to state 97

state 197

    (58) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    RETURN          reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    ID              reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEC            reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 58 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 198

    (65) cond -> IF APAR exp checkCond THEN ALLA . estatutos CLLA condpp
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    exp                            shift and go to state 59
    estatutos                      shift and go to state 206
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 199

    (70) while -> saveWhile APAR exp checkWhileCond DO ALLA . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    saveWhile                      shift and go to state 65
    exp                            shift and go to state 59
    estatutos                      shift and go to state 207
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 200

    (73) for -> FOR varFor ididx IGUAL exp initFor . exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 208
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 201

    (75) initFor -> TO .

    APAR            reduce using rule 75 (initFor -> TO .)
    CTEC            reduce using rule 75 (initFor -> TO .)
    CTEI            reduce using rule 75 (initFor -> TO .)
    CTEF            reduce using rule 75 (initFor -> TO .)
    ID              reduce using rule 75 (initFor -> TO .)


state 202

    (105) factorp -> APAR createEra exp valParams . factorpp cparParams
    (111) factorpp -> . COMA exp valParams factorpp
    (112) factorpp -> . empty
    (118) empty -> .

    COMA            shift and go to state 210
    CPAR            reduce using rule 118 (empty -> .)

    factorpp                       shift and go to state 209
    empty                          shift and go to state 211

state 203

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos . CLLA endfunction funcs

    CLLA            shift and go to state 212


state 204

    (54) lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .

    RETURN          reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    ID              reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEC            reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 54 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)


state 205

    (56) lecturapp -> COMA readId ididx . lecturapp
    (56) lecturapp -> . COMA readId ididx lecturapp
    (57) lecturapp -> . empty
    (118) empty -> .

    COMA            shift and go to state 185
    CPAR            reduce using rule 118 (empty -> .)

    lecturapp                      shift and go to state 213
    empty                          shift and go to state 186

state 206

    (65) cond -> IF APAR exp checkCond THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 214


state 207

    (70) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos . CLLA

    CLLA            shift and go to state 215


state 208

    (73) for -> FOR varFor ididx IGUAL exp initFor exp . beforeDo ALLA estatutos CLLA
    (76) beforeDo -> . DO

    DO              shift and go to state 217

    beforeDo                       shift and go to state 216

state 209

    (105) factorp -> APAR createEra exp valParams factorpp . cparParams
    (108) cparParams -> . CPAR

    CPAR            shift and go to state 219

    cparParams                     shift and go to state 218

state 210

    (111) factorpp -> COMA . exp valParams factorpp
    (77) exp -> . texp expp
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77
    ID              shift and go to state 83

    exp                            shift and go to state 220
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 211

    (112) factorpp -> empty .

    CPAR            reduce using rule 112 (factorpp -> empty .)


state 212

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA . endfunction funcs
    (20) endfunction -> .

    FUNCTION        reduce using rule 20 (endfunction -> .)
    MAIN            reduce using rule 20 (endfunction -> .)

    endfunction                    shift and go to state 221

state 213

    (56) lecturapp -> COMA readId ididx lecturapp .

    CPAR            reduce using rule 56 (lecturapp -> COMA readId ididx lecturapp .)


state 214

    (65) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA . condpp
    (66) condpp -> . checkElse ALLA estatutos CLLA
    (67) condpp -> . empty
    (68) checkElse -> . ELSE
    (118) empty -> .

    ELSE            shift and go to state 225
    RETURN          reduce using rule 118 (empty -> .)
    READ            reduce using rule 118 (empty -> .)
    WRITE           reduce using rule 118 (empty -> .)
    IF              reduce using rule 118 (empty -> .)
    FOR             reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    WHILE           reduce using rule 118 (empty -> .)
    APAR            reduce using rule 118 (empty -> .)
    CTEC            reduce using rule 118 (empty -> .)
    CTEI            reduce using rule 118 (empty -> .)
    CTEF            reduce using rule 118 (empty -> .)
    CLLA            reduce using rule 118 (empty -> .)

    condpp                         shift and go to state 222
    checkElse                      shift and go to state 223
    empty                          shift and go to state 224

state 215

    (70) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .

    RETURN          reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    READ            reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    IF              reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    FOR             reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    ID              reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    APAR            reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEC            reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 70 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)


state 216

    (73) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo . ALLA estatutos CLLA

    ALLA            shift and go to state 226


state 217

    (76) beforeDo -> DO .

    ALLA            reduce using rule 76 (beforeDo -> DO .)


state 218

    (105) factorp -> APAR createEra exp valParams factorpp cparParams .

    DIV             reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    POR             reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MENOS           reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MAS             reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MAYQ            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MENQ            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MAYI            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    MENI            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    IGUAL           reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    DIF             reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    AND             reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    OR              reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    RETURN          reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    READ            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    WRITE           reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    IF              reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    FOR             reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    ID              reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    WHILE           reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    APAR            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CTEC            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CTEI            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CTEF            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CLLA            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CPAR            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    CCOR            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    COMA            reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    PTCOMA          reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    TO              reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)
    DO              reduce using rule 105 (factorp -> APAR createEra exp valParams factorpp cparParams .)


state 219

    (108) cparParams -> CPAR .

    DIV             reduce using rule 108 (cparParams -> CPAR .)
    POR             reduce using rule 108 (cparParams -> CPAR .)
    MENOS           reduce using rule 108 (cparParams -> CPAR .)
    MAS             reduce using rule 108 (cparParams -> CPAR .)
    MAYQ            reduce using rule 108 (cparParams -> CPAR .)
    MENQ            reduce using rule 108 (cparParams -> CPAR .)
    MAYI            reduce using rule 108 (cparParams -> CPAR .)
    MENI            reduce using rule 108 (cparParams -> CPAR .)
    IGUAL           reduce using rule 108 (cparParams -> CPAR .)
    DIF             reduce using rule 108 (cparParams -> CPAR .)
    AND             reduce using rule 108 (cparParams -> CPAR .)
    OR              reduce using rule 108 (cparParams -> CPAR .)
    RETURN          reduce using rule 108 (cparParams -> CPAR .)
    READ            reduce using rule 108 (cparParams -> CPAR .)
    WRITE           reduce using rule 108 (cparParams -> CPAR .)
    IF              reduce using rule 108 (cparParams -> CPAR .)
    FOR             reduce using rule 108 (cparParams -> CPAR .)
    ID              reduce using rule 108 (cparParams -> CPAR .)
    WHILE           reduce using rule 108 (cparParams -> CPAR .)
    APAR            reduce using rule 108 (cparParams -> CPAR .)
    CTEC            reduce using rule 108 (cparParams -> CPAR .)
    CTEI            reduce using rule 108 (cparParams -> CPAR .)
    CTEF            reduce using rule 108 (cparParams -> CPAR .)
    CLLA            reduce using rule 108 (cparParams -> CPAR .)
    CPAR            reduce using rule 108 (cparParams -> CPAR .)
    CCOR            reduce using rule 108 (cparParams -> CPAR .)
    COMA            reduce using rule 108 (cparParams -> CPAR .)
    PTCOMA          reduce using rule 108 (cparParams -> CPAR .)
    TO              reduce using rule 108 (cparParams -> CPAR .)
    DO              reduce using rule 108 (cparParams -> CPAR .)


state 220

    (111) factorpp -> COMA exp . valParams factorpp
    (110) valParams -> .

    COMA            reduce using rule 110 (valParams -> .)
    CPAR            reduce using rule 110 (valParams -> .)

    valParams                      shift and go to state 227

state 221

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction . funcs
    (15) funcs -> . FUNCTION funcsp insertFunc funcspp
    (16) funcs -> . empty
    (118) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 118 (empty -> .)

    funcs                          shift and go to state 228
    empty                          shift and go to state 11

state 222

    (65) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .

    RETURN          reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    ID              reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEC            reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 65 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)


state 223

    (66) condpp -> checkElse . ALLA estatutos CLLA

    ALLA            shift and go to state 229


state 224

    (67) condpp -> empty .

    RETURN          reduce using rule 67 (condpp -> empty .)
    READ            reduce using rule 67 (condpp -> empty .)
    WRITE           reduce using rule 67 (condpp -> empty .)
    IF              reduce using rule 67 (condpp -> empty .)
    FOR             reduce using rule 67 (condpp -> empty .)
    ID              reduce using rule 67 (condpp -> empty .)
    WHILE           reduce using rule 67 (condpp -> empty .)
    APAR            reduce using rule 67 (condpp -> empty .)
    CTEC            reduce using rule 67 (condpp -> empty .)
    CTEI            reduce using rule 67 (condpp -> empty .)
    CTEF            reduce using rule 67 (condpp -> empty .)
    CLLA            reduce using rule 67 (condpp -> empty .)


state 225

    (68) checkElse -> ELSE .

    ALLA            reduce using rule 68 (checkElse -> ELSE .)


state 226

    (73) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    exp                            shift and go to state 59
    estatutos                      shift and go to state 230
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 227

    (111) factorpp -> COMA exp valParams . factorpp
    (111) factorpp -> . COMA exp valParams factorpp
    (112) factorpp -> . empty
    (118) empty -> .

    COMA            shift and go to state 210
    CPAR            reduce using rule 118 (empty -> .)

    factorpp                       shift and go to state 231
    empty                          shift and go to state 211

state 228

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .

    MAIN            reduce using rule 18 (funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .)


state 229

    (66) condpp -> checkElse ALLA . estatutos CLLA
    (24) estatutos -> . asig estatutop
    (25) estatutos -> . return estatutop
    (26) estatutos -> . lectura estatutop
    (27) estatutos -> . escritura estatutop
    (28) estatutos -> . cond estatutop
    (29) estatutos -> . while estatutop
    (30) estatutos -> . for estatutop
    (31) estatutos -> . exp estatutop
    (42) asig -> . varAs ididx igualAs asigpp PTCOMA
    (53) return -> . RETURN APAR exp CPAR PTCOMA
    (54) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (58) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (65) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (70) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (73) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (77) exp -> . texp expp
    (43) varAs -> . ID
    (71) saveWhile -> . WHILE
    (80) texp -> . gexp texpp
    (84) gexp -> . mexp gexpp
    (93) mexp -> . termino mexpp
    (98) termino -> . factor terminop
    (103) factor -> . APAR exp CPAR
    (104) factor -> . ctes
    (113) ctes -> . CTEC
    (114) ctes -> . CTEI
    (115) ctes -> . CTEF
    (116) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 75
    CTEI            shift and go to state 76
    CTEF            shift and go to state 77

    estatutos                      shift and go to state 232
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 74

state 230

    (73) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos . CLLA

    CLLA            shift and go to state 233


state 231

    (111) factorpp -> COMA exp valParams factorpp .

    CPAR            reduce using rule 111 (factorpp -> COMA exp valParams factorpp .)


state 232

    (66) condpp -> checkElse ALLA estatutos . CLLA

    CLLA            shift and go to state 234


state 233

    (73) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .

    RETURN          reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    READ            reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WRITE           reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    IF              reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    FOR             reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    ID              reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WHILE           reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    APAR            reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEC            reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEI            reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEF            reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CLLA            reduce using rule 73 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)


state 234

    (66) condpp -> checkElse ALLA estatutos CLLA .

    RETURN          reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    READ            reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    WRITE           reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    IF              reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    FOR             reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    ID              reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    WHILE           reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    APAR            reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEC            reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEI            reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEF            reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)
    CLLA            reduce using rule 66 (condpp -> checkElse ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 109 resolved as shift
WARNING: reduce/reduce conflict in state 68 resolved using rule (varAs -> ID)
WARNING: rejected rule (validateExistance -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 147 resolved using rule (pushEsc -> CTEC)
WARNING: rejected rule (ctes -> CTEC) in state 147
