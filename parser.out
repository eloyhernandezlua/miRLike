Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    NOT
    STR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     varss -> VARS vars
Rule 4     varss -> empty
Rule 5     vars -> tipo DOSPNTS ID varsppp varspp vars
Rule 6     vars -> empty
Rule 7     varsppp -> ACOR CTEI CCOR
Rule 8     varsppp -> empty
Rule 9     varspp -> PTCOMA
Rule 10    varspp -> COMA ID varsppp varspp
Rule 11    funcs -> FUNCTION funcsp ID funcspp
Rule 12    funcs -> empty
Rule 13    funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
Rule 14    funcsp -> VOID
Rule 15    funcsp -> tipo
Rule 16    estatutos -> asig estatutop
Rule 17    estatutos -> llamada estatutop
Rule 18    estatutos -> return estatutop
Rule 19    estatutos -> lectura estatutop
Rule 20    estatutos -> escritura estatutop
Rule 21    estatutos -> cond estatutop
Rule 22    estatutos -> while estatutop
Rule 23    estatutos -> for estatutop
Rule 24    estatutos -> exp estatutop
Rule 25    estatutop -> estatutos
Rule 26    estatutop -> empty
Rule 27    tipo -> INT
Rule 28    tipo -> FLOAT
Rule 29    tipo -> CHAR
Rule 30    params -> tipo DOSPNTS ID ididx paramsp
Rule 31    params -> empty
Rule 32    paramsp -> COMA params
Rule 33    paramsp -> empty
Rule 34    asig -> ID ididx IGUAL asigpp PTCOMA
Rule 35    asigp -> exp asigppp
Rule 36    asigp -> CTEC asigppp
Rule 37    asigp -> empty
Rule 38    asigppp -> COMA asigp
Rule 39    asigppp -> empty
Rule 40    asigpp -> exp
Rule 41    asigpp -> CTEC
Rule 42    asigpp -> ACOR asigp CCOR
Rule 43    ididx -> ACOR exp CCOR
Rule 44    ididx -> empty
Rule 45    llamada -> ID APAR args CPAR PTCOMA
Rule 46    args -> ctes argsp
Rule 47    args -> exp argsp
Rule 48    args -> CTEC argsp
Rule 49    argsp -> COMA args
Rule 50    argsp -> empty
Rule 51    return -> RETURN APAR asigpp CPAR PTCOMA
Rule 52    lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA
Rule 53    lecturapp -> COMA ID ididx lecturapp
Rule 54    lecturapp -> empty
Rule 55    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 56    escriturap -> STRING
Rule 57    escriturap -> exp
Rule 58    escriturap -> CTEC
Rule 59    escriturapp -> COMA escriturap
Rule 60    escriturapp -> empty
Rule 61    cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
Rule 62    condp -> exp
Rule 63    condp -> TRUE
Rule 64    condp -> FALSE
Rule 65    condpp -> ELSE ALLA estatutos CLLA
Rule 66    condpp -> empty
Rule 67    while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA
Rule 68    for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
Rule 69    exp -> texp expp
Rule 70    expp -> OR exp
Rule 71    expp -> empty
Rule 72    texp -> gexp texpp
Rule 73    texpp -> AND texp
Rule 74    texpp -> empty
Rule 75    gexp -> mexp gexpp
Rule 76    gexpp -> MAYQ mexp
Rule 77    gexpp -> MENQ mexp
Rule 78    gexpp -> MAYI mexp
Rule 79    gexpp -> MENI mexp
Rule 80    gexpp -> IGUALIGUAL mexp
Rule 81    gexpp -> DIF mexp
Rule 82    gexpp -> empty
Rule 83    mexp -> termino mexpp
Rule 84    mexpp -> MAS mexp
Rule 85    mexpp -> MENOS mexp
Rule 86    mexpp -> empty
Rule 87    termino -> factor terminop
Rule 88    terminop -> POR termino
Rule 89    terminop -> DIV termino
Rule 90    terminop -> empty
Rule 91    factor -> APAR exp CPAR
Rule 92    factor -> ID factorp
Rule 93    factor -> ctes
Rule 94    factorp -> APAR exp factorpp CPAR
Rule 95    factorp -> ACOR exp CCOR
Rule 96    factorp -> empty
Rule 97    factorpp -> COMA exp factorpp
Rule 98    factorpp -> empty
Rule 99    ctes -> ID factorp
Rule 100   ctes -> CTEI
Rule 101   ctes -> CTEF
Rule 102   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 7 42 43 95
ALLA                 : 1 13 61 65 67 68
AND                  : 73
APAR                 : 1 13 45 51 52 55 61 67 91 94
BOOL                 : 
CCOR                 : 7 42 43 95
CHAR                 : 29
CLLA                 : 1 13 61 65 67 68
COMA                 : 10 32 38 49 53 59 97
CPAR                 : 1 13 45 51 52 55 61 67 91 94
CTEC                 : 36 41 48 58
CTEF                 : 101
CTEI                 : 7 100
DIF                  : 81
DIV                  : 89
DO                   : 67 68
DOSPNTS              : 5 30
ELSE                 : 65
FALSE                : 64
FLOAT                : 28
FOR                  : 68
FUNCTION             : 11
ID                   : 2 5 10 11 30 34 45 52 53 68 92 99
IF                   : 61
IGUAL                : 34 68
IGUALIGUAL           : 80
INT                  : 27
MAIN                 : 1
MAS                  : 84
MAYI                 : 78
MAYQ                 : 76
MENI                 : 79
MENOS                : 85
MENQ                 : 77
NOT                  : 
OR                   : 70
POR                  : 88
PROGRAM              : 1
PTCOMA               : 2 9 13 34 45 51 52 55
READ                 : 52
RETURN               : 51
STR                  : 
STRING               : 56
THEN                 : 61
TO                   : 68
TRUE                 : 63
VARS                 : 3
VOID                 : 14
WHILE                : 67
WRITE                : 55
error                : 

Nonterminals, with rules where they appear

agregarTablaFunciones : 1
args                 : 45 49
argsp                : 46 47 48
asig                 : 16
asigp                : 38 42
asigpp               : 34 51
asigppp              : 35 36
cond                 : 21
condp                : 61 67
condpp               : 61
ctes                 : 46 93
empty                : 4 6 8 12 26 31 33 37 39 44 50 54 60 66 71 74 82 86 90 96 98
escritura            : 20
escriturap           : 55 59
escriturapp          : 55
estatutop            : 16 17 18 19 20 21 22 23 24
estatutos            : 1 13 25 61 65 67 68
exp                  : 24 35 40 43 47 57 62 68 68 70 91 94 95 97
expp                 : 69
factor               : 87
factorp              : 92 99
factorpp             : 94 97
for                  : 23
funcs                : 1 13
funcsp               : 11
funcspp              : 11
gexp                 : 72
gexpp                : 75
ididx                : 30 34 52 53 68
lectura              : 19
lecturapp            : 52 53
llamada              : 17
mexp                 : 75 76 77 78 79 80 81 84 85
mexpp                : 83
params               : 13 32
paramsp              : 30
program              : 0
return               : 18
termino              : 83 88 89
terminop             : 87
texp                 : 69 73
texpp                : 72
tipo                 : 5 15 30
vars                 : 3 5
varspp               : 5 10
varsppp              : 5 10
varss                : 1 13
while                : 22

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (3) varss -> . VARS vars
    (4) varss -> . empty
    (102) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 102 (empty -> .)
    MAIN            reduce using rule 102 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA estatutos CLLA
    (11) funcs -> . FUNCTION funcsp ID funcspp
    (12) funcs -> . empty
    (102) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 102 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (3) varss -> VARS . vars
    (5) vars -> . tipo DOSPNTS ID varsppp varspp vars
    (6) vars -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (102) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 102 (empty -> .)
    MAIN            reduce using rule 102 (empty -> .)
    ALLA            reduce using rule 102 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (4) varss -> empty .

    FUNCTION        reduce using rule 4 (varss -> empty .)
    MAIN            reduce using rule 4 (varss -> empty .)
    ALLA            reduce using rule 4 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (11) funcs -> FUNCTION . funcsp ID funcspp
    (14) funcsp -> . VOID
    (15) funcsp -> . tipo
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (12) funcs -> empty .

    MAIN            reduce using rule 12 (funcs -> empty .)


state 12

    (3) varss -> VARS vars .

    FUNCTION        reduce using rule 3 (varss -> VARS vars .)
    MAIN            reduce using rule 3 (varss -> VARS vars .)
    ALLA            reduce using rule 3 (varss -> VARS vars .)


state 13

    (5) vars -> tipo . DOSPNTS ID varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    ALLA            reduce using rule 6 (vars -> empty .)


state 15

    (27) tipo -> INT .

    DOSPNTS         reduce using rule 27 (tipo -> INT .)
    ID              reduce using rule 27 (tipo -> INT .)


state 16

    (28) tipo -> FLOAT .

    DOSPNTS         reduce using rule 28 (tipo -> FLOAT .)
    ID              reduce using rule 28 (tipo -> FLOAT .)


state 17

    (29) tipo -> CHAR .

    DOSPNTS         reduce using rule 29 (tipo -> CHAR .)
    ID              reduce using rule 29 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA estatutos CLLA

    APAR            shift and go to state 23


state 19

    (11) funcs -> FUNCTION funcsp . ID funcspp

    ID              shift and go to state 24


state 20

    (14) funcsp -> VOID .

    ID              reduce using rule 14 (funcsp -> VOID .)


state 21

    (15) funcsp -> tipo .

    ID              reduce using rule 15 (funcsp -> tipo .)


state 22

    (5) vars -> tipo DOSPNTS . ID varsppp varspp vars

    ID              shift and go to state 25


state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA estatutos CLLA

    CPAR            shift and go to state 26


state 24

    (11) funcs -> FUNCTION funcsp ID . funcspp
    (13) funcspp -> . APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs

    APAR            shift and go to state 28

    funcspp                        shift and go to state 27

state 25

    (5) vars -> tipo DOSPNTS ID . varsppp varspp vars
    (7) varsppp -> . ACOR CTEI CCOR
    (8) varsppp -> . empty
    (102) empty -> .

    ACOR            shift and go to state 30
    PTCOMA          reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)

    varsppp                        shift and go to state 29
    empty                          shift and go to state 31

state 26

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA estatutos CLLA

    ALLA            shift and go to state 32


state 27

    (11) funcs -> FUNCTION funcsp ID funcspp .

    MAIN            reduce using rule 11 (funcs -> FUNCTION funcsp ID funcspp .)


state 28

    (13) funcspp -> APAR . params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (30) params -> . tipo DOSPNTS ID ididx paramsp
    (31) params -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (102) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 102 (empty -> .)

    params                         shift and go to state 33
    tipo                           shift and go to state 34
    empty                          shift and go to state 35

state 29

    (5) vars -> tipo DOSPNTS ID varsppp . varspp vars
    (9) varspp -> . PTCOMA
    (10) varspp -> . COMA ID varsppp varspp

    PTCOMA          shift and go to state 37
    COMA            shift and go to state 38

    varspp                         shift and go to state 36

state 30

    (7) varsppp -> ACOR . CTEI CCOR

    CTEI            shift and go to state 39


state 31

    (8) varsppp -> empty .

    PTCOMA          reduce using rule 8 (varsppp -> empty .)
    COMA            reduce using rule 8 (varsppp -> empty .)


state 32

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 41
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 33

    (13) funcspp -> APAR params . CPAR PTCOMA varss ALLA estatutos CLLA funcs

    CPAR            shift and go to state 66


state 34

    (30) params -> tipo . DOSPNTS ID ididx paramsp

    DOSPNTS         shift and go to state 67


state 35

    (31) params -> empty .

    CPAR            reduce using rule 31 (params -> empty .)


state 36

    (5) vars -> tipo DOSPNTS ID varsppp varspp . vars
    (5) vars -> . tipo DOSPNTS ID varsppp varspp vars
    (6) vars -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (102) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 102 (empty -> .)
    MAIN            reduce using rule 102 (empty -> .)
    ALLA            reduce using rule 102 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 68
    empty                          shift and go to state 14

state 37

    (9) varspp -> PTCOMA .

    INT             reduce using rule 9 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 9 (varspp -> PTCOMA .)
    CHAR            reduce using rule 9 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 9 (varspp -> PTCOMA .)
    MAIN            reduce using rule 9 (varspp -> PTCOMA .)
    ALLA            reduce using rule 9 (varspp -> PTCOMA .)


state 38

    (10) varspp -> COMA . ID varsppp varspp

    ID              shift and go to state 69


state 39

    (7) varsppp -> ACOR CTEI . CCOR

    CCOR            shift and go to state 70


state 40

    (91) factor -> APAR . exp CPAR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 71
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 41

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos . CLLA

    CLLA            shift and go to state 73


state 42

    (16) estatutos -> asig . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asig                           shift and go to state 42
    estatutop                      shift and go to state 74
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 43

    (17) estatutos -> llamada . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    llamada                        shift and go to state 43
    estatutop                      shift and go to state 77
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 44

    (18) estatutos -> return . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    return                         shift and go to state 44
    estatutop                      shift and go to state 78
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 45

    (19) estatutos -> lectura . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    lectura                        shift and go to state 45
    estatutop                      shift and go to state 79
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 46

    (20) estatutos -> escritura . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    escritura                      shift and go to state 46
    estatutop                      shift and go to state 80
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 47

    (21) estatutos -> cond . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    cond                           shift and go to state 47
    estatutop                      shift and go to state 81
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 48

    (22) estatutos -> while . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    while                          shift and go to state 48
    estatutop                      shift and go to state 82
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 49

    (23) estatutos -> for . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    for                            shift and go to state 49
    estatutop                      shift and go to state 83
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 50

    (24) estatutos -> exp . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (102) empty -> .
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CLLA            reduce using rule 102 (empty -> .)
    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 50
    estatutop                      shift and go to state 84
    estatutos                      shift and go to state 75
    empty                          shift and go to state 76
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 51

    (34) asig -> ID . ididx IGUAL asigpp PTCOMA
    (45) llamada -> ID . APAR args CPAR PTCOMA
    (92) factor -> ID . factorp
    (99) ctes -> ID . factorp
    (43) ididx -> . ACOR exp CCOR
    (44) ididx -> . empty
    (94) factorp -> . APAR exp factorpp CPAR
    (95) factorp -> . ACOR exp CCOR
    (96) factorp -> . empty
    (102) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 86
    ACOR            shift and go to state 88
    IGUAL           reduce using rule 102 (empty -> .)
    POR             reduce using rule 102 (empty -> .)
    DIV             reduce using rule 102 (empty -> .)
    MAS             reduce using rule 102 (empty -> .)
    MENOS           reduce using rule 102 (empty -> .)
    MAYQ            reduce using rule 102 (empty -> .)
    MENQ            reduce using rule 102 (empty -> .)
    MAYI            reduce using rule 102 (empty -> .)
    MENI            reduce using rule 102 (empty -> .)
    IGUALIGUAL      reduce using rule 102 (empty -> .)
    DIF             reduce using rule 102 (empty -> .)
    AND             reduce using rule 102 (empty -> .)
    OR              reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)

  ! APAR            [ reduce using rule 102 (empty -> .) ]

    ididx                          shift and go to state 85
    factorp                        shift and go to state 87
    empty                          shift and go to state 89

state 52

    (51) return -> RETURN . APAR asigpp CPAR PTCOMA

    APAR            shift and go to state 90


state 53

    (52) lectura -> READ . APAR ID ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 91


state 54

    (55) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 92


state 55

    (61) cond -> IF . APAR condp CPAR THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 93


state 56

    (67) while -> WHILE . APAR condp CPAR DO ALLA estatutos CLLA

    APAR            shift and go to state 94


state 57

    (68) for -> FOR . ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA

    ID              shift and go to state 95


state 58

    (69) exp -> texp . expp
    (70) expp -> . OR exp
    (71) expp -> . empty
    (102) empty -> .

    OR              shift and go to state 97
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    APAR            reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)
    CCOR            reduce using rule 102 (empty -> .)
    PTCOMA          reduce using rule 102 (empty -> .)
    TO              reduce using rule 102 (empty -> .)
    DO              reduce using rule 102 (empty -> .)

    expp                           shift and go to state 96
    empty                          shift and go to state 98

state 59

    (72) texp -> gexp . texpp
    (73) texpp -> . AND texp
    (74) texpp -> . empty
    (102) empty -> .

    AND             shift and go to state 100
    OR              reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    APAR            reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)
    CCOR            reduce using rule 102 (empty -> .)
    PTCOMA          reduce using rule 102 (empty -> .)
    TO              reduce using rule 102 (empty -> .)
    DO              reduce using rule 102 (empty -> .)

    texpp                          shift and go to state 99
    empty                          shift and go to state 101

state 60

    (75) gexp -> mexp . gexpp
    (76) gexpp -> . MAYQ mexp
    (77) gexpp -> . MENQ mexp
    (78) gexpp -> . MAYI mexp
    (79) gexpp -> . MENI mexp
    (80) gexpp -> . IGUALIGUAL mexp
    (81) gexpp -> . DIF mexp
    (82) gexpp -> . empty
    (102) empty -> .

    MAYQ            shift and go to state 103
    MENQ            shift and go to state 104
    MAYI            shift and go to state 105
    MENI            shift and go to state 106
    IGUALIGUAL      shift and go to state 107
    DIF             shift and go to state 108
    AND             reduce using rule 102 (empty -> .)
    OR              reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    APAR            reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)
    CCOR            reduce using rule 102 (empty -> .)
    PTCOMA          reduce using rule 102 (empty -> .)
    TO              reduce using rule 102 (empty -> .)
    DO              reduce using rule 102 (empty -> .)

    gexpp                          shift and go to state 102
    empty                          shift and go to state 109

state 61

    (83) mexp -> termino . mexpp
    (84) mexpp -> . MAS mexp
    (85) mexpp -> . MENOS mexp
    (86) mexpp -> . empty
    (102) empty -> .

    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    MAYQ            reduce using rule 102 (empty -> .)
    MENQ            reduce using rule 102 (empty -> .)
    MAYI            reduce using rule 102 (empty -> .)
    MENI            reduce using rule 102 (empty -> .)
    IGUALIGUAL      reduce using rule 102 (empty -> .)
    DIF             reduce using rule 102 (empty -> .)
    AND             reduce using rule 102 (empty -> .)
    OR              reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    APAR            reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)
    CCOR            reduce using rule 102 (empty -> .)
    PTCOMA          reduce using rule 102 (empty -> .)
    TO              reduce using rule 102 (empty -> .)
    DO              reduce using rule 102 (empty -> .)

    mexpp                          shift and go to state 110
    empty                          shift and go to state 113

state 62

    (87) termino -> factor . terminop
    (88) terminop -> . POR termino
    (89) terminop -> . DIV termino
    (90) terminop -> . empty
    (102) empty -> .

    POR             shift and go to state 115
    DIV             shift and go to state 116
    MAS             reduce using rule 102 (empty -> .)
    MENOS           reduce using rule 102 (empty -> .)
    MAYQ            reduce using rule 102 (empty -> .)
    MENQ            reduce using rule 102 (empty -> .)
    MAYI            reduce using rule 102 (empty -> .)
    MENI            reduce using rule 102 (empty -> .)
    IGUALIGUAL      reduce using rule 102 (empty -> .)
    DIF             reduce using rule 102 (empty -> .)
    AND             reduce using rule 102 (empty -> .)
    OR              reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    APAR            reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)
    CCOR            reduce using rule 102 (empty -> .)
    PTCOMA          reduce using rule 102 (empty -> .)
    TO              reduce using rule 102 (empty -> .)
    DO              reduce using rule 102 (empty -> .)

    terminop                       shift and go to state 114
    empty                          shift and go to state 117

state 63

    (93) factor -> ctes .

    POR             reduce using rule 93 (factor -> ctes .)
    DIV             reduce using rule 93 (factor -> ctes .)
    MAS             reduce using rule 93 (factor -> ctes .)
    MENOS           reduce using rule 93 (factor -> ctes .)
    MAYQ            reduce using rule 93 (factor -> ctes .)
    MENQ            reduce using rule 93 (factor -> ctes .)
    MAYI            reduce using rule 93 (factor -> ctes .)
    MENI            reduce using rule 93 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 93 (factor -> ctes .)
    DIF             reduce using rule 93 (factor -> ctes .)
    AND             reduce using rule 93 (factor -> ctes .)
    OR              reduce using rule 93 (factor -> ctes .)
    ID              reduce using rule 93 (factor -> ctes .)
    RETURN          reduce using rule 93 (factor -> ctes .)
    READ            reduce using rule 93 (factor -> ctes .)
    WRITE           reduce using rule 93 (factor -> ctes .)
    IF              reduce using rule 93 (factor -> ctes .)
    WHILE           reduce using rule 93 (factor -> ctes .)
    FOR             reduce using rule 93 (factor -> ctes .)
    APAR            reduce using rule 93 (factor -> ctes .)
    CTEI            reduce using rule 93 (factor -> ctes .)
    CTEF            reduce using rule 93 (factor -> ctes .)
    CLLA            reduce using rule 93 (factor -> ctes .)
    CPAR            reduce using rule 93 (factor -> ctes .)
    CCOR            reduce using rule 93 (factor -> ctes .)
    COMA            reduce using rule 93 (factor -> ctes .)
    PTCOMA          reduce using rule 93 (factor -> ctes .)
    TO              reduce using rule 93 (factor -> ctes .)
    DO              reduce using rule 93 (factor -> ctes .)


state 64

    (100) ctes -> CTEI .

    POR             reduce using rule 100 (ctes -> CTEI .)
    DIV             reduce using rule 100 (ctes -> CTEI .)
    MAS             reduce using rule 100 (ctes -> CTEI .)
    MENOS           reduce using rule 100 (ctes -> CTEI .)
    MAYQ            reduce using rule 100 (ctes -> CTEI .)
    MENQ            reduce using rule 100 (ctes -> CTEI .)
    MAYI            reduce using rule 100 (ctes -> CTEI .)
    MENI            reduce using rule 100 (ctes -> CTEI .)
    IGUALIGUAL      reduce using rule 100 (ctes -> CTEI .)
    DIF             reduce using rule 100 (ctes -> CTEI .)
    AND             reduce using rule 100 (ctes -> CTEI .)
    OR              reduce using rule 100 (ctes -> CTEI .)
    ID              reduce using rule 100 (ctes -> CTEI .)
    RETURN          reduce using rule 100 (ctes -> CTEI .)
    READ            reduce using rule 100 (ctes -> CTEI .)
    WRITE           reduce using rule 100 (ctes -> CTEI .)
    IF              reduce using rule 100 (ctes -> CTEI .)
    WHILE           reduce using rule 100 (ctes -> CTEI .)
    FOR             reduce using rule 100 (ctes -> CTEI .)
    APAR            reduce using rule 100 (ctes -> CTEI .)
    CTEI            reduce using rule 100 (ctes -> CTEI .)
    CTEF            reduce using rule 100 (ctes -> CTEI .)
    CLLA            reduce using rule 100 (ctes -> CTEI .)
    CPAR            reduce using rule 100 (ctes -> CTEI .)
    COMA            reduce using rule 100 (ctes -> CTEI .)
    CCOR            reduce using rule 100 (ctes -> CTEI .)
    PTCOMA          reduce using rule 100 (ctes -> CTEI .)
    TO              reduce using rule 100 (ctes -> CTEI .)
    DO              reduce using rule 100 (ctes -> CTEI .)


state 65

    (101) ctes -> CTEF .

    POR             reduce using rule 101 (ctes -> CTEF .)
    DIV             reduce using rule 101 (ctes -> CTEF .)
    MAS             reduce using rule 101 (ctes -> CTEF .)
    MENOS           reduce using rule 101 (ctes -> CTEF .)
    MAYQ            reduce using rule 101 (ctes -> CTEF .)
    MENQ            reduce using rule 101 (ctes -> CTEF .)
    MAYI            reduce using rule 101 (ctes -> CTEF .)
    MENI            reduce using rule 101 (ctes -> CTEF .)
    IGUALIGUAL      reduce using rule 101 (ctes -> CTEF .)
    DIF             reduce using rule 101 (ctes -> CTEF .)
    AND             reduce using rule 101 (ctes -> CTEF .)
    OR              reduce using rule 101 (ctes -> CTEF .)
    ID              reduce using rule 101 (ctes -> CTEF .)
    RETURN          reduce using rule 101 (ctes -> CTEF .)
    READ            reduce using rule 101 (ctes -> CTEF .)
    WRITE           reduce using rule 101 (ctes -> CTEF .)
    IF              reduce using rule 101 (ctes -> CTEF .)
    WHILE           reduce using rule 101 (ctes -> CTEF .)
    FOR             reduce using rule 101 (ctes -> CTEF .)
    APAR            reduce using rule 101 (ctes -> CTEF .)
    CTEI            reduce using rule 101 (ctes -> CTEF .)
    CTEF            reduce using rule 101 (ctes -> CTEF .)
    CLLA            reduce using rule 101 (ctes -> CTEF .)
    CPAR            reduce using rule 101 (ctes -> CTEF .)
    COMA            reduce using rule 101 (ctes -> CTEF .)
    CCOR            reduce using rule 101 (ctes -> CTEF .)
    PTCOMA          reduce using rule 101 (ctes -> CTEF .)
    TO              reduce using rule 101 (ctes -> CTEF .)
    DO              reduce using rule 101 (ctes -> CTEF .)


state 66

    (13) funcspp -> APAR params CPAR . PTCOMA varss ALLA estatutos CLLA funcs

    PTCOMA          shift and go to state 118


state 67

    (30) params -> tipo DOSPNTS . ID ididx paramsp

    ID              shift and go to state 119


state 68

    (5) vars -> tipo DOSPNTS ID varsppp varspp vars .

    FUNCTION        reduce using rule 5 (vars -> tipo DOSPNTS ID varsppp varspp vars .)
    MAIN            reduce using rule 5 (vars -> tipo DOSPNTS ID varsppp varspp vars .)
    ALLA            reduce using rule 5 (vars -> tipo DOSPNTS ID varsppp varspp vars .)


state 69

    (10) varspp -> COMA ID . varsppp varspp
    (7) varsppp -> . ACOR CTEI CCOR
    (8) varsppp -> . empty
    (102) empty -> .

    ACOR            shift and go to state 30
    PTCOMA          reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)

    varsppp                        shift and go to state 120
    empty                          shift and go to state 31

state 70

    (7) varsppp -> ACOR CTEI CCOR .

    PTCOMA          reduce using rule 7 (varsppp -> ACOR CTEI CCOR .)
    COMA            reduce using rule 7 (varsppp -> ACOR CTEI CCOR .)


state 71

    (91) factor -> APAR exp . CPAR

    CPAR            shift and go to state 121


state 72

    (92) factor -> ID . factorp
    (99) ctes -> ID . factorp
    (94) factorp -> . APAR exp factorpp CPAR
    (95) factorp -> . ACOR exp CCOR
    (96) factorp -> . empty
    (102) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 122
    ACOR            shift and go to state 123
    POR             reduce using rule 102 (empty -> .)
    DIV             reduce using rule 102 (empty -> .)
    MAS             reduce using rule 102 (empty -> .)
    MENOS           reduce using rule 102 (empty -> .)
    MAYQ            reduce using rule 102 (empty -> .)
    MENQ            reduce using rule 102 (empty -> .)
    MAYI            reduce using rule 102 (empty -> .)
    MENI            reduce using rule 102 (empty -> .)
    IGUALIGUAL      reduce using rule 102 (empty -> .)
    DIF             reduce using rule 102 (empty -> .)
    AND             reduce using rule 102 (empty -> .)
    OR              reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    CCOR            reduce using rule 102 (empty -> .)
    COMA            reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)
    PTCOMA          reduce using rule 102 (empty -> .)
    TO              reduce using rule 102 (empty -> .)
    DO              reduce using rule 102 (empty -> .)

  ! APAR            [ reduce using rule 102 (empty -> .) ]

    factorp                        shift and go to state 87
    empty                          shift and go to state 124

state 73

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA .)


state 74

    (16) estatutos -> asig estatutop .

    CLLA            reduce using rule 16 (estatutos -> asig estatutop .)


state 75

    (25) estatutop -> estatutos .

    CLLA            reduce using rule 25 (estatutop -> estatutos .)


state 76

    (26) estatutop -> empty .

    CLLA            reduce using rule 26 (estatutop -> empty .)


state 77

    (17) estatutos -> llamada estatutop .

    CLLA            reduce using rule 17 (estatutos -> llamada estatutop .)


state 78

    (18) estatutos -> return estatutop .

    CLLA            reduce using rule 18 (estatutos -> return estatutop .)


state 79

    (19) estatutos -> lectura estatutop .

    CLLA            reduce using rule 19 (estatutos -> lectura estatutop .)


state 80

    (20) estatutos -> escritura estatutop .

    CLLA            reduce using rule 20 (estatutos -> escritura estatutop .)


state 81

    (21) estatutos -> cond estatutop .

    CLLA            reduce using rule 21 (estatutos -> cond estatutop .)


state 82

    (22) estatutos -> while estatutop .

    CLLA            reduce using rule 22 (estatutos -> while estatutop .)


state 83

    (23) estatutos -> for estatutop .

    CLLA            reduce using rule 23 (estatutos -> for estatutop .)


state 84

    (24) estatutos -> exp estatutop .

    CLLA            reduce using rule 24 (estatutos -> exp estatutop .)


state 85

    (34) asig -> ID ididx . IGUAL asigpp PTCOMA

    IGUAL           shift and go to state 125


state 86

    (45) llamada -> ID APAR . args CPAR PTCOMA
    (94) factorp -> APAR . exp factorpp CPAR
    (46) args -> . ctes argsp
    (47) args -> . exp argsp
    (48) args -> . CTEC argsp
    (69) exp -> . texp expp
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes

    CTEC            shift and go to state 130
    ID              shift and go to state 126
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65
    APAR            shift and go to state 40

    args                           shift and go to state 127
    exp                            shift and go to state 128
    ctes                           shift and go to state 129
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62

state 87

    (92) factor -> ID factorp .
    (99) ctes -> ID factorp .

  ! reduce/reduce conflict for POR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIV resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for ID resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for RETURN resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for READ resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for WRITE resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for IF resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for WHILE resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for FOR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for APAR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEI resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEF resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for CLLA resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for CCOR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for TO resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for DO resolved using rule 92 (factor -> ID factorp .)
    POR             reduce using rule 92 (factor -> ID factorp .)
    DIV             reduce using rule 92 (factor -> ID factorp .)
    MAS             reduce using rule 92 (factor -> ID factorp .)
    MENOS           reduce using rule 92 (factor -> ID factorp .)
    MAYQ            reduce using rule 92 (factor -> ID factorp .)
    MENQ            reduce using rule 92 (factor -> ID factorp .)
    MAYI            reduce using rule 92 (factor -> ID factorp .)
    MENI            reduce using rule 92 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 92 (factor -> ID factorp .)
    DIF             reduce using rule 92 (factor -> ID factorp .)
    AND             reduce using rule 92 (factor -> ID factorp .)
    OR              reduce using rule 92 (factor -> ID factorp .)
    ID              reduce using rule 92 (factor -> ID factorp .)
    RETURN          reduce using rule 92 (factor -> ID factorp .)
    READ            reduce using rule 92 (factor -> ID factorp .)
    WRITE           reduce using rule 92 (factor -> ID factorp .)
    IF              reduce using rule 92 (factor -> ID factorp .)
    WHILE           reduce using rule 92 (factor -> ID factorp .)
    FOR             reduce using rule 92 (factor -> ID factorp .)
    APAR            reduce using rule 92 (factor -> ID factorp .)
    CTEI            reduce using rule 92 (factor -> ID factorp .)
    CTEF            reduce using rule 92 (factor -> ID factorp .)
    CLLA            reduce using rule 92 (factor -> ID factorp .)
    CPAR            reduce using rule 92 (factor -> ID factorp .)
    CCOR            reduce using rule 92 (factor -> ID factorp .)
    COMA            reduce using rule 92 (factor -> ID factorp .)
    PTCOMA          reduce using rule 92 (factor -> ID factorp .)
    TO              reduce using rule 92 (factor -> ID factorp .)
    DO              reduce using rule 92 (factor -> ID factorp .)

  ! POR             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! ID              [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! RETURN          [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! READ            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! WRITE           [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! IF              [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! WHILE           [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! FOR             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! APAR            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! CTEI            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! CTEF            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! CLLA            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! CCOR            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! COMA            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! PTCOMA          [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! TO              [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! DO              [ reduce using rule 99 (ctes -> ID factorp .) ]


state 88

    (43) ididx -> ACOR . exp CCOR
    (95) factorp -> ACOR . exp CCOR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 131
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 89

    (44) ididx -> empty .
    (96) factorp -> empty .

    IGUAL           reduce using rule 44 (ididx -> empty .)
    POR             reduce using rule 96 (factorp -> empty .)
    DIV             reduce using rule 96 (factorp -> empty .)
    MAS             reduce using rule 96 (factorp -> empty .)
    MENOS           reduce using rule 96 (factorp -> empty .)
    MAYQ            reduce using rule 96 (factorp -> empty .)
    MENQ            reduce using rule 96 (factorp -> empty .)
    MAYI            reduce using rule 96 (factorp -> empty .)
    MENI            reduce using rule 96 (factorp -> empty .)
    IGUALIGUAL      reduce using rule 96 (factorp -> empty .)
    DIF             reduce using rule 96 (factorp -> empty .)
    AND             reduce using rule 96 (factorp -> empty .)
    OR              reduce using rule 96 (factorp -> empty .)
    ID              reduce using rule 96 (factorp -> empty .)
    RETURN          reduce using rule 96 (factorp -> empty .)
    READ            reduce using rule 96 (factorp -> empty .)
    WRITE           reduce using rule 96 (factorp -> empty .)
    IF              reduce using rule 96 (factorp -> empty .)
    WHILE           reduce using rule 96 (factorp -> empty .)
    FOR             reduce using rule 96 (factorp -> empty .)
    APAR            reduce using rule 96 (factorp -> empty .)
    CTEI            reduce using rule 96 (factorp -> empty .)
    CTEF            reduce using rule 96 (factorp -> empty .)
    CLLA            reduce using rule 96 (factorp -> empty .)


state 90

    (51) return -> RETURN APAR . asigpp CPAR PTCOMA
    (40) asigpp -> . exp
    (41) asigpp -> . CTEC
    (42) asigpp -> . ACOR asigp CCOR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CTEC            shift and go to state 134
    ACOR            shift and go to state 135
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigpp                         shift and go to state 132
    exp                            shift and go to state 133
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 91

    (52) lectura -> READ APAR . ID ididx lecturapp CPAR PTCOMA

    ID              shift and go to state 136


state 92

    (55) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (56) escriturap -> . STRING
    (57) escriturap -> . exp
    (58) escriturap -> . CTEC
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    STRING          shift and go to state 138
    CTEC            shift and go to state 140
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    escriturap                     shift and go to state 137
    exp                            shift and go to state 139
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 93

    (61) cond -> IF APAR . condp CPAR THEN ALLA estatutos CLLA condpp
    (62) condp -> . exp
    (63) condp -> . TRUE
    (64) condp -> . FALSE
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    condp                          shift and go to state 141
    exp                            shift and go to state 142
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 94

    (67) while -> WHILE APAR . condp CPAR DO ALLA estatutos CLLA
    (62) condp -> . exp
    (63) condp -> . TRUE
    (64) condp -> . FALSE
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    condp                          shift and go to state 145
    exp                            shift and go to state 142
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 95

    (68) for -> FOR ID . ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (43) ididx -> . ACOR exp CCOR
    (44) ididx -> . empty
    (102) empty -> .

    ACOR            shift and go to state 147
    IGUAL           reduce using rule 102 (empty -> .)

    ididx                          shift and go to state 146
    empty                          shift and go to state 148

state 96

    (69) exp -> texp expp .

    ID              reduce using rule 69 (exp -> texp expp .)
    RETURN          reduce using rule 69 (exp -> texp expp .)
    READ            reduce using rule 69 (exp -> texp expp .)
    WRITE           reduce using rule 69 (exp -> texp expp .)
    IF              reduce using rule 69 (exp -> texp expp .)
    WHILE           reduce using rule 69 (exp -> texp expp .)
    FOR             reduce using rule 69 (exp -> texp expp .)
    APAR            reduce using rule 69 (exp -> texp expp .)
    CTEI            reduce using rule 69 (exp -> texp expp .)
    CTEF            reduce using rule 69 (exp -> texp expp .)
    CLLA            reduce using rule 69 (exp -> texp expp .)
    CPAR            reduce using rule 69 (exp -> texp expp .)
    COMA            reduce using rule 69 (exp -> texp expp .)
    CCOR            reduce using rule 69 (exp -> texp expp .)
    PTCOMA          reduce using rule 69 (exp -> texp expp .)
    TO              reduce using rule 69 (exp -> texp expp .)
    DO              reduce using rule 69 (exp -> texp expp .)


state 97

    (70) expp -> OR . exp
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 149
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 98

    (71) expp -> empty .

    ID              reduce using rule 71 (expp -> empty .)
    RETURN          reduce using rule 71 (expp -> empty .)
    READ            reduce using rule 71 (expp -> empty .)
    WRITE           reduce using rule 71 (expp -> empty .)
    IF              reduce using rule 71 (expp -> empty .)
    WHILE           reduce using rule 71 (expp -> empty .)
    FOR             reduce using rule 71 (expp -> empty .)
    APAR            reduce using rule 71 (expp -> empty .)
    CTEI            reduce using rule 71 (expp -> empty .)
    CTEF            reduce using rule 71 (expp -> empty .)
    CLLA            reduce using rule 71 (expp -> empty .)
    CPAR            reduce using rule 71 (expp -> empty .)
    COMA            reduce using rule 71 (expp -> empty .)
    CCOR            reduce using rule 71 (expp -> empty .)
    PTCOMA          reduce using rule 71 (expp -> empty .)
    TO              reduce using rule 71 (expp -> empty .)
    DO              reduce using rule 71 (expp -> empty .)


state 99

    (72) texp -> gexp texpp .

    OR              reduce using rule 72 (texp -> gexp texpp .)
    ID              reduce using rule 72 (texp -> gexp texpp .)
    RETURN          reduce using rule 72 (texp -> gexp texpp .)
    READ            reduce using rule 72 (texp -> gexp texpp .)
    WRITE           reduce using rule 72 (texp -> gexp texpp .)
    IF              reduce using rule 72 (texp -> gexp texpp .)
    WHILE           reduce using rule 72 (texp -> gexp texpp .)
    FOR             reduce using rule 72 (texp -> gexp texpp .)
    APAR            reduce using rule 72 (texp -> gexp texpp .)
    CTEI            reduce using rule 72 (texp -> gexp texpp .)
    CTEF            reduce using rule 72 (texp -> gexp texpp .)
    CLLA            reduce using rule 72 (texp -> gexp texpp .)
    CPAR            reduce using rule 72 (texp -> gexp texpp .)
    COMA            reduce using rule 72 (texp -> gexp texpp .)
    CCOR            reduce using rule 72 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 72 (texp -> gexp texpp .)
    TO              reduce using rule 72 (texp -> gexp texpp .)
    DO              reduce using rule 72 (texp -> gexp texpp .)


state 100

    (73) texpp -> AND . texp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    texp                           shift and go to state 150
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 101

    (74) texpp -> empty .

    OR              reduce using rule 74 (texpp -> empty .)
    ID              reduce using rule 74 (texpp -> empty .)
    RETURN          reduce using rule 74 (texpp -> empty .)
    READ            reduce using rule 74 (texpp -> empty .)
    WRITE           reduce using rule 74 (texpp -> empty .)
    IF              reduce using rule 74 (texpp -> empty .)
    WHILE           reduce using rule 74 (texpp -> empty .)
    FOR             reduce using rule 74 (texpp -> empty .)
    APAR            reduce using rule 74 (texpp -> empty .)
    CTEI            reduce using rule 74 (texpp -> empty .)
    CTEF            reduce using rule 74 (texpp -> empty .)
    CLLA            reduce using rule 74 (texpp -> empty .)
    CPAR            reduce using rule 74 (texpp -> empty .)
    COMA            reduce using rule 74 (texpp -> empty .)
    CCOR            reduce using rule 74 (texpp -> empty .)
    PTCOMA          reduce using rule 74 (texpp -> empty .)
    TO              reduce using rule 74 (texpp -> empty .)
    DO              reduce using rule 74 (texpp -> empty .)


state 102

    (75) gexp -> mexp gexpp .

    AND             reduce using rule 75 (gexp -> mexp gexpp .)
    OR              reduce using rule 75 (gexp -> mexp gexpp .)
    ID              reduce using rule 75 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 75 (gexp -> mexp gexpp .)
    READ            reduce using rule 75 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 75 (gexp -> mexp gexpp .)
    IF              reduce using rule 75 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 75 (gexp -> mexp gexpp .)
    FOR             reduce using rule 75 (gexp -> mexp gexpp .)
    APAR            reduce using rule 75 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 75 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 75 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 75 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 75 (gexp -> mexp gexpp .)
    COMA            reduce using rule 75 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 75 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 75 (gexp -> mexp gexpp .)
    TO              reduce using rule 75 (gexp -> mexp gexpp .)
    DO              reduce using rule 75 (gexp -> mexp gexpp .)


state 103

    (76) gexpp -> MAYQ . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 151
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 104

    (77) gexpp -> MENQ . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 152
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 105

    (78) gexpp -> MAYI . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 153
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 106

    (79) gexpp -> MENI . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 154
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 107

    (80) gexpp -> IGUALIGUAL . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 155
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 108

    (81) gexpp -> DIF . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 156
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 109

    (82) gexpp -> empty .

    AND             reduce using rule 82 (gexpp -> empty .)
    OR              reduce using rule 82 (gexpp -> empty .)
    ID              reduce using rule 82 (gexpp -> empty .)
    RETURN          reduce using rule 82 (gexpp -> empty .)
    READ            reduce using rule 82 (gexpp -> empty .)
    WRITE           reduce using rule 82 (gexpp -> empty .)
    IF              reduce using rule 82 (gexpp -> empty .)
    WHILE           reduce using rule 82 (gexpp -> empty .)
    FOR             reduce using rule 82 (gexpp -> empty .)
    APAR            reduce using rule 82 (gexpp -> empty .)
    CTEI            reduce using rule 82 (gexpp -> empty .)
    CTEF            reduce using rule 82 (gexpp -> empty .)
    CLLA            reduce using rule 82 (gexpp -> empty .)
    CPAR            reduce using rule 82 (gexpp -> empty .)
    COMA            reduce using rule 82 (gexpp -> empty .)
    CCOR            reduce using rule 82 (gexpp -> empty .)
    PTCOMA          reduce using rule 82 (gexpp -> empty .)
    TO              reduce using rule 82 (gexpp -> empty .)
    DO              reduce using rule 82 (gexpp -> empty .)


state 110

    (83) mexp -> termino mexpp .

    MAYQ            reduce using rule 83 (mexp -> termino mexpp .)
    MENQ            reduce using rule 83 (mexp -> termino mexpp .)
    MAYI            reduce using rule 83 (mexp -> termino mexpp .)
    MENI            reduce using rule 83 (mexp -> termino mexpp .)
    IGUALIGUAL      reduce using rule 83 (mexp -> termino mexpp .)
    DIF             reduce using rule 83 (mexp -> termino mexpp .)
    AND             reduce using rule 83 (mexp -> termino mexpp .)
    OR              reduce using rule 83 (mexp -> termino mexpp .)
    ID              reduce using rule 83 (mexp -> termino mexpp .)
    RETURN          reduce using rule 83 (mexp -> termino mexpp .)
    READ            reduce using rule 83 (mexp -> termino mexpp .)
    WRITE           reduce using rule 83 (mexp -> termino mexpp .)
    IF              reduce using rule 83 (mexp -> termino mexpp .)
    WHILE           reduce using rule 83 (mexp -> termino mexpp .)
    FOR             reduce using rule 83 (mexp -> termino mexpp .)
    APAR            reduce using rule 83 (mexp -> termino mexpp .)
    CTEI            reduce using rule 83 (mexp -> termino mexpp .)
    CTEF            reduce using rule 83 (mexp -> termino mexpp .)
    CLLA            reduce using rule 83 (mexp -> termino mexpp .)
    CPAR            reduce using rule 83 (mexp -> termino mexpp .)
    COMA            reduce using rule 83 (mexp -> termino mexpp .)
    CCOR            reduce using rule 83 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 83 (mexp -> termino mexpp .)
    TO              reduce using rule 83 (mexp -> termino mexpp .)
    DO              reduce using rule 83 (mexp -> termino mexpp .)


state 111

    (84) mexpp -> MAS . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 157
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 112

    (85) mexpp -> MENOS . mexp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    mexp                           shift and go to state 158
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 113

    (86) mexpp -> empty .

    MAYQ            reduce using rule 86 (mexpp -> empty .)
    MENQ            reduce using rule 86 (mexpp -> empty .)
    MAYI            reduce using rule 86 (mexpp -> empty .)
    MENI            reduce using rule 86 (mexpp -> empty .)
    IGUALIGUAL      reduce using rule 86 (mexpp -> empty .)
    DIF             reduce using rule 86 (mexpp -> empty .)
    AND             reduce using rule 86 (mexpp -> empty .)
    OR              reduce using rule 86 (mexpp -> empty .)
    ID              reduce using rule 86 (mexpp -> empty .)
    RETURN          reduce using rule 86 (mexpp -> empty .)
    READ            reduce using rule 86 (mexpp -> empty .)
    WRITE           reduce using rule 86 (mexpp -> empty .)
    IF              reduce using rule 86 (mexpp -> empty .)
    WHILE           reduce using rule 86 (mexpp -> empty .)
    FOR             reduce using rule 86 (mexpp -> empty .)
    APAR            reduce using rule 86 (mexpp -> empty .)
    CTEI            reduce using rule 86 (mexpp -> empty .)
    CTEF            reduce using rule 86 (mexpp -> empty .)
    CLLA            reduce using rule 86 (mexpp -> empty .)
    CPAR            reduce using rule 86 (mexpp -> empty .)
    COMA            reduce using rule 86 (mexpp -> empty .)
    CCOR            reduce using rule 86 (mexpp -> empty .)
    PTCOMA          reduce using rule 86 (mexpp -> empty .)
    TO              reduce using rule 86 (mexpp -> empty .)
    DO              reduce using rule 86 (mexpp -> empty .)


state 114

    (87) termino -> factor terminop .

    MAS             reduce using rule 87 (termino -> factor terminop .)
    MENOS           reduce using rule 87 (termino -> factor terminop .)
    MAYQ            reduce using rule 87 (termino -> factor terminop .)
    MENQ            reduce using rule 87 (termino -> factor terminop .)
    MAYI            reduce using rule 87 (termino -> factor terminop .)
    MENI            reduce using rule 87 (termino -> factor terminop .)
    IGUALIGUAL      reduce using rule 87 (termino -> factor terminop .)
    DIF             reduce using rule 87 (termino -> factor terminop .)
    AND             reduce using rule 87 (termino -> factor terminop .)
    OR              reduce using rule 87 (termino -> factor terminop .)
    ID              reduce using rule 87 (termino -> factor terminop .)
    RETURN          reduce using rule 87 (termino -> factor terminop .)
    READ            reduce using rule 87 (termino -> factor terminop .)
    WRITE           reduce using rule 87 (termino -> factor terminop .)
    IF              reduce using rule 87 (termino -> factor terminop .)
    WHILE           reduce using rule 87 (termino -> factor terminop .)
    FOR             reduce using rule 87 (termino -> factor terminop .)
    APAR            reduce using rule 87 (termino -> factor terminop .)
    CTEI            reduce using rule 87 (termino -> factor terminop .)
    CTEF            reduce using rule 87 (termino -> factor terminop .)
    CLLA            reduce using rule 87 (termino -> factor terminop .)
    CPAR            reduce using rule 87 (termino -> factor terminop .)
    COMA            reduce using rule 87 (termino -> factor terminop .)
    CCOR            reduce using rule 87 (termino -> factor terminop .)
    PTCOMA          reduce using rule 87 (termino -> factor terminop .)
    TO              reduce using rule 87 (termino -> factor terminop .)
    DO              reduce using rule 87 (termino -> factor terminop .)


state 115

    (88) terminop -> POR . termino
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    termino                        shift and go to state 159
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 116

    (89) terminop -> DIV . termino
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    termino                        shift and go to state 160
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 117

    (90) terminop -> empty .

    MAS             reduce using rule 90 (terminop -> empty .)
    MENOS           reduce using rule 90 (terminop -> empty .)
    MAYQ            reduce using rule 90 (terminop -> empty .)
    MENQ            reduce using rule 90 (terminop -> empty .)
    MAYI            reduce using rule 90 (terminop -> empty .)
    MENI            reduce using rule 90 (terminop -> empty .)
    IGUALIGUAL      reduce using rule 90 (terminop -> empty .)
    DIF             reduce using rule 90 (terminop -> empty .)
    AND             reduce using rule 90 (terminop -> empty .)
    OR              reduce using rule 90 (terminop -> empty .)
    ID              reduce using rule 90 (terminop -> empty .)
    RETURN          reduce using rule 90 (terminop -> empty .)
    READ            reduce using rule 90 (terminop -> empty .)
    WRITE           reduce using rule 90 (terminop -> empty .)
    IF              reduce using rule 90 (terminop -> empty .)
    WHILE           reduce using rule 90 (terminop -> empty .)
    FOR             reduce using rule 90 (terminop -> empty .)
    APAR            reduce using rule 90 (terminop -> empty .)
    CTEI            reduce using rule 90 (terminop -> empty .)
    CTEF            reduce using rule 90 (terminop -> empty .)
    CLLA            reduce using rule 90 (terminop -> empty .)
    CPAR            reduce using rule 90 (terminop -> empty .)
    COMA            reduce using rule 90 (terminop -> empty .)
    CCOR            reduce using rule 90 (terminop -> empty .)
    PTCOMA          reduce using rule 90 (terminop -> empty .)
    TO              reduce using rule 90 (terminop -> empty .)
    DO              reduce using rule 90 (terminop -> empty .)


state 118

    (13) funcspp -> APAR params CPAR PTCOMA . varss ALLA estatutos CLLA funcs
    (3) varss -> . VARS vars
    (4) varss -> . empty
    (102) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 102 (empty -> .)

    varss                          shift and go to state 161
    empty                          shift and go to state 7

state 119

    (30) params -> tipo DOSPNTS ID . ididx paramsp
    (43) ididx -> . ACOR exp CCOR
    (44) ididx -> . empty
    (102) empty -> .

    ACOR            shift and go to state 147
    COMA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)

    ididx                          shift and go to state 162
    empty                          shift and go to state 148

state 120

    (10) varspp -> COMA ID varsppp . varspp
    (9) varspp -> . PTCOMA
    (10) varspp -> . COMA ID varsppp varspp

    PTCOMA          shift and go to state 37
    COMA            shift and go to state 38

    varspp                         shift and go to state 163

state 121

    (91) factor -> APAR exp CPAR .

    POR             reduce using rule 91 (factor -> APAR exp CPAR .)
    DIV             reduce using rule 91 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 91 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 91 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 91 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 91 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 91 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 91 (factor -> APAR exp CPAR .)
    IGUALIGUAL      reduce using rule 91 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 91 (factor -> APAR exp CPAR .)
    AND             reduce using rule 91 (factor -> APAR exp CPAR .)
    OR              reduce using rule 91 (factor -> APAR exp CPAR .)
    ID              reduce using rule 91 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 91 (factor -> APAR exp CPAR .)
    READ            reduce using rule 91 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 91 (factor -> APAR exp CPAR .)
    IF              reduce using rule 91 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 91 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 91 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 91 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 91 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 91 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 91 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 91 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 91 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 91 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 91 (factor -> APAR exp CPAR .)
    TO              reduce using rule 91 (factor -> APAR exp CPAR .)
    DO              reduce using rule 91 (factor -> APAR exp CPAR .)


state 122

    (94) factorp -> APAR . exp factorpp CPAR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 164
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 123

    (95) factorp -> ACOR . exp CCOR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 165
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 124

    (96) factorp -> empty .

    POR             reduce using rule 96 (factorp -> empty .)
    DIV             reduce using rule 96 (factorp -> empty .)
    MAS             reduce using rule 96 (factorp -> empty .)
    MENOS           reduce using rule 96 (factorp -> empty .)
    MAYQ            reduce using rule 96 (factorp -> empty .)
    MENQ            reduce using rule 96 (factorp -> empty .)
    MAYI            reduce using rule 96 (factorp -> empty .)
    MENI            reduce using rule 96 (factorp -> empty .)
    IGUALIGUAL      reduce using rule 96 (factorp -> empty .)
    DIF             reduce using rule 96 (factorp -> empty .)
    AND             reduce using rule 96 (factorp -> empty .)
    OR              reduce using rule 96 (factorp -> empty .)
    CPAR            reduce using rule 96 (factorp -> empty .)
    CCOR            reduce using rule 96 (factorp -> empty .)
    COMA            reduce using rule 96 (factorp -> empty .)
    ID              reduce using rule 96 (factorp -> empty .)
    RETURN          reduce using rule 96 (factorp -> empty .)
    READ            reduce using rule 96 (factorp -> empty .)
    WRITE           reduce using rule 96 (factorp -> empty .)
    IF              reduce using rule 96 (factorp -> empty .)
    WHILE           reduce using rule 96 (factorp -> empty .)
    FOR             reduce using rule 96 (factorp -> empty .)
    APAR            reduce using rule 96 (factorp -> empty .)
    CTEI            reduce using rule 96 (factorp -> empty .)
    CTEF            reduce using rule 96 (factorp -> empty .)
    CLLA            reduce using rule 96 (factorp -> empty .)
    PTCOMA          reduce using rule 96 (factorp -> empty .)
    TO              reduce using rule 96 (factorp -> empty .)
    DO              reduce using rule 96 (factorp -> empty .)


state 125

    (34) asig -> ID ididx IGUAL . asigpp PTCOMA
    (40) asigpp -> . exp
    (41) asigpp -> . CTEC
    (42) asigpp -> . ACOR asigp CCOR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CTEC            shift and go to state 134
    ACOR            shift and go to state 135
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigpp                         shift and go to state 166
    exp                            shift and go to state 133
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 126

    (99) ctes -> ID . factorp
    (92) factor -> ID . factorp
    (94) factorp -> . APAR exp factorpp CPAR
    (95) factorp -> . ACOR exp CCOR
    (96) factorp -> . empty
    (102) empty -> .

    APAR            shift and go to state 122
    ACOR            shift and go to state 123
    COMA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)
    POR             reduce using rule 102 (empty -> .)
    DIV             reduce using rule 102 (empty -> .)
    MAS             reduce using rule 102 (empty -> .)
    MENOS           reduce using rule 102 (empty -> .)
    MAYQ            reduce using rule 102 (empty -> .)
    MENQ            reduce using rule 102 (empty -> .)
    MAYI            reduce using rule 102 (empty -> .)
    MENI            reduce using rule 102 (empty -> .)
    IGUALIGUAL      reduce using rule 102 (empty -> .)
    DIF             reduce using rule 102 (empty -> .)
    AND             reduce using rule 102 (empty -> .)
    OR              reduce using rule 102 (empty -> .)

    factorp                        shift and go to state 167
    empty                          shift and go to state 124

state 127

    (45) llamada -> ID APAR args . CPAR PTCOMA

    CPAR            shift and go to state 168


state 128

    (94) factorp -> APAR exp . factorpp CPAR
    (47) args -> exp . argsp
    (97) factorpp -> . COMA exp factorpp
    (98) factorpp -> . empty
    (49) argsp -> . COMA args
    (50) argsp -> . empty
    (102) empty -> .

    COMA            shift and go to state 171
    CPAR            reduce using rule 102 (empty -> .)

    factorpp                       shift and go to state 169
    argsp                          shift and go to state 170
    empty                          shift and go to state 172

state 129

    (46) args -> ctes . argsp
    (93) factor -> ctes .
    (49) argsp -> . COMA args
    (50) argsp -> . empty
    (102) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for CPAR resolved using rule 93 (factor -> ctes .)
    POR             reduce using rule 93 (factor -> ctes .)
    DIV             reduce using rule 93 (factor -> ctes .)
    MAS             reduce using rule 93 (factor -> ctes .)
    MENOS           reduce using rule 93 (factor -> ctes .)
    MAYQ            reduce using rule 93 (factor -> ctes .)
    MENQ            reduce using rule 93 (factor -> ctes .)
    MAYI            reduce using rule 93 (factor -> ctes .)
    MENI            reduce using rule 93 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 93 (factor -> ctes .)
    DIF             reduce using rule 93 (factor -> ctes .)
    AND             reduce using rule 93 (factor -> ctes .)
    OR              reduce using rule 93 (factor -> ctes .)
    CPAR            reduce using rule 93 (factor -> ctes .)
    COMA            shift and go to state 174

  ! COMA            [ reduce using rule 93 (factor -> ctes .) ]
  ! CPAR            [ reduce using rule 102 (empty -> .) ]

    argsp                          shift and go to state 173
    empty                          shift and go to state 175

state 130

    (48) args -> CTEC . argsp
    (49) argsp -> . COMA args
    (50) argsp -> . empty
    (102) empty -> .

    COMA            shift and go to state 174
    CPAR            reduce using rule 102 (empty -> .)

    argsp                          shift and go to state 176
    empty                          shift and go to state 175

state 131

    (43) ididx -> ACOR exp . CCOR
    (95) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 177


state 132

    (51) return -> RETURN APAR asigpp . CPAR PTCOMA

    CPAR            shift and go to state 178


state 133

    (40) asigpp -> exp .

    CPAR            reduce using rule 40 (asigpp -> exp .)
    PTCOMA          reduce using rule 40 (asigpp -> exp .)


state 134

    (41) asigpp -> CTEC .

    CPAR            reduce using rule 41 (asigpp -> CTEC .)
    PTCOMA          reduce using rule 41 (asigpp -> CTEC .)


state 135

    (42) asigpp -> ACOR . asigp CCOR
    (35) asigp -> . exp asigppp
    (36) asigp -> . CTEC asigppp
    (37) asigp -> . empty
    (69) exp -> . texp expp
    (102) empty -> .
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CTEC            shift and go to state 181
    CCOR            reduce using rule 102 (empty -> .)
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigp                          shift and go to state 179
    exp                            shift and go to state 180
    empty                          shift and go to state 182
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 136

    (52) lectura -> READ APAR ID . ididx lecturapp CPAR PTCOMA
    (43) ididx -> . ACOR exp CCOR
    (44) ididx -> . empty
    (102) empty -> .

    ACOR            shift and go to state 147
    COMA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)

    ididx                          shift and go to state 183
    empty                          shift and go to state 148

state 137

    (55) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (59) escriturapp -> . COMA escriturap
    (60) escriturapp -> . empty
    (102) empty -> .

    COMA            shift and go to state 185
    CPAR            reduce using rule 102 (empty -> .)

    escriturapp                    shift and go to state 184
    empty                          shift and go to state 186

state 138

    (56) escriturap -> STRING .

    COMA            reduce using rule 56 (escriturap -> STRING .)
    CPAR            reduce using rule 56 (escriturap -> STRING .)


state 139

    (57) escriturap -> exp .

    COMA            reduce using rule 57 (escriturap -> exp .)
    CPAR            reduce using rule 57 (escriturap -> exp .)


state 140

    (58) escriturap -> CTEC .

    COMA            reduce using rule 58 (escriturap -> CTEC .)
    CPAR            reduce using rule 58 (escriturap -> CTEC .)


state 141

    (61) cond -> IF APAR condp . CPAR THEN ALLA estatutos CLLA condpp

    CPAR            shift and go to state 187


state 142

    (62) condp -> exp .

    CPAR            reduce using rule 62 (condp -> exp .)


state 143

    (63) condp -> TRUE .

    CPAR            reduce using rule 63 (condp -> TRUE .)


state 144

    (64) condp -> FALSE .

    CPAR            reduce using rule 64 (condp -> FALSE .)


state 145

    (67) while -> WHILE APAR condp . CPAR DO ALLA estatutos CLLA

    CPAR            shift and go to state 188


state 146

    (68) for -> FOR ID ididx . IGUAL exp TO exp DO ALLA estatutos CLLA

    IGUAL           shift and go to state 189


state 147

    (43) ididx -> ACOR . exp CCOR
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 190
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 148

    (44) ididx -> empty .

    IGUAL           reduce using rule 44 (ididx -> empty .)
    COMA            reduce using rule 44 (ididx -> empty .)
    CPAR            reduce using rule 44 (ididx -> empty .)


state 149

    (70) expp -> OR exp .

    ID              reduce using rule 70 (expp -> OR exp .)
    RETURN          reduce using rule 70 (expp -> OR exp .)
    READ            reduce using rule 70 (expp -> OR exp .)
    WRITE           reduce using rule 70 (expp -> OR exp .)
    IF              reduce using rule 70 (expp -> OR exp .)
    WHILE           reduce using rule 70 (expp -> OR exp .)
    FOR             reduce using rule 70 (expp -> OR exp .)
    APAR            reduce using rule 70 (expp -> OR exp .)
    CTEI            reduce using rule 70 (expp -> OR exp .)
    CTEF            reduce using rule 70 (expp -> OR exp .)
    CLLA            reduce using rule 70 (expp -> OR exp .)
    CPAR            reduce using rule 70 (expp -> OR exp .)
    COMA            reduce using rule 70 (expp -> OR exp .)
    CCOR            reduce using rule 70 (expp -> OR exp .)
    PTCOMA          reduce using rule 70 (expp -> OR exp .)
    TO              reduce using rule 70 (expp -> OR exp .)
    DO              reduce using rule 70 (expp -> OR exp .)


state 150

    (73) texpp -> AND texp .

    OR              reduce using rule 73 (texpp -> AND texp .)
    ID              reduce using rule 73 (texpp -> AND texp .)
    RETURN          reduce using rule 73 (texpp -> AND texp .)
    READ            reduce using rule 73 (texpp -> AND texp .)
    WRITE           reduce using rule 73 (texpp -> AND texp .)
    IF              reduce using rule 73 (texpp -> AND texp .)
    WHILE           reduce using rule 73 (texpp -> AND texp .)
    FOR             reduce using rule 73 (texpp -> AND texp .)
    APAR            reduce using rule 73 (texpp -> AND texp .)
    CTEI            reduce using rule 73 (texpp -> AND texp .)
    CTEF            reduce using rule 73 (texpp -> AND texp .)
    CLLA            reduce using rule 73 (texpp -> AND texp .)
    CPAR            reduce using rule 73 (texpp -> AND texp .)
    COMA            reduce using rule 73 (texpp -> AND texp .)
    CCOR            reduce using rule 73 (texpp -> AND texp .)
    PTCOMA          reduce using rule 73 (texpp -> AND texp .)
    TO              reduce using rule 73 (texpp -> AND texp .)
    DO              reduce using rule 73 (texpp -> AND texp .)


state 151

    (76) gexpp -> MAYQ mexp .

    AND             reduce using rule 76 (gexpp -> MAYQ mexp .)
    OR              reduce using rule 76 (gexpp -> MAYQ mexp .)
    ID              reduce using rule 76 (gexpp -> MAYQ mexp .)
    RETURN          reduce using rule 76 (gexpp -> MAYQ mexp .)
    READ            reduce using rule 76 (gexpp -> MAYQ mexp .)
    WRITE           reduce using rule 76 (gexpp -> MAYQ mexp .)
    IF              reduce using rule 76 (gexpp -> MAYQ mexp .)
    WHILE           reduce using rule 76 (gexpp -> MAYQ mexp .)
    FOR             reduce using rule 76 (gexpp -> MAYQ mexp .)
    APAR            reduce using rule 76 (gexpp -> MAYQ mexp .)
    CTEI            reduce using rule 76 (gexpp -> MAYQ mexp .)
    CTEF            reduce using rule 76 (gexpp -> MAYQ mexp .)
    CLLA            reduce using rule 76 (gexpp -> MAYQ mexp .)
    CPAR            reduce using rule 76 (gexpp -> MAYQ mexp .)
    COMA            reduce using rule 76 (gexpp -> MAYQ mexp .)
    CCOR            reduce using rule 76 (gexpp -> MAYQ mexp .)
    PTCOMA          reduce using rule 76 (gexpp -> MAYQ mexp .)
    TO              reduce using rule 76 (gexpp -> MAYQ mexp .)
    DO              reduce using rule 76 (gexpp -> MAYQ mexp .)


state 152

    (77) gexpp -> MENQ mexp .

    AND             reduce using rule 77 (gexpp -> MENQ mexp .)
    OR              reduce using rule 77 (gexpp -> MENQ mexp .)
    ID              reduce using rule 77 (gexpp -> MENQ mexp .)
    RETURN          reduce using rule 77 (gexpp -> MENQ mexp .)
    READ            reduce using rule 77 (gexpp -> MENQ mexp .)
    WRITE           reduce using rule 77 (gexpp -> MENQ mexp .)
    IF              reduce using rule 77 (gexpp -> MENQ mexp .)
    WHILE           reduce using rule 77 (gexpp -> MENQ mexp .)
    FOR             reduce using rule 77 (gexpp -> MENQ mexp .)
    APAR            reduce using rule 77 (gexpp -> MENQ mexp .)
    CTEI            reduce using rule 77 (gexpp -> MENQ mexp .)
    CTEF            reduce using rule 77 (gexpp -> MENQ mexp .)
    CLLA            reduce using rule 77 (gexpp -> MENQ mexp .)
    CPAR            reduce using rule 77 (gexpp -> MENQ mexp .)
    COMA            reduce using rule 77 (gexpp -> MENQ mexp .)
    CCOR            reduce using rule 77 (gexpp -> MENQ mexp .)
    PTCOMA          reduce using rule 77 (gexpp -> MENQ mexp .)
    TO              reduce using rule 77 (gexpp -> MENQ mexp .)
    DO              reduce using rule 77 (gexpp -> MENQ mexp .)


state 153

    (78) gexpp -> MAYI mexp .

    AND             reduce using rule 78 (gexpp -> MAYI mexp .)
    OR              reduce using rule 78 (gexpp -> MAYI mexp .)
    ID              reduce using rule 78 (gexpp -> MAYI mexp .)
    RETURN          reduce using rule 78 (gexpp -> MAYI mexp .)
    READ            reduce using rule 78 (gexpp -> MAYI mexp .)
    WRITE           reduce using rule 78 (gexpp -> MAYI mexp .)
    IF              reduce using rule 78 (gexpp -> MAYI mexp .)
    WHILE           reduce using rule 78 (gexpp -> MAYI mexp .)
    FOR             reduce using rule 78 (gexpp -> MAYI mexp .)
    APAR            reduce using rule 78 (gexpp -> MAYI mexp .)
    CTEI            reduce using rule 78 (gexpp -> MAYI mexp .)
    CTEF            reduce using rule 78 (gexpp -> MAYI mexp .)
    CLLA            reduce using rule 78 (gexpp -> MAYI mexp .)
    CPAR            reduce using rule 78 (gexpp -> MAYI mexp .)
    COMA            reduce using rule 78 (gexpp -> MAYI mexp .)
    CCOR            reduce using rule 78 (gexpp -> MAYI mexp .)
    PTCOMA          reduce using rule 78 (gexpp -> MAYI mexp .)
    TO              reduce using rule 78 (gexpp -> MAYI mexp .)
    DO              reduce using rule 78 (gexpp -> MAYI mexp .)


state 154

    (79) gexpp -> MENI mexp .

    AND             reduce using rule 79 (gexpp -> MENI mexp .)
    OR              reduce using rule 79 (gexpp -> MENI mexp .)
    ID              reduce using rule 79 (gexpp -> MENI mexp .)
    RETURN          reduce using rule 79 (gexpp -> MENI mexp .)
    READ            reduce using rule 79 (gexpp -> MENI mexp .)
    WRITE           reduce using rule 79 (gexpp -> MENI mexp .)
    IF              reduce using rule 79 (gexpp -> MENI mexp .)
    WHILE           reduce using rule 79 (gexpp -> MENI mexp .)
    FOR             reduce using rule 79 (gexpp -> MENI mexp .)
    APAR            reduce using rule 79 (gexpp -> MENI mexp .)
    CTEI            reduce using rule 79 (gexpp -> MENI mexp .)
    CTEF            reduce using rule 79 (gexpp -> MENI mexp .)
    CLLA            reduce using rule 79 (gexpp -> MENI mexp .)
    CPAR            reduce using rule 79 (gexpp -> MENI mexp .)
    COMA            reduce using rule 79 (gexpp -> MENI mexp .)
    CCOR            reduce using rule 79 (gexpp -> MENI mexp .)
    PTCOMA          reduce using rule 79 (gexpp -> MENI mexp .)
    TO              reduce using rule 79 (gexpp -> MENI mexp .)
    DO              reduce using rule 79 (gexpp -> MENI mexp .)


state 155

    (80) gexpp -> IGUALIGUAL mexp .

    AND             reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    OR              reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    ID              reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    RETURN          reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    READ            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    WRITE           reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    IF              reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    WHILE           reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    FOR             reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    APAR            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    CTEI            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    CTEF            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    CLLA            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    CPAR            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    COMA            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    CCOR            reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    PTCOMA          reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    TO              reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)
    DO              reduce using rule 80 (gexpp -> IGUALIGUAL mexp .)


state 156

    (81) gexpp -> DIF mexp .

    AND             reduce using rule 81 (gexpp -> DIF mexp .)
    OR              reduce using rule 81 (gexpp -> DIF mexp .)
    ID              reduce using rule 81 (gexpp -> DIF mexp .)
    RETURN          reduce using rule 81 (gexpp -> DIF mexp .)
    READ            reduce using rule 81 (gexpp -> DIF mexp .)
    WRITE           reduce using rule 81 (gexpp -> DIF mexp .)
    IF              reduce using rule 81 (gexpp -> DIF mexp .)
    WHILE           reduce using rule 81 (gexpp -> DIF mexp .)
    FOR             reduce using rule 81 (gexpp -> DIF mexp .)
    APAR            reduce using rule 81 (gexpp -> DIF mexp .)
    CTEI            reduce using rule 81 (gexpp -> DIF mexp .)
    CTEF            reduce using rule 81 (gexpp -> DIF mexp .)
    CLLA            reduce using rule 81 (gexpp -> DIF mexp .)
    CPAR            reduce using rule 81 (gexpp -> DIF mexp .)
    COMA            reduce using rule 81 (gexpp -> DIF mexp .)
    CCOR            reduce using rule 81 (gexpp -> DIF mexp .)
    PTCOMA          reduce using rule 81 (gexpp -> DIF mexp .)
    TO              reduce using rule 81 (gexpp -> DIF mexp .)
    DO              reduce using rule 81 (gexpp -> DIF mexp .)


state 157

    (84) mexpp -> MAS mexp .

    MAYQ            reduce using rule 84 (mexpp -> MAS mexp .)
    MENQ            reduce using rule 84 (mexpp -> MAS mexp .)
    MAYI            reduce using rule 84 (mexpp -> MAS mexp .)
    MENI            reduce using rule 84 (mexpp -> MAS mexp .)
    IGUALIGUAL      reduce using rule 84 (mexpp -> MAS mexp .)
    DIF             reduce using rule 84 (mexpp -> MAS mexp .)
    AND             reduce using rule 84 (mexpp -> MAS mexp .)
    OR              reduce using rule 84 (mexpp -> MAS mexp .)
    ID              reduce using rule 84 (mexpp -> MAS mexp .)
    RETURN          reduce using rule 84 (mexpp -> MAS mexp .)
    READ            reduce using rule 84 (mexpp -> MAS mexp .)
    WRITE           reduce using rule 84 (mexpp -> MAS mexp .)
    IF              reduce using rule 84 (mexpp -> MAS mexp .)
    WHILE           reduce using rule 84 (mexpp -> MAS mexp .)
    FOR             reduce using rule 84 (mexpp -> MAS mexp .)
    APAR            reduce using rule 84 (mexpp -> MAS mexp .)
    CTEI            reduce using rule 84 (mexpp -> MAS mexp .)
    CTEF            reduce using rule 84 (mexpp -> MAS mexp .)
    CLLA            reduce using rule 84 (mexpp -> MAS mexp .)
    CPAR            reduce using rule 84 (mexpp -> MAS mexp .)
    COMA            reduce using rule 84 (mexpp -> MAS mexp .)
    CCOR            reduce using rule 84 (mexpp -> MAS mexp .)
    PTCOMA          reduce using rule 84 (mexpp -> MAS mexp .)
    TO              reduce using rule 84 (mexpp -> MAS mexp .)
    DO              reduce using rule 84 (mexpp -> MAS mexp .)


state 158

    (85) mexpp -> MENOS mexp .

    MAYQ            reduce using rule 85 (mexpp -> MENOS mexp .)
    MENQ            reduce using rule 85 (mexpp -> MENOS mexp .)
    MAYI            reduce using rule 85 (mexpp -> MENOS mexp .)
    MENI            reduce using rule 85 (mexpp -> MENOS mexp .)
    IGUALIGUAL      reduce using rule 85 (mexpp -> MENOS mexp .)
    DIF             reduce using rule 85 (mexpp -> MENOS mexp .)
    AND             reduce using rule 85 (mexpp -> MENOS mexp .)
    OR              reduce using rule 85 (mexpp -> MENOS mexp .)
    ID              reduce using rule 85 (mexpp -> MENOS mexp .)
    RETURN          reduce using rule 85 (mexpp -> MENOS mexp .)
    READ            reduce using rule 85 (mexpp -> MENOS mexp .)
    WRITE           reduce using rule 85 (mexpp -> MENOS mexp .)
    IF              reduce using rule 85 (mexpp -> MENOS mexp .)
    WHILE           reduce using rule 85 (mexpp -> MENOS mexp .)
    FOR             reduce using rule 85 (mexpp -> MENOS mexp .)
    APAR            reduce using rule 85 (mexpp -> MENOS mexp .)
    CTEI            reduce using rule 85 (mexpp -> MENOS mexp .)
    CTEF            reduce using rule 85 (mexpp -> MENOS mexp .)
    CLLA            reduce using rule 85 (mexpp -> MENOS mexp .)
    CPAR            reduce using rule 85 (mexpp -> MENOS mexp .)
    COMA            reduce using rule 85 (mexpp -> MENOS mexp .)
    CCOR            reduce using rule 85 (mexpp -> MENOS mexp .)
    PTCOMA          reduce using rule 85 (mexpp -> MENOS mexp .)
    TO              reduce using rule 85 (mexpp -> MENOS mexp .)
    DO              reduce using rule 85 (mexpp -> MENOS mexp .)


state 159

    (88) terminop -> POR termino .

    MAS             reduce using rule 88 (terminop -> POR termino .)
    MENOS           reduce using rule 88 (terminop -> POR termino .)
    MAYQ            reduce using rule 88 (terminop -> POR termino .)
    MENQ            reduce using rule 88 (terminop -> POR termino .)
    MAYI            reduce using rule 88 (terminop -> POR termino .)
    MENI            reduce using rule 88 (terminop -> POR termino .)
    IGUALIGUAL      reduce using rule 88 (terminop -> POR termino .)
    DIF             reduce using rule 88 (terminop -> POR termino .)
    AND             reduce using rule 88 (terminop -> POR termino .)
    OR              reduce using rule 88 (terminop -> POR termino .)
    ID              reduce using rule 88 (terminop -> POR termino .)
    RETURN          reduce using rule 88 (terminop -> POR termino .)
    READ            reduce using rule 88 (terminop -> POR termino .)
    WRITE           reduce using rule 88 (terminop -> POR termino .)
    IF              reduce using rule 88 (terminop -> POR termino .)
    WHILE           reduce using rule 88 (terminop -> POR termino .)
    FOR             reduce using rule 88 (terminop -> POR termino .)
    APAR            reduce using rule 88 (terminop -> POR termino .)
    CTEI            reduce using rule 88 (terminop -> POR termino .)
    CTEF            reduce using rule 88 (terminop -> POR termino .)
    CLLA            reduce using rule 88 (terminop -> POR termino .)
    CPAR            reduce using rule 88 (terminop -> POR termino .)
    COMA            reduce using rule 88 (terminop -> POR termino .)
    CCOR            reduce using rule 88 (terminop -> POR termino .)
    PTCOMA          reduce using rule 88 (terminop -> POR termino .)
    TO              reduce using rule 88 (terminop -> POR termino .)
    DO              reduce using rule 88 (terminop -> POR termino .)


state 160

    (89) terminop -> DIV termino .

    MAS             reduce using rule 89 (terminop -> DIV termino .)
    MENOS           reduce using rule 89 (terminop -> DIV termino .)
    MAYQ            reduce using rule 89 (terminop -> DIV termino .)
    MENQ            reduce using rule 89 (terminop -> DIV termino .)
    MAYI            reduce using rule 89 (terminop -> DIV termino .)
    MENI            reduce using rule 89 (terminop -> DIV termino .)
    IGUALIGUAL      reduce using rule 89 (terminop -> DIV termino .)
    DIF             reduce using rule 89 (terminop -> DIV termino .)
    AND             reduce using rule 89 (terminop -> DIV termino .)
    OR              reduce using rule 89 (terminop -> DIV termino .)
    ID              reduce using rule 89 (terminop -> DIV termino .)
    RETURN          reduce using rule 89 (terminop -> DIV termino .)
    READ            reduce using rule 89 (terminop -> DIV termino .)
    WRITE           reduce using rule 89 (terminop -> DIV termino .)
    IF              reduce using rule 89 (terminop -> DIV termino .)
    WHILE           reduce using rule 89 (terminop -> DIV termino .)
    FOR             reduce using rule 89 (terminop -> DIV termino .)
    APAR            reduce using rule 89 (terminop -> DIV termino .)
    CTEI            reduce using rule 89 (terminop -> DIV termino .)
    CTEF            reduce using rule 89 (terminop -> DIV termino .)
    CLLA            reduce using rule 89 (terminop -> DIV termino .)
    CPAR            reduce using rule 89 (terminop -> DIV termino .)
    COMA            reduce using rule 89 (terminop -> DIV termino .)
    CCOR            reduce using rule 89 (terminop -> DIV termino .)
    PTCOMA          reduce using rule 89 (terminop -> DIV termino .)
    TO              reduce using rule 89 (terminop -> DIV termino .)
    DO              reduce using rule 89 (terminop -> DIV termino .)


state 161

    (13) funcspp -> APAR params CPAR PTCOMA varss . ALLA estatutos CLLA funcs

    ALLA            shift and go to state 191


state 162

    (30) params -> tipo DOSPNTS ID ididx . paramsp
    (32) paramsp -> . COMA params
    (33) paramsp -> . empty
    (102) empty -> .

    COMA            shift and go to state 193
    CPAR            reduce using rule 102 (empty -> .)

    paramsp                        shift and go to state 192
    empty                          shift and go to state 194

state 163

    (10) varspp -> COMA ID varsppp varspp .

    INT             reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    FLOAT           reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    CHAR            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    FUNCTION        reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    MAIN            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    ALLA            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)


state 164

    (94) factorp -> APAR exp . factorpp CPAR
    (97) factorpp -> . COMA exp factorpp
    (98) factorpp -> . empty
    (102) empty -> .

    COMA            shift and go to state 195
    CPAR            reduce using rule 102 (empty -> .)

    factorpp                       shift and go to state 169
    empty                          shift and go to state 196

state 165

    (95) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 197


state 166

    (34) asig -> ID ididx IGUAL asigpp . PTCOMA

    PTCOMA          shift and go to state 198


state 167

    (99) ctes -> ID factorp .
    (92) factor -> ID factorp .

  ! reduce/reduce conflict for POR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIV resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 92 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 92 (factor -> ID factorp .)
    POR             reduce using rule 92 (factor -> ID factorp .)
    DIV             reduce using rule 92 (factor -> ID factorp .)
    MAS             reduce using rule 92 (factor -> ID factorp .)
    MENOS           reduce using rule 92 (factor -> ID factorp .)
    MAYQ            reduce using rule 92 (factor -> ID factorp .)
    MENQ            reduce using rule 92 (factor -> ID factorp .)
    MAYI            reduce using rule 92 (factor -> ID factorp .)
    MENI            reduce using rule 92 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 92 (factor -> ID factorp .)
    DIF             reduce using rule 92 (factor -> ID factorp .)
    AND             reduce using rule 92 (factor -> ID factorp .)
    OR              reduce using rule 92 (factor -> ID factorp .)
    COMA            reduce using rule 92 (factor -> ID factorp .)
    CPAR            reduce using rule 92 (factor -> ID factorp .)

  ! COMA            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! POR             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 99 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 99 (ctes -> ID factorp .) ]


state 168

    (45) llamada -> ID APAR args CPAR . PTCOMA

    PTCOMA          shift and go to state 199


state 169

    (94) factorp -> APAR exp factorpp . CPAR

    CPAR            shift and go to state 200


state 170

    (47) args -> exp argsp .

    CPAR            reduce using rule 47 (args -> exp argsp .)


state 171

    (97) factorpp -> COMA . exp factorpp
    (49) argsp -> COMA . args
    (69) exp -> . texp expp
    (46) args -> . ctes argsp
    (47) args -> . exp argsp
    (48) args -> . CTEC argsp
    (72) texp -> . gexp texpp
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes

    CTEC            shift and go to state 130
    ID              shift and go to state 126
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65
    APAR            shift and go to state 40

    exp                            shift and go to state 201
    args                           shift and go to state 202
    texp                           shift and go to state 58
    ctes                           shift and go to state 129
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62

state 172

    (98) factorpp -> empty .
    (50) argsp -> empty .

  ! reduce/reduce conflict for CPAR resolved using rule 50 (argsp -> empty .)
    CPAR            reduce using rule 50 (argsp -> empty .)

  ! CPAR            [ reduce using rule 98 (factorpp -> empty .) ]


state 173

    (46) args -> ctes argsp .

    CPAR            reduce using rule 46 (args -> ctes argsp .)


state 174

    (49) argsp -> COMA . args
    (46) args -> . ctes argsp
    (47) args -> . exp argsp
    (48) args -> . CTEC argsp
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes

    CTEC            shift and go to state 130
    ID              shift and go to state 126
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65
    APAR            shift and go to state 40

    args                           shift and go to state 202
    ctes                           shift and go to state 129
    exp                            shift and go to state 203
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62

state 175

    (50) argsp -> empty .

    CPAR            reduce using rule 50 (argsp -> empty .)


state 176

    (48) args -> CTEC argsp .

    CPAR            reduce using rule 48 (args -> CTEC argsp .)


state 177

    (43) ididx -> ACOR exp CCOR .
    (95) factorp -> ACOR exp CCOR .

    IGUAL           reduce using rule 43 (ididx -> ACOR exp CCOR .)
    POR             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    DIV             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    IGUALIGUAL      reduce using rule 95 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 95 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 95 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 95 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 95 (factorp -> ACOR exp CCOR .)


state 178

    (51) return -> RETURN APAR asigpp CPAR . PTCOMA

    PTCOMA          shift and go to state 204


state 179

    (42) asigpp -> ACOR asigp . CCOR

    CCOR            shift and go to state 205


state 180

    (35) asigp -> exp . asigppp
    (38) asigppp -> . COMA asigp
    (39) asigppp -> . empty
    (102) empty -> .

    COMA            shift and go to state 207
    CCOR            reduce using rule 102 (empty -> .)

    asigppp                        shift and go to state 206
    empty                          shift and go to state 208

state 181

    (36) asigp -> CTEC . asigppp
    (38) asigppp -> . COMA asigp
    (39) asigppp -> . empty
    (102) empty -> .

    COMA            shift and go to state 207
    CCOR            reduce using rule 102 (empty -> .)

    asigppp                        shift and go to state 209
    empty                          shift and go to state 208

state 182

    (37) asigp -> empty .

    CCOR            reduce using rule 37 (asigp -> empty .)


state 183

    (52) lectura -> READ APAR ID ididx . lecturapp CPAR PTCOMA
    (53) lecturapp -> . COMA ID ididx lecturapp
    (54) lecturapp -> . empty
    (102) empty -> .

    COMA            shift and go to state 211
    CPAR            reduce using rule 102 (empty -> .)

    lecturapp                      shift and go to state 210
    empty                          shift and go to state 212

state 184

    (55) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 213


state 185

    (59) escriturapp -> COMA . escriturap
    (56) escriturap -> . STRING
    (57) escriturap -> . exp
    (58) escriturap -> . CTEC
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    STRING          shift and go to state 138
    CTEC            shift and go to state 140
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    escriturap                     shift and go to state 214
    exp                            shift and go to state 139
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 186

    (60) escriturapp -> empty .

    CPAR            reduce using rule 60 (escriturapp -> empty .)


state 187

    (61) cond -> IF APAR condp CPAR . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 215


state 188

    (67) while -> WHILE APAR condp CPAR . DO ALLA estatutos CLLA

    DO              shift and go to state 216


state 189

    (68) for -> FOR ID ididx IGUAL . exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 217
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 190

    (43) ididx -> ACOR exp . CCOR

    CCOR            shift and go to state 218


state 191

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA . estatutos CLLA funcs
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 219
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 192

    (30) params -> tipo DOSPNTS ID ididx paramsp .

    CPAR            reduce using rule 30 (params -> tipo DOSPNTS ID ididx paramsp .)


state 193

    (32) paramsp -> COMA . params
    (30) params -> . tipo DOSPNTS ID ididx paramsp
    (31) params -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (102) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 102 (empty -> .)

    params                         shift and go to state 220
    tipo                           shift and go to state 34
    empty                          shift and go to state 35

state 194

    (33) paramsp -> empty .

    CPAR            reduce using rule 33 (paramsp -> empty .)


state 195

    (97) factorpp -> COMA . exp factorpp
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 221
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 196

    (98) factorpp -> empty .

    CPAR            reduce using rule 98 (factorpp -> empty .)


state 197

    (95) factorp -> ACOR exp CCOR .

    POR             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    DIV             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    IGUALIGUAL      reduce using rule 95 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 95 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 95 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 95 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 95 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 95 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 95 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 95 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 95 (factorp -> ACOR exp CCOR .)


state 198

    (34) asig -> ID ididx IGUAL asigpp PTCOMA .

    ID              reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    RETURN          reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    READ            reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    WRITE           reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    IF              reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    WHILE           reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    FOR             reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    APAR            reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CTEI            reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CTEF            reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CLLA            reduce using rule 34 (asig -> ID ididx IGUAL asigpp PTCOMA .)


state 199

    (45) llamada -> ID APAR args CPAR PTCOMA .

    ID              reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    RETURN          reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    READ            reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    WRITE           reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    IF              reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    WHILE           reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    FOR             reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    APAR            reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEI            reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEF            reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)
    CLLA            reduce using rule 45 (llamada -> ID APAR args CPAR PTCOMA .)


state 200

    (94) factorp -> APAR exp factorpp CPAR .

    POR             reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    DIV             reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    MAS             reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    MENOS           reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    MAYQ            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    MENQ            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    MAYI            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    MENI            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    IGUALIGUAL      reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    DIF             reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    AND             reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    OR              reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    ID              reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    RETURN          reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    READ            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    WRITE           reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    IF              reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    WHILE           reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    FOR             reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    APAR            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    CTEI            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    CTEF            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    CLLA            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    CPAR            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    CCOR            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    COMA            reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    PTCOMA          reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    TO              reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)
    DO              reduce using rule 94 (factorp -> APAR exp factorpp CPAR .)


state 201

    (97) factorpp -> COMA exp . factorpp
    (47) args -> exp . argsp
    (97) factorpp -> . COMA exp factorpp
    (98) factorpp -> . empty
    (49) argsp -> . COMA args
    (50) argsp -> . empty
    (102) empty -> .

    COMA            shift and go to state 171
    CPAR            reduce using rule 102 (empty -> .)

    factorpp                       shift and go to state 222
    argsp                          shift and go to state 170
    empty                          shift and go to state 172

state 202

    (49) argsp -> COMA args .

    CPAR            reduce using rule 49 (argsp -> COMA args .)


state 203

    (47) args -> exp . argsp
    (49) argsp -> . COMA args
    (50) argsp -> . empty
    (102) empty -> .

    COMA            shift and go to state 174
    CPAR            reduce using rule 102 (empty -> .)

    argsp                          shift and go to state 170
    empty                          shift and go to state 175

state 204

    (51) return -> RETURN APAR asigpp CPAR PTCOMA .

    ID              reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    RETURN          reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    READ            reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    WRITE           reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    IF              reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    WHILE           reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    FOR             reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    APAR            reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CTEI            reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CTEF            reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CLLA            reduce using rule 51 (return -> RETURN APAR asigpp CPAR PTCOMA .)


state 205

    (42) asigpp -> ACOR asigp CCOR .

    CPAR            reduce using rule 42 (asigpp -> ACOR asigp CCOR .)
    PTCOMA          reduce using rule 42 (asigpp -> ACOR asigp CCOR .)


state 206

    (35) asigp -> exp asigppp .

    CCOR            reduce using rule 35 (asigp -> exp asigppp .)


state 207

    (38) asigppp -> COMA . asigp
    (35) asigp -> . exp asigppp
    (36) asigp -> . CTEC asigppp
    (37) asigp -> . empty
    (69) exp -> . texp expp
    (102) empty -> .
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    CTEC            shift and go to state 181
    CCOR            reduce using rule 102 (empty -> .)
    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigp                          shift and go to state 223
    exp                            shift and go to state 180
    empty                          shift and go to state 182
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 208

    (39) asigppp -> empty .

    CCOR            reduce using rule 39 (asigppp -> empty .)


state 209

    (36) asigp -> CTEC asigppp .

    CCOR            reduce using rule 36 (asigp -> CTEC asigppp .)


state 210

    (52) lectura -> READ APAR ID ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 224


state 211

    (53) lecturapp -> COMA . ID ididx lecturapp

    ID              shift and go to state 225


state 212

    (54) lecturapp -> empty .

    CPAR            reduce using rule 54 (lecturapp -> empty .)


state 213

    (55) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 226


state 214

    (59) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 59 (escriturapp -> COMA escriturap .)


state 215

    (61) cond -> IF APAR condp CPAR THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 227


state 216

    (67) while -> WHILE APAR condp CPAR DO . ALLA estatutos CLLA

    ALLA            shift and go to state 228


state 217

    (68) for -> FOR ID ididx IGUAL exp . TO exp DO ALLA estatutos CLLA

    TO              shift and go to state 229


state 218

    (43) ididx -> ACOR exp CCOR .

    IGUAL           reduce using rule 43 (ididx -> ACOR exp CCOR .)
    COMA            reduce using rule 43 (ididx -> ACOR exp CCOR .)
    CPAR            reduce using rule 43 (ididx -> ACOR exp CCOR .)


state 219

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos . CLLA funcs

    CLLA            shift and go to state 230


state 220

    (32) paramsp -> COMA params .

    CPAR            reduce using rule 32 (paramsp -> COMA params .)


state 221

    (97) factorpp -> COMA exp . factorpp
    (97) factorpp -> . COMA exp factorpp
    (98) factorpp -> . empty
    (102) empty -> .

    COMA            shift and go to state 195
    CPAR            reduce using rule 102 (empty -> .)

    factorpp                       shift and go to state 222
    empty                          shift and go to state 196

state 222

    (97) factorpp -> COMA exp factorpp .

    CPAR            reduce using rule 97 (factorpp -> COMA exp factorpp .)


state 223

    (38) asigppp -> COMA asigp .

    CCOR            reduce using rule 38 (asigppp -> COMA asigp .)


state 224

    (52) lectura -> READ APAR ID ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 231


state 225

    (53) lecturapp -> COMA ID . ididx lecturapp
    (43) ididx -> . ACOR exp CCOR
    (44) ididx -> . empty
    (102) empty -> .

    ACOR            shift and go to state 147
    COMA            reduce using rule 102 (empty -> .)
    CPAR            reduce using rule 102 (empty -> .)

    ididx                          shift and go to state 232
    empty                          shift and go to state 148

state 226

    (55) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    ID              reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    RETURN          reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 227

    (61) cond -> IF APAR condp CPAR THEN ALLA . estatutos CLLA condpp
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 233
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 228

    (67) while -> WHILE APAR condp CPAR DO ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 234
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 229

    (68) for -> FOR ID ididx IGUAL exp TO . exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    APAR            shift and go to state 40
    ID              shift and go to state 72
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 235
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 230

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA . funcs
    (11) funcs -> . FUNCTION funcsp ID funcspp
    (12) funcs -> . empty
    (102) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 102 (empty -> .)

    funcs                          shift and go to state 236
    empty                          shift and go to state 11

state 231

    (52) lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .

    ID              reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    RETURN          reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 52 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)


state 232

    (53) lecturapp -> COMA ID ididx . lecturapp
    (53) lecturapp -> . COMA ID ididx lecturapp
    (54) lecturapp -> . empty
    (102) empty -> .

    COMA            shift and go to state 211
    CPAR            reduce using rule 102 (empty -> .)

    lecturapp                      shift and go to state 237
    empty                          shift and go to state 212

state 233

    (61) cond -> IF APAR condp CPAR THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 238


state 234

    (67) while -> WHILE APAR condp CPAR DO ALLA estatutos . CLLA

    CLLA            shift and go to state 239


state 235

    (68) for -> FOR ID ididx IGUAL exp TO exp . DO ALLA estatutos CLLA

    DO              shift and go to state 240


state 236

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .

    MAIN            reduce using rule 13 (funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .)


state 237

    (53) lecturapp -> COMA ID ididx lecturapp .

    CPAR            reduce using rule 53 (lecturapp -> COMA ID ididx lecturapp .)


state 238

    (61) cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA . condpp
    (65) condpp -> . ELSE ALLA estatutos CLLA
    (66) condpp -> . empty
    (102) empty -> .

    ELSE            shift and go to state 242
    ID              reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    READ            reduce using rule 102 (empty -> .)
    WRITE           reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    APAR            reduce using rule 102 (empty -> .)
    CTEI            reduce using rule 102 (empty -> .)
    CTEF            reduce using rule 102 (empty -> .)
    CLLA            reduce using rule 102 (empty -> .)

    condpp                         shift and go to state 241
    empty                          shift and go to state 243

state 239

    (67) while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .

    ID              reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    READ            reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    IF              reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    FOR             reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    APAR            reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 67 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)


state 240

    (68) for -> FOR ID ididx IGUAL exp TO exp DO . ALLA estatutos CLLA

    ALLA            shift and go to state 244


state 241

    (61) cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .

    ID              reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    RETURN          reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 61 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)


state 242

    (65) condpp -> ELSE . ALLA estatutos CLLA

    ALLA            shift and go to state 245


state 243

    (66) condpp -> empty .

    ID              reduce using rule 66 (condpp -> empty .)
    RETURN          reduce using rule 66 (condpp -> empty .)
    READ            reduce using rule 66 (condpp -> empty .)
    WRITE           reduce using rule 66 (condpp -> empty .)
    IF              reduce using rule 66 (condpp -> empty .)
    WHILE           reduce using rule 66 (condpp -> empty .)
    FOR             reduce using rule 66 (condpp -> empty .)
    APAR            reduce using rule 66 (condpp -> empty .)
    CTEI            reduce using rule 66 (condpp -> empty .)
    CTEF            reduce using rule 66 (condpp -> empty .)
    CLLA            reduce using rule 66 (condpp -> empty .)


state 244

    (68) for -> FOR ID ididx IGUAL exp TO exp DO ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 50
    estatutos                      shift and go to state 246
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 245

    (65) condpp -> ELSE ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (34) asig -> . ID ididx IGUAL asigpp PTCOMA
    (45) llamada -> . ID APAR args CPAR PTCOMA
    (51) return -> . RETURN APAR asigpp CPAR PTCOMA
    (52) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (61) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (67) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (68) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (69) exp -> . texp expp
    (72) texp -> . gexp texpp
    (75) gexp -> . mexp gexpp
    (83) mexp -> . termino mexpp
    (87) termino -> . factor terminop
    (91) factor -> . APAR exp CPAR
    (92) factor -> . ID factorp
    (93) factor -> . ctes
    (99) ctes -> . ID factorp
    (100) ctes -> . CTEI
    (101) ctes -> . CTEF

    ID              shift and go to state 51
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    IF              shift and go to state 55
    WHILE           shift and go to state 56
    FOR             shift and go to state 57
    APAR            shift and go to state 40
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 247
    asig                           shift and go to state 42
    llamada                        shift and go to state 43
    return                         shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    cond                           shift and go to state 47
    while                          shift and go to state 48
    for                            shift and go to state 49
    exp                            shift and go to state 50
    texp                           shift and go to state 58
    gexp                           shift and go to state 59
    mexp                           shift and go to state 60
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 246

    (68) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos . CLLA

    CLLA            shift and go to state 248


state 247

    (65) condpp -> ELSE ALLA estatutos . CLLA

    CLLA            shift and go to state 249


state 248

    (68) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .

    ID              reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    READ            reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    IF              reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    FOR             reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    APAR            reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 68 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)


state 249

    (65) condpp -> ELSE ALLA estatutos CLLA .

    ID              reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    RETURN          reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    READ            reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    WRITE           reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    IF              reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    WHILE           reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    FOR             reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    APAR            reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    CTEI            reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    CTEF            reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)
    CLLA            reduce using rule 65 (condpp -> ELSE ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 51 resolved as shift
WARNING: shift/reduce conflict for APAR in state 72 resolved as shift
WARNING: shift/reduce conflict for COMA in state 129 resolved as shift
WARNING: reduce/reduce conflict in state 87 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 87
WARNING: reduce/reduce conflict in state 129 resolved using rule (factor -> ctes)
WARNING: rejected rule (empty -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 167 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 167
WARNING: reduce/reduce conflict in state 172 resolved using rule (argsp -> empty)
WARNING: rejected rule (factorpp -> empty) in state 172
WARNING: Rule (ctes -> ID factorp) is never reduced
