Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     varss -> VARS vars
Rule 4     varss -> empty
Rule 5     vars -> tipo DOSPNTS ID varsppp varspp vars
Rule 6     vars -> empty
Rule 7     varsppp -> ACOR CTEI CCOR
Rule 8     varsppp -> empty
Rule 9     varspp -> PTCOMA
Rule 10    varspp -> COMA ID varsppp varspp
Rule 11    funcs -> FUNCTION funcsp ID funcspp
Rule 12    funcs -> empty
Rule 13    funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
Rule 14    funcsp -> VOID
Rule 15    funcsp -> tipo
Rule 16    estatutos -> asig estatutop
Rule 17    estatutos -> llamada estatutop
Rule 18    estatutos -> return estatutop
Rule 19    estatutos -> lectura estatutop
Rule 20    estatutos -> escritura estatutop
Rule 21    estatutos -> cond estatutop
Rule 22    estatutos -> while estatutop
Rule 23    estatutos -> for estatutop
Rule 24    estatutos -> exp estatutop
Rule 25    estatutop -> estatutos
Rule 26    estatutop -> empty
Rule 27    tipo -> INT
Rule 28    tipo -> FLOAT
Rule 29    tipo -> CHAR
Rule 30    tipo -> STR
Rule 31    tipo -> BOOL
Rule 32    params -> tipo DOSPNTS ID ididx paramsp
Rule 33    params -> empty
Rule 34    paramsp -> COMA params
Rule 35    paramsp -> empty
Rule 36    asig -> ID ididx IGUAL asigpp PTCOMA
Rule 37    asigp -> exp asigppp
Rule 38    asigp -> CTEC asigppp
Rule 39    asigp -> STRING asigppp
Rule 40    asigp -> empty
Rule 41    asigppp -> COMA asigp
Rule 42    asigppp -> empty
Rule 43    asigpp -> exp
Rule 44    asigpp -> CTEC
Rule 45    asigpp -> STRING
Rule 46    asigpp -> ACOR asigp CCOR
Rule 47    ididx -> ACOR exp CCOR
Rule 48    ididx -> empty
Rule 49    llamada -> ID APAR args CPAR PTCOMA
Rule 50    args -> ctes argsp
Rule 51    args -> exp argsp
Rule 52    args -> STRING argsp
Rule 53    args -> CTEC argsp
Rule 54    argsp -> COMA args
Rule 55    argsp -> empty
Rule 56    return -> RETURN APAR asigpp CPAR PTCOMA
Rule 57    lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA
Rule 58    lecturapp -> COMA ID ididx lecturapp
Rule 59    lecturapp -> empty
Rule 60    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 61    escriturap -> STRING
Rule 62    escriturap -> exp
Rule 63    escriturap -> CTEC
Rule 64    escriturapp -> COMA escriturap
Rule 65    escriturapp -> empty
Rule 66    cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
Rule 67    condp -> exp
Rule 68    condp -> TRUE
Rule 69    condp -> FALSE
Rule 70    condpp -> ELSE ALLA estatutos CLLA
Rule 71    condpp -> empty
Rule 72    while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA
Rule 73    for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
Rule 74    exp -> texp expp
Rule 75    expp -> OR exp
Rule 76    expp -> empty
Rule 77    texp -> gexp texpp
Rule 78    texpp -> AND texp
Rule 79    texpp -> empty
Rule 80    gexp -> mexp gexpp
Rule 81    gexpp -> MAYQ mexp
Rule 82    gexpp -> MENQ mexp
Rule 83    gexpp -> MAYI mexp
Rule 84    gexpp -> MENI mexp
Rule 85    gexpp -> IGUALIGUAL mexp
Rule 86    gexpp -> DIF mexp
Rule 87    gexpp -> empty
Rule 88    mexp -> termino mexpp
Rule 89    mexpp -> MAS mexp
Rule 90    mexpp -> MENOS mexp
Rule 91    mexpp -> empty
Rule 92    termino -> factor terminop
Rule 93    terminop -> POR termino
Rule 94    terminop -> DIV termino
Rule 95    terminop -> empty
Rule 96    factor -> APAR exp CPAR
Rule 97    factor -> ID factorp
Rule 98    factor -> ctes
Rule 99    factorp -> <empty>
Rule 100   factorp -> APAR exp factorpp CPAR
Rule 101   factorp -> ACOR exp CCOR
Rule 102   factorp -> empty
Rule 103   factorpp -> COMA exp factorpp
Rule 104   factorpp -> empty
Rule 105   ctes -> ID factorp
Rule 106   ctes -> CTEI
Rule 107   ctes -> CTEF
Rule 108   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 7 46 47 101
ALLA                 : 1 13 66 70 72 73
AND                  : 78
APAR                 : 1 13 49 56 57 60 66 72 96 100
BOOL                 : 31
CCOR                 : 7 46 47 101
CHAR                 : 29
CLLA                 : 1 13 66 70 72 73
COMA                 : 10 34 41 54 58 64 103
CPAR                 : 1 13 49 56 57 60 66 72 96 100
CTEC                 : 38 44 53 63
CTEF                 : 107
CTEI                 : 7 106
DIF                  : 86
DIV                  : 94
DO                   : 72 73
DOSPNTS              : 5 32
ELSE                 : 70
FALSE                : 69
FLOAT                : 28
FOR                  : 73
FUNCTION             : 11
ID                   : 2 5 10 11 32 36 49 57 58 73 97 105
IF                   : 66
IGUAL                : 36 73
IGUALIGUAL           : 85
INT                  : 27
MAIN                 : 1
MAS                  : 89
MAYI                 : 83
MAYQ                 : 81
MENI                 : 84
MENOS                : 90
MENQ                 : 82
NOT                  : 
OR                   : 75
POR                  : 93
PROGRAM              : 1
PTCOMA               : 2 9 13 36 49 56 57 60
READ                 : 57
RETURN               : 56
STR                  : 30
STRING               : 39 45 52 61
THEN                 : 66
TO                   : 73
TRUE                 : 68
VARS                 : 3
VOID                 : 14
WHILE                : 72
WRITE                : 60
error                : 

Nonterminals, with rules where they appear

agregarTablaFunciones : 1
args                 : 49 54
argsp                : 50 51 52 53
asig                 : 16
asigp                : 41 46
asigpp               : 36 56
asigppp              : 37 38 39
cond                 : 21
condp                : 66 72
condpp               : 66
ctes                 : 50 98
empty                : 4 6 8 12 26 33 35 40 42 48 55 59 65 71 76 79 87 91 95 102 104
escritura            : 20
escriturap           : 60 64
escriturapp          : 60
estatutop            : 16 17 18 19 20 21 22 23 24
estatutos            : 1 13 25 66 70 72 73
exp                  : 24 37 43 47 51 62 67 73 73 75 96 100 101 103
expp                 : 74
factor               : 92
factorp              : 97 105
factorpp             : 100 103
for                  : 23
funcs                : 1 13
funcsp               : 11
funcspp              : 11
gexp                 : 77
gexpp                : 80
ididx                : 32 36 57 58 73
lectura              : 19
lecturapp            : 57 58
llamada              : 17
mexp                 : 80 81 82 83 84 85 86 89 90
mexpp                : 88
params               : 13 34
paramsp              : 32
program              : 0
return               : 18
termino              : 88 93 94
terminop             : 92
texp                 : 74 78
texpp                : 77
tipo                 : 5 15 32
vars                 : 3 5
varspp               : 5 10
varsppp              : 5 10
varss                : 1 13
while                : 22

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (3) varss -> . VARS vars
    (4) varss -> . empty
    (108) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 108 (empty -> .)
    MAIN            reduce using rule 108 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA estatutos CLLA
    (11) funcs -> . FUNCTION funcsp ID funcspp
    (12) funcs -> . empty
    (108) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 108 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (3) varss -> VARS . vars
    (5) vars -> . tipo DOSPNTS ID varsppp varspp vars
    (6) vars -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . STR
    (31) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STR             shift and go to state 18
    BOOL            shift and go to state 19
    FUNCTION        reduce using rule 108 (empty -> .)
    MAIN            reduce using rule 108 (empty -> .)
    ALLA            reduce using rule 108 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (4) varss -> empty .

    FUNCTION        reduce using rule 4 (varss -> empty .)
    MAIN            reduce using rule 4 (varss -> empty .)
    ALLA            reduce using rule 4 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA estatutos CLLA

    MAIN            shift and go to state 20


state 10

    (11) funcs -> FUNCTION . funcsp ID funcspp
    (14) funcsp -> . VOID
    (15) funcsp -> . tipo
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . STR
    (31) tipo -> . BOOL

    VOID            shift and go to state 22
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STR             shift and go to state 18
    BOOL            shift and go to state 19

    funcsp                         shift and go to state 21
    tipo                           shift and go to state 23

state 11

    (12) funcs -> empty .

    MAIN            reduce using rule 12 (funcs -> empty .)


state 12

    (3) varss -> VARS vars .

    FUNCTION        reduce using rule 3 (varss -> VARS vars .)
    MAIN            reduce using rule 3 (varss -> VARS vars .)
    ALLA            reduce using rule 3 (varss -> VARS vars .)


state 13

    (5) vars -> tipo . DOSPNTS ID varsppp varspp vars

    DOSPNTS         shift and go to state 24


state 14

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    ALLA            reduce using rule 6 (vars -> empty .)


state 15

    (27) tipo -> INT .

    DOSPNTS         reduce using rule 27 (tipo -> INT .)
    ID              reduce using rule 27 (tipo -> INT .)


state 16

    (28) tipo -> FLOAT .

    DOSPNTS         reduce using rule 28 (tipo -> FLOAT .)
    ID              reduce using rule 28 (tipo -> FLOAT .)


state 17

    (29) tipo -> CHAR .

    DOSPNTS         reduce using rule 29 (tipo -> CHAR .)
    ID              reduce using rule 29 (tipo -> CHAR .)


state 18

    (30) tipo -> STR .

    DOSPNTS         reduce using rule 30 (tipo -> STR .)
    ID              reduce using rule 30 (tipo -> STR .)


state 19

    (31) tipo -> BOOL .

    DOSPNTS         reduce using rule 31 (tipo -> BOOL .)
    ID              reduce using rule 31 (tipo -> BOOL .)


state 20

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA estatutos CLLA

    APAR            shift and go to state 25


state 21

    (11) funcs -> FUNCTION funcsp . ID funcspp

    ID              shift and go to state 26


state 22

    (14) funcsp -> VOID .

    ID              reduce using rule 14 (funcsp -> VOID .)


state 23

    (15) funcsp -> tipo .

    ID              reduce using rule 15 (funcsp -> tipo .)


state 24

    (5) vars -> tipo DOSPNTS . ID varsppp varspp vars

    ID              shift and go to state 27


state 25

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA estatutos CLLA

    CPAR            shift and go to state 28


state 26

    (11) funcs -> FUNCTION funcsp ID . funcspp
    (13) funcspp -> . APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 27

    (5) vars -> tipo DOSPNTS ID . varsppp varspp vars
    (7) varsppp -> . ACOR CTEI CCOR
    (8) varsppp -> . empty
    (108) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)

    varsppp                        shift and go to state 31
    empty                          shift and go to state 33

state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA estatutos CLLA

    ALLA            shift and go to state 34


state 29

    (11) funcs -> FUNCTION funcsp ID funcspp .

    MAIN            reduce using rule 11 (funcs -> FUNCTION funcsp ID funcspp .)


state 30

    (13) funcspp -> APAR . params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (32) params -> . tipo DOSPNTS ID ididx paramsp
    (33) params -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . STR
    (31) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STR             shift and go to state 18
    BOOL            shift and go to state 19
    CPAR            reduce using rule 108 (empty -> .)

    params                         shift and go to state 35
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 31

    (5) vars -> tipo DOSPNTS ID varsppp . varspp vars
    (9) varspp -> . PTCOMA
    (10) varspp -> . COMA ID varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 38

state 32

    (7) varsppp -> ACOR . CTEI CCOR

    CTEI            shift and go to state 41


state 33

    (8) varsppp -> empty .

    PTCOMA          reduce using rule 8 (varsppp -> empty .)
    COMA            reduce using rule 8 (varsppp -> empty .)


state 34

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    estatutos                      shift and go to state 43
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 35

    (13) funcspp -> APAR params . CPAR PTCOMA varss ALLA estatutos CLLA funcs

    CPAR            shift and go to state 68


state 36

    (32) params -> tipo . DOSPNTS ID ididx paramsp

    DOSPNTS         shift and go to state 69


state 37

    (33) params -> empty .

    CPAR            reduce using rule 33 (params -> empty .)


state 38

    (5) vars -> tipo DOSPNTS ID varsppp varspp . vars
    (5) vars -> . tipo DOSPNTS ID varsppp varspp vars
    (6) vars -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . STR
    (31) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STR             shift and go to state 18
    BOOL            shift and go to state 19
    FUNCTION        reduce using rule 108 (empty -> .)
    MAIN            reduce using rule 108 (empty -> .)
    ALLA            reduce using rule 108 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 70
    empty                          shift and go to state 14

state 39

    (9) varspp -> PTCOMA .

    INT             reduce using rule 9 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 9 (varspp -> PTCOMA .)
    CHAR            reduce using rule 9 (varspp -> PTCOMA .)
    STR             reduce using rule 9 (varspp -> PTCOMA .)
    BOOL            reduce using rule 9 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 9 (varspp -> PTCOMA .)
    MAIN            reduce using rule 9 (varspp -> PTCOMA .)
    ALLA            reduce using rule 9 (varspp -> PTCOMA .)


state 40

    (10) varspp -> COMA . ID varsppp varspp

    ID              shift and go to state 71


state 41

    (7) varsppp -> ACOR CTEI . CCOR

    CCOR            shift and go to state 72


state 42

    (96) factor -> APAR . exp CPAR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 73
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 43

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos . CLLA

    CLLA            shift and go to state 75


state 44

    (16) estatutos -> asig . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    asig                           shift and go to state 44
    estatutop                      shift and go to state 76
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 45

    (17) estatutos -> llamada . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    llamada                        shift and go to state 45
    estatutop                      shift and go to state 79
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 46

    (18) estatutos -> return . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    return                         shift and go to state 46
    estatutop                      shift and go to state 80
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 47

    (19) estatutos -> lectura . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    lectura                        shift and go to state 47
    estatutop                      shift and go to state 81
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 48

    (20) estatutos -> escritura . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    escritura                      shift and go to state 48
    estatutop                      shift and go to state 82
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 49

    (21) estatutos -> cond . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    cond                           shift and go to state 49
    estatutop                      shift and go to state 83
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 50

    (22) estatutos -> while . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    while                          shift and go to state 50
    estatutop                      shift and go to state 84
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 51

    (23) estatutos -> for . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    for                            shift and go to state 51
    estatutop                      shift and go to state 85
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 52

    (24) estatutos -> exp . estatutop
    (25) estatutop -> . estatutos
    (26) estatutop -> . empty
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (108) empty -> .
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 52
    estatutop                      shift and go to state 86
    estatutos                      shift and go to state 77
    empty                          shift and go to state 78
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 53

    (36) asig -> ID . ididx IGUAL asigpp PTCOMA
    (49) llamada -> ID . APAR args CPAR PTCOMA
    (97) factor -> ID . factorp
    (105) ctes -> ID . factorp
    (47) ididx -> . ACOR exp CCOR
    (48) ididx -> . empty
    (99) factorp -> .
    (100) factorp -> . APAR exp factorpp CPAR
    (101) factorp -> . ACOR exp CCOR
    (102) factorp -> . empty
    (108) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for POR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DIV resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAS resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENOS resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAYQ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENQ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAYI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DIF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for AND resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for OR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for READ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for WRITE resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for IF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for FOR resolved using rule 99 (factorp -> .)
  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for CTEI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CTEF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CLLA resolved using rule 99 (factorp -> .)
    APAR            shift and go to state 88
    ACOR            shift and go to state 90
    POR             reduce using rule 99 (factorp -> .)
    DIV             reduce using rule 99 (factorp -> .)
    MAS             reduce using rule 99 (factorp -> .)
    MENOS           reduce using rule 99 (factorp -> .)
    MAYQ            reduce using rule 99 (factorp -> .)
    MENQ            reduce using rule 99 (factorp -> .)
    MAYI            reduce using rule 99 (factorp -> .)
    MENI            reduce using rule 99 (factorp -> .)
    IGUALIGUAL      reduce using rule 99 (factorp -> .)
    DIF             reduce using rule 99 (factorp -> .)
    AND             reduce using rule 99 (factorp -> .)
    OR              reduce using rule 99 (factorp -> .)
    ID              reduce using rule 99 (factorp -> .)
    RETURN          reduce using rule 99 (factorp -> .)
    READ            reduce using rule 99 (factorp -> .)
    WRITE           reduce using rule 99 (factorp -> .)
    IF              reduce using rule 99 (factorp -> .)
    WHILE           reduce using rule 99 (factorp -> .)
    FOR             reduce using rule 99 (factorp -> .)
    CTEI            reduce using rule 99 (factorp -> .)
    CTEF            reduce using rule 99 (factorp -> .)
    CLLA            reduce using rule 99 (factorp -> .)
    IGUAL           reduce using rule 108 (empty -> .)

  ! APAR            [ reduce using rule 99 (factorp -> .) ]
  ! POR             [ reduce using rule 108 (empty -> .) ]
  ! DIV             [ reduce using rule 108 (empty -> .) ]
  ! MAS             [ reduce using rule 108 (empty -> .) ]
  ! MENOS           [ reduce using rule 108 (empty -> .) ]
  ! MAYQ            [ reduce using rule 108 (empty -> .) ]
  ! MENQ            [ reduce using rule 108 (empty -> .) ]
  ! MAYI            [ reduce using rule 108 (empty -> .) ]
  ! MENI            [ reduce using rule 108 (empty -> .) ]
  ! IGUALIGUAL      [ reduce using rule 108 (empty -> .) ]
  ! DIF             [ reduce using rule 108 (empty -> .) ]
  ! AND             [ reduce using rule 108 (empty -> .) ]
  ! OR              [ reduce using rule 108 (empty -> .) ]
  ! ID              [ reduce using rule 108 (empty -> .) ]
  ! RETURN          [ reduce using rule 108 (empty -> .) ]
  ! READ            [ reduce using rule 108 (empty -> .) ]
  ! WRITE           [ reduce using rule 108 (empty -> .) ]
  ! IF              [ reduce using rule 108 (empty -> .) ]
  ! WHILE           [ reduce using rule 108 (empty -> .) ]
  ! FOR             [ reduce using rule 108 (empty -> .) ]
  ! APAR            [ reduce using rule 108 (empty -> .) ]
  ! CTEI            [ reduce using rule 108 (empty -> .) ]
  ! CTEF            [ reduce using rule 108 (empty -> .) ]
  ! CLLA            [ reduce using rule 108 (empty -> .) ]

    ididx                          shift and go to state 87
    factorp                        shift and go to state 89
    empty                          shift and go to state 91

state 54

    (56) return -> RETURN . APAR asigpp CPAR PTCOMA

    APAR            shift and go to state 92


state 55

    (57) lectura -> READ . APAR ID ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 93


state 56

    (60) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 94


state 57

    (66) cond -> IF . APAR condp CPAR THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 95


state 58

    (72) while -> WHILE . APAR condp CPAR DO ALLA estatutos CLLA

    APAR            shift and go to state 96


state 59

    (73) for -> FOR . ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA

    ID              shift and go to state 97


state 60

    (74) exp -> texp . expp
    (75) expp -> . OR exp
    (76) expp -> . empty
    (108) empty -> .

    OR              shift and go to state 99
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    expp                           shift and go to state 98
    empty                          shift and go to state 100

state 61

    (77) texp -> gexp . texpp
    (78) texpp -> . AND texp
    (79) texpp -> . empty
    (108) empty -> .

    AND             shift and go to state 102
    OR              reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    texpp                          shift and go to state 101
    empty                          shift and go to state 103

state 62

    (80) gexp -> mexp . gexpp
    (81) gexpp -> . MAYQ mexp
    (82) gexpp -> . MENQ mexp
    (83) gexpp -> . MAYI mexp
    (84) gexpp -> . MENI mexp
    (85) gexpp -> . IGUALIGUAL mexp
    (86) gexpp -> . DIF mexp
    (87) gexpp -> . empty
    (108) empty -> .

    MAYQ            shift and go to state 105
    MENQ            shift and go to state 106
    MAYI            shift and go to state 107
    MENI            shift and go to state 108
    IGUALIGUAL      shift and go to state 109
    DIF             shift and go to state 110
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    gexpp                          shift and go to state 104
    empty                          shift and go to state 111

state 63

    (88) mexp -> termino . mexpp
    (89) mexpp -> . MAS mexp
    (90) mexpp -> . MENOS mexp
    (91) mexpp -> . empty
    (108) empty -> .

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MAYQ            reduce using rule 108 (empty -> .)
    MENQ            reduce using rule 108 (empty -> .)
    MAYI            reduce using rule 108 (empty -> .)
    MENI            reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIF             reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    mexpp                          shift and go to state 112
    empty                          shift and go to state 115

state 64

    (92) termino -> factor . terminop
    (93) terminop -> . POR termino
    (94) terminop -> . DIV termino
    (95) terminop -> . empty
    (108) empty -> .

    POR             shift and go to state 117
    DIV             shift and go to state 118
    MAS             reduce using rule 108 (empty -> .)
    MENOS           reduce using rule 108 (empty -> .)
    MAYQ            reduce using rule 108 (empty -> .)
    MENQ            reduce using rule 108 (empty -> .)
    MAYI            reduce using rule 108 (empty -> .)
    MENI            reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIF             reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    terminop                       shift and go to state 116
    empty                          shift and go to state 119

state 65

    (98) factor -> ctes .

    POR             reduce using rule 98 (factor -> ctes .)
    DIV             reduce using rule 98 (factor -> ctes .)
    MAS             reduce using rule 98 (factor -> ctes .)
    MENOS           reduce using rule 98 (factor -> ctes .)
    MAYQ            reduce using rule 98 (factor -> ctes .)
    MENQ            reduce using rule 98 (factor -> ctes .)
    MAYI            reduce using rule 98 (factor -> ctes .)
    MENI            reduce using rule 98 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 98 (factor -> ctes .)
    DIF             reduce using rule 98 (factor -> ctes .)
    AND             reduce using rule 98 (factor -> ctes .)
    OR              reduce using rule 98 (factor -> ctes .)
    ID              reduce using rule 98 (factor -> ctes .)
    RETURN          reduce using rule 98 (factor -> ctes .)
    READ            reduce using rule 98 (factor -> ctes .)
    WRITE           reduce using rule 98 (factor -> ctes .)
    IF              reduce using rule 98 (factor -> ctes .)
    WHILE           reduce using rule 98 (factor -> ctes .)
    FOR             reduce using rule 98 (factor -> ctes .)
    APAR            reduce using rule 98 (factor -> ctes .)
    CTEI            reduce using rule 98 (factor -> ctes .)
    CTEF            reduce using rule 98 (factor -> ctes .)
    CLLA            reduce using rule 98 (factor -> ctes .)
    CPAR            reduce using rule 98 (factor -> ctes .)
    CCOR            reduce using rule 98 (factor -> ctes .)
    COMA            reduce using rule 98 (factor -> ctes .)
    PTCOMA          reduce using rule 98 (factor -> ctes .)
    TO              reduce using rule 98 (factor -> ctes .)
    DO              reduce using rule 98 (factor -> ctes .)


state 66

    (106) ctes -> CTEI .

    POR             reduce using rule 106 (ctes -> CTEI .)
    DIV             reduce using rule 106 (ctes -> CTEI .)
    MAS             reduce using rule 106 (ctes -> CTEI .)
    MENOS           reduce using rule 106 (ctes -> CTEI .)
    MAYQ            reduce using rule 106 (ctes -> CTEI .)
    MENQ            reduce using rule 106 (ctes -> CTEI .)
    MAYI            reduce using rule 106 (ctes -> CTEI .)
    MENI            reduce using rule 106 (ctes -> CTEI .)
    IGUALIGUAL      reduce using rule 106 (ctes -> CTEI .)
    DIF             reduce using rule 106 (ctes -> CTEI .)
    AND             reduce using rule 106 (ctes -> CTEI .)
    OR              reduce using rule 106 (ctes -> CTEI .)
    ID              reduce using rule 106 (ctes -> CTEI .)
    RETURN          reduce using rule 106 (ctes -> CTEI .)
    READ            reduce using rule 106 (ctes -> CTEI .)
    WRITE           reduce using rule 106 (ctes -> CTEI .)
    IF              reduce using rule 106 (ctes -> CTEI .)
    WHILE           reduce using rule 106 (ctes -> CTEI .)
    FOR             reduce using rule 106 (ctes -> CTEI .)
    APAR            reduce using rule 106 (ctes -> CTEI .)
    CTEI            reduce using rule 106 (ctes -> CTEI .)
    CTEF            reduce using rule 106 (ctes -> CTEI .)
    CLLA            reduce using rule 106 (ctes -> CTEI .)
    CPAR            reduce using rule 106 (ctes -> CTEI .)
    COMA            reduce using rule 106 (ctes -> CTEI .)
    CCOR            reduce using rule 106 (ctes -> CTEI .)
    PTCOMA          reduce using rule 106 (ctes -> CTEI .)
    TO              reduce using rule 106 (ctes -> CTEI .)
    DO              reduce using rule 106 (ctes -> CTEI .)


state 67

    (107) ctes -> CTEF .

    POR             reduce using rule 107 (ctes -> CTEF .)
    DIV             reduce using rule 107 (ctes -> CTEF .)
    MAS             reduce using rule 107 (ctes -> CTEF .)
    MENOS           reduce using rule 107 (ctes -> CTEF .)
    MAYQ            reduce using rule 107 (ctes -> CTEF .)
    MENQ            reduce using rule 107 (ctes -> CTEF .)
    MAYI            reduce using rule 107 (ctes -> CTEF .)
    MENI            reduce using rule 107 (ctes -> CTEF .)
    IGUALIGUAL      reduce using rule 107 (ctes -> CTEF .)
    DIF             reduce using rule 107 (ctes -> CTEF .)
    AND             reduce using rule 107 (ctes -> CTEF .)
    OR              reduce using rule 107 (ctes -> CTEF .)
    ID              reduce using rule 107 (ctes -> CTEF .)
    RETURN          reduce using rule 107 (ctes -> CTEF .)
    READ            reduce using rule 107 (ctes -> CTEF .)
    WRITE           reduce using rule 107 (ctes -> CTEF .)
    IF              reduce using rule 107 (ctes -> CTEF .)
    WHILE           reduce using rule 107 (ctes -> CTEF .)
    FOR             reduce using rule 107 (ctes -> CTEF .)
    APAR            reduce using rule 107 (ctes -> CTEF .)
    CTEI            reduce using rule 107 (ctes -> CTEF .)
    CTEF            reduce using rule 107 (ctes -> CTEF .)
    CLLA            reduce using rule 107 (ctes -> CTEF .)
    CPAR            reduce using rule 107 (ctes -> CTEF .)
    COMA            reduce using rule 107 (ctes -> CTEF .)
    CCOR            reduce using rule 107 (ctes -> CTEF .)
    PTCOMA          reduce using rule 107 (ctes -> CTEF .)
    TO              reduce using rule 107 (ctes -> CTEF .)
    DO              reduce using rule 107 (ctes -> CTEF .)


state 68

    (13) funcspp -> APAR params CPAR . PTCOMA varss ALLA estatutos CLLA funcs

    PTCOMA          shift and go to state 120


state 69

    (32) params -> tipo DOSPNTS . ID ididx paramsp

    ID              shift and go to state 121


state 70

    (5) vars -> tipo DOSPNTS ID varsppp varspp vars .

    FUNCTION        reduce using rule 5 (vars -> tipo DOSPNTS ID varsppp varspp vars .)
    MAIN            reduce using rule 5 (vars -> tipo DOSPNTS ID varsppp varspp vars .)
    ALLA            reduce using rule 5 (vars -> tipo DOSPNTS ID varsppp varspp vars .)


state 71

    (10) varspp -> COMA ID . varsppp varspp
    (7) varsppp -> . ACOR CTEI CCOR
    (8) varsppp -> . empty
    (108) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)

    varsppp                        shift and go to state 122
    empty                          shift and go to state 33

state 72

    (7) varsppp -> ACOR CTEI CCOR .

    PTCOMA          reduce using rule 7 (varsppp -> ACOR CTEI CCOR .)
    COMA            reduce using rule 7 (varsppp -> ACOR CTEI CCOR .)


state 73

    (96) factor -> APAR exp . CPAR

    CPAR            shift and go to state 123


state 74

    (97) factor -> ID . factorp
    (105) ctes -> ID . factorp
    (99) factorp -> .
    (100) factorp -> . APAR exp factorpp CPAR
    (101) factorp -> . ACOR exp CCOR
    (102) factorp -> . empty
    (108) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for POR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DIV resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAS resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENOS resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAYQ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENQ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAYI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DIF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for AND resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for OR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CPAR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CCOR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for COMA resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for READ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for WRITE resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for IF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for FOR resolved using rule 99 (factorp -> .)
  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for CTEI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CTEF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CLLA resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for TO resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DO resolved using rule 99 (factorp -> .)
    POR             reduce using rule 99 (factorp -> .)
    DIV             reduce using rule 99 (factorp -> .)
    MAS             reduce using rule 99 (factorp -> .)
    MENOS           reduce using rule 99 (factorp -> .)
    MAYQ            reduce using rule 99 (factorp -> .)
    MENQ            reduce using rule 99 (factorp -> .)
    MAYI            reduce using rule 99 (factorp -> .)
    MENI            reduce using rule 99 (factorp -> .)
    IGUALIGUAL      reduce using rule 99 (factorp -> .)
    DIF             reduce using rule 99 (factorp -> .)
    AND             reduce using rule 99 (factorp -> .)
    OR              reduce using rule 99 (factorp -> .)
    CPAR            reduce using rule 99 (factorp -> .)
    CCOR            reduce using rule 99 (factorp -> .)
    COMA            reduce using rule 99 (factorp -> .)
    ID              reduce using rule 99 (factorp -> .)
    RETURN          reduce using rule 99 (factorp -> .)
    READ            reduce using rule 99 (factorp -> .)
    WRITE           reduce using rule 99 (factorp -> .)
    IF              reduce using rule 99 (factorp -> .)
    WHILE           reduce using rule 99 (factorp -> .)
    FOR             reduce using rule 99 (factorp -> .)
    CTEI            reduce using rule 99 (factorp -> .)
    CTEF            reduce using rule 99 (factorp -> .)
    CLLA            reduce using rule 99 (factorp -> .)
    PTCOMA          reduce using rule 99 (factorp -> .)
    TO              reduce using rule 99 (factorp -> .)
    DO              reduce using rule 99 (factorp -> .)
    APAR            shift and go to state 124
    ACOR            shift and go to state 125

  ! APAR            [ reduce using rule 99 (factorp -> .) ]
  ! POR             [ reduce using rule 108 (empty -> .) ]
  ! DIV             [ reduce using rule 108 (empty -> .) ]
  ! MAS             [ reduce using rule 108 (empty -> .) ]
  ! MENOS           [ reduce using rule 108 (empty -> .) ]
  ! MAYQ            [ reduce using rule 108 (empty -> .) ]
  ! MENQ            [ reduce using rule 108 (empty -> .) ]
  ! MAYI            [ reduce using rule 108 (empty -> .) ]
  ! MENI            [ reduce using rule 108 (empty -> .) ]
  ! IGUALIGUAL      [ reduce using rule 108 (empty -> .) ]
  ! DIF             [ reduce using rule 108 (empty -> .) ]
  ! AND             [ reduce using rule 108 (empty -> .) ]
  ! OR              [ reduce using rule 108 (empty -> .) ]
  ! CPAR            [ reduce using rule 108 (empty -> .) ]
  ! CCOR            [ reduce using rule 108 (empty -> .) ]
  ! COMA            [ reduce using rule 108 (empty -> .) ]
  ! ID              [ reduce using rule 108 (empty -> .) ]
  ! RETURN          [ reduce using rule 108 (empty -> .) ]
  ! READ            [ reduce using rule 108 (empty -> .) ]
  ! WRITE           [ reduce using rule 108 (empty -> .) ]
  ! IF              [ reduce using rule 108 (empty -> .) ]
  ! WHILE           [ reduce using rule 108 (empty -> .) ]
  ! FOR             [ reduce using rule 108 (empty -> .) ]
  ! APAR            [ reduce using rule 108 (empty -> .) ]
  ! CTEI            [ reduce using rule 108 (empty -> .) ]
  ! CTEF            [ reduce using rule 108 (empty -> .) ]
  ! CLLA            [ reduce using rule 108 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 108 (empty -> .) ]
  ! TO              [ reduce using rule 108 (empty -> .) ]
  ! DO              [ reduce using rule 108 (empty -> .) ]

    factorp                        shift and go to state 89
    empty                          shift and go to state 126

state 75

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA .)


state 76

    (16) estatutos -> asig estatutop .

    CLLA            reduce using rule 16 (estatutos -> asig estatutop .)


state 77

    (25) estatutop -> estatutos .

    CLLA            reduce using rule 25 (estatutop -> estatutos .)


state 78

    (26) estatutop -> empty .

    CLLA            reduce using rule 26 (estatutop -> empty .)


state 79

    (17) estatutos -> llamada estatutop .

    CLLA            reduce using rule 17 (estatutos -> llamada estatutop .)


state 80

    (18) estatutos -> return estatutop .

    CLLA            reduce using rule 18 (estatutos -> return estatutop .)


state 81

    (19) estatutos -> lectura estatutop .

    CLLA            reduce using rule 19 (estatutos -> lectura estatutop .)


state 82

    (20) estatutos -> escritura estatutop .

    CLLA            reduce using rule 20 (estatutos -> escritura estatutop .)


state 83

    (21) estatutos -> cond estatutop .

    CLLA            reduce using rule 21 (estatutos -> cond estatutop .)


state 84

    (22) estatutos -> while estatutop .

    CLLA            reduce using rule 22 (estatutos -> while estatutop .)


state 85

    (23) estatutos -> for estatutop .

    CLLA            reduce using rule 23 (estatutos -> for estatutop .)


state 86

    (24) estatutos -> exp estatutop .

    CLLA            reduce using rule 24 (estatutos -> exp estatutop .)


state 87

    (36) asig -> ID ididx . IGUAL asigpp PTCOMA

    IGUAL           shift and go to state 127


state 88

    (49) llamada -> ID APAR . args CPAR PTCOMA
    (100) factorp -> APAR . exp factorpp CPAR
    (50) args -> . ctes argsp
    (51) args -> . exp argsp
    (52) args -> . STRING argsp
    (53) args -> . CTEC argsp
    (74) exp -> . texp expp
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes

    STRING          shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 128
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67
    APAR            shift and go to state 42

    args                           shift and go to state 129
    exp                            shift and go to state 130
    ctes                           shift and go to state 131
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64

state 89

    (97) factor -> ID factorp .
    (105) ctes -> ID factorp .

  ! reduce/reduce conflict for POR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIV resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for ID resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for RETURN resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for READ resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for WRITE resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for IF resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for WHILE resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for FOR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for APAR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEI resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEF resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for CLLA resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for CCOR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for TO resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for DO resolved using rule 97 (factor -> ID factorp .)
    POR             reduce using rule 97 (factor -> ID factorp .)
    DIV             reduce using rule 97 (factor -> ID factorp .)
    MAS             reduce using rule 97 (factor -> ID factorp .)
    MENOS           reduce using rule 97 (factor -> ID factorp .)
    MAYQ            reduce using rule 97 (factor -> ID factorp .)
    MENQ            reduce using rule 97 (factor -> ID factorp .)
    MAYI            reduce using rule 97 (factor -> ID factorp .)
    MENI            reduce using rule 97 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 97 (factor -> ID factorp .)
    DIF             reduce using rule 97 (factor -> ID factorp .)
    AND             reduce using rule 97 (factor -> ID factorp .)
    OR              reduce using rule 97 (factor -> ID factorp .)
    ID              reduce using rule 97 (factor -> ID factorp .)
    RETURN          reduce using rule 97 (factor -> ID factorp .)
    READ            reduce using rule 97 (factor -> ID factorp .)
    WRITE           reduce using rule 97 (factor -> ID factorp .)
    IF              reduce using rule 97 (factor -> ID factorp .)
    WHILE           reduce using rule 97 (factor -> ID factorp .)
    FOR             reduce using rule 97 (factor -> ID factorp .)
    APAR            reduce using rule 97 (factor -> ID factorp .)
    CTEI            reduce using rule 97 (factor -> ID factorp .)
    CTEF            reduce using rule 97 (factor -> ID factorp .)
    CLLA            reduce using rule 97 (factor -> ID factorp .)
    CPAR            reduce using rule 97 (factor -> ID factorp .)
    CCOR            reduce using rule 97 (factor -> ID factorp .)
    COMA            reduce using rule 97 (factor -> ID factorp .)
    PTCOMA          reduce using rule 97 (factor -> ID factorp .)
    TO              reduce using rule 97 (factor -> ID factorp .)
    DO              reduce using rule 97 (factor -> ID factorp .)

  ! POR             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! ID              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! RETURN          [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! READ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! WRITE           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! IF              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! WHILE           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! FOR             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! APAR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CTEI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CTEF            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CLLA            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CCOR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! COMA            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! PTCOMA          [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! TO              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DO              [ reduce using rule 105 (ctes -> ID factorp .) ]


state 90

    (47) ididx -> ACOR . exp CCOR
    (101) factorp -> ACOR . exp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 134
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 91

    (48) ididx -> empty .
    (102) factorp -> empty .

    IGUAL           reduce using rule 48 (ididx -> empty .)
    POR             reduce using rule 102 (factorp -> empty .)
    DIV             reduce using rule 102 (factorp -> empty .)
    MAS             reduce using rule 102 (factorp -> empty .)
    MENOS           reduce using rule 102 (factorp -> empty .)
    MAYQ            reduce using rule 102 (factorp -> empty .)
    MENQ            reduce using rule 102 (factorp -> empty .)
    MAYI            reduce using rule 102 (factorp -> empty .)
    MENI            reduce using rule 102 (factorp -> empty .)
    IGUALIGUAL      reduce using rule 102 (factorp -> empty .)
    DIF             reduce using rule 102 (factorp -> empty .)
    AND             reduce using rule 102 (factorp -> empty .)
    OR              reduce using rule 102 (factorp -> empty .)
    ID              reduce using rule 102 (factorp -> empty .)
    RETURN          reduce using rule 102 (factorp -> empty .)
    READ            reduce using rule 102 (factorp -> empty .)
    WRITE           reduce using rule 102 (factorp -> empty .)
    IF              reduce using rule 102 (factorp -> empty .)
    WHILE           reduce using rule 102 (factorp -> empty .)
    FOR             reduce using rule 102 (factorp -> empty .)
    APAR            reduce using rule 102 (factorp -> empty .)
    CTEI            reduce using rule 102 (factorp -> empty .)
    CTEF            reduce using rule 102 (factorp -> empty .)
    CLLA            reduce using rule 102 (factorp -> empty .)


state 92

    (56) return -> RETURN APAR . asigpp CPAR PTCOMA
    (43) asigpp -> . exp
    (44) asigpp -> . CTEC
    (45) asigpp -> . STRING
    (46) asigpp -> . ACOR asigp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 137
    STRING          shift and go to state 138
    ACOR            shift and go to state 139
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    asigpp                         shift and go to state 135
    exp                            shift and go to state 136
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 93

    (57) lectura -> READ APAR . ID ididx lecturapp CPAR PTCOMA

    ID              shift and go to state 140


state 94

    (60) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (61) escriturap -> . STRING
    (62) escriturap -> . exp
    (63) escriturap -> . CTEC
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    STRING          shift and go to state 142
    CTEC            shift and go to state 144
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    escriturap                     shift and go to state 141
    exp                            shift and go to state 143
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 95

    (66) cond -> IF APAR . condp CPAR THEN ALLA estatutos CLLA condpp
    (67) condp -> . exp
    (68) condp -> . TRUE
    (69) condp -> . FALSE
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    TRUE            shift and go to state 147
    FALSE           shift and go to state 148
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    condp                          shift and go to state 145
    exp                            shift and go to state 146
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 96

    (72) while -> WHILE APAR . condp CPAR DO ALLA estatutos CLLA
    (67) condp -> . exp
    (68) condp -> . TRUE
    (69) condp -> . FALSE
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    TRUE            shift and go to state 147
    FALSE           shift and go to state 148
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    condp                          shift and go to state 149
    exp                            shift and go to state 146
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 97

    (73) for -> FOR ID . ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (47) ididx -> . ACOR exp CCOR
    (48) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 151
    IGUAL           reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 150
    empty                          shift and go to state 152

state 98

    (74) exp -> texp expp .

    ID              reduce using rule 74 (exp -> texp expp .)
    RETURN          reduce using rule 74 (exp -> texp expp .)
    READ            reduce using rule 74 (exp -> texp expp .)
    WRITE           reduce using rule 74 (exp -> texp expp .)
    IF              reduce using rule 74 (exp -> texp expp .)
    WHILE           reduce using rule 74 (exp -> texp expp .)
    FOR             reduce using rule 74 (exp -> texp expp .)
    APAR            reduce using rule 74 (exp -> texp expp .)
    CTEI            reduce using rule 74 (exp -> texp expp .)
    CTEF            reduce using rule 74 (exp -> texp expp .)
    CLLA            reduce using rule 74 (exp -> texp expp .)
    CPAR            reduce using rule 74 (exp -> texp expp .)
    COMA            reduce using rule 74 (exp -> texp expp .)
    CCOR            reduce using rule 74 (exp -> texp expp .)
    PTCOMA          reduce using rule 74 (exp -> texp expp .)
    TO              reduce using rule 74 (exp -> texp expp .)
    DO              reduce using rule 74 (exp -> texp expp .)


state 99

    (75) expp -> OR . exp
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 153
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 100

    (76) expp -> empty .

    ID              reduce using rule 76 (expp -> empty .)
    RETURN          reduce using rule 76 (expp -> empty .)
    READ            reduce using rule 76 (expp -> empty .)
    WRITE           reduce using rule 76 (expp -> empty .)
    IF              reduce using rule 76 (expp -> empty .)
    WHILE           reduce using rule 76 (expp -> empty .)
    FOR             reduce using rule 76 (expp -> empty .)
    APAR            reduce using rule 76 (expp -> empty .)
    CTEI            reduce using rule 76 (expp -> empty .)
    CTEF            reduce using rule 76 (expp -> empty .)
    CLLA            reduce using rule 76 (expp -> empty .)
    CPAR            reduce using rule 76 (expp -> empty .)
    COMA            reduce using rule 76 (expp -> empty .)
    CCOR            reduce using rule 76 (expp -> empty .)
    PTCOMA          reduce using rule 76 (expp -> empty .)
    TO              reduce using rule 76 (expp -> empty .)
    DO              reduce using rule 76 (expp -> empty .)


state 101

    (77) texp -> gexp texpp .

    OR              reduce using rule 77 (texp -> gexp texpp .)
    ID              reduce using rule 77 (texp -> gexp texpp .)
    RETURN          reduce using rule 77 (texp -> gexp texpp .)
    READ            reduce using rule 77 (texp -> gexp texpp .)
    WRITE           reduce using rule 77 (texp -> gexp texpp .)
    IF              reduce using rule 77 (texp -> gexp texpp .)
    WHILE           reduce using rule 77 (texp -> gexp texpp .)
    FOR             reduce using rule 77 (texp -> gexp texpp .)
    APAR            reduce using rule 77 (texp -> gexp texpp .)
    CTEI            reduce using rule 77 (texp -> gexp texpp .)
    CTEF            reduce using rule 77 (texp -> gexp texpp .)
    CLLA            reduce using rule 77 (texp -> gexp texpp .)
    CPAR            reduce using rule 77 (texp -> gexp texpp .)
    COMA            reduce using rule 77 (texp -> gexp texpp .)
    CCOR            reduce using rule 77 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 77 (texp -> gexp texpp .)
    TO              reduce using rule 77 (texp -> gexp texpp .)
    DO              reduce using rule 77 (texp -> gexp texpp .)


state 102

    (78) texpp -> AND . texp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    texp                           shift and go to state 154
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 103

    (79) texpp -> empty .

    OR              reduce using rule 79 (texpp -> empty .)
    ID              reduce using rule 79 (texpp -> empty .)
    RETURN          reduce using rule 79 (texpp -> empty .)
    READ            reduce using rule 79 (texpp -> empty .)
    WRITE           reduce using rule 79 (texpp -> empty .)
    IF              reduce using rule 79 (texpp -> empty .)
    WHILE           reduce using rule 79 (texpp -> empty .)
    FOR             reduce using rule 79 (texpp -> empty .)
    APAR            reduce using rule 79 (texpp -> empty .)
    CTEI            reduce using rule 79 (texpp -> empty .)
    CTEF            reduce using rule 79 (texpp -> empty .)
    CLLA            reduce using rule 79 (texpp -> empty .)
    CPAR            reduce using rule 79 (texpp -> empty .)
    COMA            reduce using rule 79 (texpp -> empty .)
    CCOR            reduce using rule 79 (texpp -> empty .)
    PTCOMA          reduce using rule 79 (texpp -> empty .)
    TO              reduce using rule 79 (texpp -> empty .)
    DO              reduce using rule 79 (texpp -> empty .)


state 104

    (80) gexp -> mexp gexpp .

    AND             reduce using rule 80 (gexp -> mexp gexpp .)
    OR              reduce using rule 80 (gexp -> mexp gexpp .)
    ID              reduce using rule 80 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 80 (gexp -> mexp gexpp .)
    READ            reduce using rule 80 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 80 (gexp -> mexp gexpp .)
    IF              reduce using rule 80 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 80 (gexp -> mexp gexpp .)
    FOR             reduce using rule 80 (gexp -> mexp gexpp .)
    APAR            reduce using rule 80 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 80 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 80 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 80 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 80 (gexp -> mexp gexpp .)
    COMA            reduce using rule 80 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 80 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 80 (gexp -> mexp gexpp .)
    TO              reduce using rule 80 (gexp -> mexp gexpp .)
    DO              reduce using rule 80 (gexp -> mexp gexpp .)


state 105

    (81) gexpp -> MAYQ . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 155
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 106

    (82) gexpp -> MENQ . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 156
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 107

    (83) gexpp -> MAYI . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 157
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 108

    (84) gexpp -> MENI . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 158
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 109

    (85) gexpp -> IGUALIGUAL . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 159
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 110

    (86) gexpp -> DIF . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 160
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 111

    (87) gexpp -> empty .

    AND             reduce using rule 87 (gexpp -> empty .)
    OR              reduce using rule 87 (gexpp -> empty .)
    ID              reduce using rule 87 (gexpp -> empty .)
    RETURN          reduce using rule 87 (gexpp -> empty .)
    READ            reduce using rule 87 (gexpp -> empty .)
    WRITE           reduce using rule 87 (gexpp -> empty .)
    IF              reduce using rule 87 (gexpp -> empty .)
    WHILE           reduce using rule 87 (gexpp -> empty .)
    FOR             reduce using rule 87 (gexpp -> empty .)
    APAR            reduce using rule 87 (gexpp -> empty .)
    CTEI            reduce using rule 87 (gexpp -> empty .)
    CTEF            reduce using rule 87 (gexpp -> empty .)
    CLLA            reduce using rule 87 (gexpp -> empty .)
    CPAR            reduce using rule 87 (gexpp -> empty .)
    COMA            reduce using rule 87 (gexpp -> empty .)
    CCOR            reduce using rule 87 (gexpp -> empty .)
    PTCOMA          reduce using rule 87 (gexpp -> empty .)
    TO              reduce using rule 87 (gexpp -> empty .)
    DO              reduce using rule 87 (gexpp -> empty .)


state 112

    (88) mexp -> termino mexpp .

    MAYQ            reduce using rule 88 (mexp -> termino mexpp .)
    MENQ            reduce using rule 88 (mexp -> termino mexpp .)
    MAYI            reduce using rule 88 (mexp -> termino mexpp .)
    MENI            reduce using rule 88 (mexp -> termino mexpp .)
    IGUALIGUAL      reduce using rule 88 (mexp -> termino mexpp .)
    DIF             reduce using rule 88 (mexp -> termino mexpp .)
    AND             reduce using rule 88 (mexp -> termino mexpp .)
    OR              reduce using rule 88 (mexp -> termino mexpp .)
    ID              reduce using rule 88 (mexp -> termino mexpp .)
    RETURN          reduce using rule 88 (mexp -> termino mexpp .)
    READ            reduce using rule 88 (mexp -> termino mexpp .)
    WRITE           reduce using rule 88 (mexp -> termino mexpp .)
    IF              reduce using rule 88 (mexp -> termino mexpp .)
    WHILE           reduce using rule 88 (mexp -> termino mexpp .)
    FOR             reduce using rule 88 (mexp -> termino mexpp .)
    APAR            reduce using rule 88 (mexp -> termino mexpp .)
    CTEI            reduce using rule 88 (mexp -> termino mexpp .)
    CTEF            reduce using rule 88 (mexp -> termino mexpp .)
    CLLA            reduce using rule 88 (mexp -> termino mexpp .)
    CPAR            reduce using rule 88 (mexp -> termino mexpp .)
    COMA            reduce using rule 88 (mexp -> termino mexpp .)
    CCOR            reduce using rule 88 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 88 (mexp -> termino mexpp .)
    TO              reduce using rule 88 (mexp -> termino mexpp .)
    DO              reduce using rule 88 (mexp -> termino mexpp .)


state 113

    (89) mexpp -> MAS . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 161
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 114

    (90) mexpp -> MENOS . mexp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    mexp                           shift and go to state 162
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 115

    (91) mexpp -> empty .

    MAYQ            reduce using rule 91 (mexpp -> empty .)
    MENQ            reduce using rule 91 (mexpp -> empty .)
    MAYI            reduce using rule 91 (mexpp -> empty .)
    MENI            reduce using rule 91 (mexpp -> empty .)
    IGUALIGUAL      reduce using rule 91 (mexpp -> empty .)
    DIF             reduce using rule 91 (mexpp -> empty .)
    AND             reduce using rule 91 (mexpp -> empty .)
    OR              reduce using rule 91 (mexpp -> empty .)
    ID              reduce using rule 91 (mexpp -> empty .)
    RETURN          reduce using rule 91 (mexpp -> empty .)
    READ            reduce using rule 91 (mexpp -> empty .)
    WRITE           reduce using rule 91 (mexpp -> empty .)
    IF              reduce using rule 91 (mexpp -> empty .)
    WHILE           reduce using rule 91 (mexpp -> empty .)
    FOR             reduce using rule 91 (mexpp -> empty .)
    APAR            reduce using rule 91 (mexpp -> empty .)
    CTEI            reduce using rule 91 (mexpp -> empty .)
    CTEF            reduce using rule 91 (mexpp -> empty .)
    CLLA            reduce using rule 91 (mexpp -> empty .)
    CPAR            reduce using rule 91 (mexpp -> empty .)
    COMA            reduce using rule 91 (mexpp -> empty .)
    CCOR            reduce using rule 91 (mexpp -> empty .)
    PTCOMA          reduce using rule 91 (mexpp -> empty .)
    TO              reduce using rule 91 (mexpp -> empty .)
    DO              reduce using rule 91 (mexpp -> empty .)


state 116

    (92) termino -> factor terminop .

    MAS             reduce using rule 92 (termino -> factor terminop .)
    MENOS           reduce using rule 92 (termino -> factor terminop .)
    MAYQ            reduce using rule 92 (termino -> factor terminop .)
    MENQ            reduce using rule 92 (termino -> factor terminop .)
    MAYI            reduce using rule 92 (termino -> factor terminop .)
    MENI            reduce using rule 92 (termino -> factor terminop .)
    IGUALIGUAL      reduce using rule 92 (termino -> factor terminop .)
    DIF             reduce using rule 92 (termino -> factor terminop .)
    AND             reduce using rule 92 (termino -> factor terminop .)
    OR              reduce using rule 92 (termino -> factor terminop .)
    ID              reduce using rule 92 (termino -> factor terminop .)
    RETURN          reduce using rule 92 (termino -> factor terminop .)
    READ            reduce using rule 92 (termino -> factor terminop .)
    WRITE           reduce using rule 92 (termino -> factor terminop .)
    IF              reduce using rule 92 (termino -> factor terminop .)
    WHILE           reduce using rule 92 (termino -> factor terminop .)
    FOR             reduce using rule 92 (termino -> factor terminop .)
    APAR            reduce using rule 92 (termino -> factor terminop .)
    CTEI            reduce using rule 92 (termino -> factor terminop .)
    CTEF            reduce using rule 92 (termino -> factor terminop .)
    CLLA            reduce using rule 92 (termino -> factor terminop .)
    CPAR            reduce using rule 92 (termino -> factor terminop .)
    COMA            reduce using rule 92 (termino -> factor terminop .)
    CCOR            reduce using rule 92 (termino -> factor terminop .)
    PTCOMA          reduce using rule 92 (termino -> factor terminop .)
    TO              reduce using rule 92 (termino -> factor terminop .)
    DO              reduce using rule 92 (termino -> factor terminop .)


state 117

    (93) terminop -> POR . termino
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    termino                        shift and go to state 163
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 118

    (94) terminop -> DIV . termino
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    termino                        shift and go to state 164
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 119

    (95) terminop -> empty .

    MAS             reduce using rule 95 (terminop -> empty .)
    MENOS           reduce using rule 95 (terminop -> empty .)
    MAYQ            reduce using rule 95 (terminop -> empty .)
    MENQ            reduce using rule 95 (terminop -> empty .)
    MAYI            reduce using rule 95 (terminop -> empty .)
    MENI            reduce using rule 95 (terminop -> empty .)
    IGUALIGUAL      reduce using rule 95 (terminop -> empty .)
    DIF             reduce using rule 95 (terminop -> empty .)
    AND             reduce using rule 95 (terminop -> empty .)
    OR              reduce using rule 95 (terminop -> empty .)
    ID              reduce using rule 95 (terminop -> empty .)
    RETURN          reduce using rule 95 (terminop -> empty .)
    READ            reduce using rule 95 (terminop -> empty .)
    WRITE           reduce using rule 95 (terminop -> empty .)
    IF              reduce using rule 95 (terminop -> empty .)
    WHILE           reduce using rule 95 (terminop -> empty .)
    FOR             reduce using rule 95 (terminop -> empty .)
    APAR            reduce using rule 95 (terminop -> empty .)
    CTEI            reduce using rule 95 (terminop -> empty .)
    CTEF            reduce using rule 95 (terminop -> empty .)
    CLLA            reduce using rule 95 (terminop -> empty .)
    CPAR            reduce using rule 95 (terminop -> empty .)
    COMA            reduce using rule 95 (terminop -> empty .)
    CCOR            reduce using rule 95 (terminop -> empty .)
    PTCOMA          reduce using rule 95 (terminop -> empty .)
    TO              reduce using rule 95 (terminop -> empty .)
    DO              reduce using rule 95 (terminop -> empty .)


state 120

    (13) funcspp -> APAR params CPAR PTCOMA . varss ALLA estatutos CLLA funcs
    (3) varss -> . VARS vars
    (4) varss -> . empty
    (108) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 108 (empty -> .)

    varss                          shift and go to state 165
    empty                          shift and go to state 7

state 121

    (32) params -> tipo DOSPNTS ID . ididx paramsp
    (47) ididx -> . ACOR exp CCOR
    (48) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 151
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 166
    empty                          shift and go to state 152

state 122

    (10) varspp -> COMA ID varsppp . varspp
    (9) varspp -> . PTCOMA
    (10) varspp -> . COMA ID varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 167

state 123

    (96) factor -> APAR exp CPAR .

    POR             reduce using rule 96 (factor -> APAR exp CPAR .)
    DIV             reduce using rule 96 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 96 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 96 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 96 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 96 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 96 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 96 (factor -> APAR exp CPAR .)
    IGUALIGUAL      reduce using rule 96 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 96 (factor -> APAR exp CPAR .)
    AND             reduce using rule 96 (factor -> APAR exp CPAR .)
    OR              reduce using rule 96 (factor -> APAR exp CPAR .)
    ID              reduce using rule 96 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 96 (factor -> APAR exp CPAR .)
    READ            reduce using rule 96 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 96 (factor -> APAR exp CPAR .)
    IF              reduce using rule 96 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 96 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 96 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 96 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 96 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 96 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 96 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 96 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 96 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 96 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 96 (factor -> APAR exp CPAR .)
    TO              reduce using rule 96 (factor -> APAR exp CPAR .)
    DO              reduce using rule 96 (factor -> APAR exp CPAR .)


state 124

    (100) factorp -> APAR . exp factorpp CPAR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 168
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 125

    (101) factorp -> ACOR . exp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 169
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 126

    (102) factorp -> empty .

    POR             reduce using rule 102 (factorp -> empty .)
    DIV             reduce using rule 102 (factorp -> empty .)
    MAS             reduce using rule 102 (factorp -> empty .)
    MENOS           reduce using rule 102 (factorp -> empty .)
    MAYQ            reduce using rule 102 (factorp -> empty .)
    MENQ            reduce using rule 102 (factorp -> empty .)
    MAYI            reduce using rule 102 (factorp -> empty .)
    MENI            reduce using rule 102 (factorp -> empty .)
    IGUALIGUAL      reduce using rule 102 (factorp -> empty .)
    DIF             reduce using rule 102 (factorp -> empty .)
    AND             reduce using rule 102 (factorp -> empty .)
    OR              reduce using rule 102 (factorp -> empty .)
    CPAR            reduce using rule 102 (factorp -> empty .)
    CCOR            reduce using rule 102 (factorp -> empty .)
    COMA            reduce using rule 102 (factorp -> empty .)
    ID              reduce using rule 102 (factorp -> empty .)
    RETURN          reduce using rule 102 (factorp -> empty .)
    READ            reduce using rule 102 (factorp -> empty .)
    WRITE           reduce using rule 102 (factorp -> empty .)
    IF              reduce using rule 102 (factorp -> empty .)
    WHILE           reduce using rule 102 (factorp -> empty .)
    FOR             reduce using rule 102 (factorp -> empty .)
    APAR            reduce using rule 102 (factorp -> empty .)
    CTEI            reduce using rule 102 (factorp -> empty .)
    CTEF            reduce using rule 102 (factorp -> empty .)
    CLLA            reduce using rule 102 (factorp -> empty .)
    PTCOMA          reduce using rule 102 (factorp -> empty .)
    TO              reduce using rule 102 (factorp -> empty .)
    DO              reduce using rule 102 (factorp -> empty .)


state 127

    (36) asig -> ID ididx IGUAL . asigpp PTCOMA
    (43) asigpp -> . exp
    (44) asigpp -> . CTEC
    (45) asigpp -> . STRING
    (46) asigpp -> . ACOR asigp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 137
    STRING          shift and go to state 138
    ACOR            shift and go to state 139
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    asigpp                         shift and go to state 170
    exp                            shift and go to state 136
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 128

    (105) ctes -> ID . factorp
    (97) factor -> ID . factorp
    (99) factorp -> .
    (100) factorp -> . APAR exp factorpp CPAR
    (101) factorp -> . ACOR exp CCOR
    (102) factorp -> . empty
    (108) empty -> .

  ! reduce/reduce conflict for COMA resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for CPAR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for POR resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DIV resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAS resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENOS resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAYQ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENQ resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MAYI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for MENI resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for DIF resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for AND resolved using rule 99 (factorp -> .)
  ! reduce/reduce conflict for OR resolved using rule 99 (factorp -> .)
    COMA            reduce using rule 99 (factorp -> .)
    CPAR            reduce using rule 99 (factorp -> .)
    POR             reduce using rule 99 (factorp -> .)
    DIV             reduce using rule 99 (factorp -> .)
    MAS             reduce using rule 99 (factorp -> .)
    MENOS           reduce using rule 99 (factorp -> .)
    MAYQ            reduce using rule 99 (factorp -> .)
    MENQ            reduce using rule 99 (factorp -> .)
    MAYI            reduce using rule 99 (factorp -> .)
    MENI            reduce using rule 99 (factorp -> .)
    IGUALIGUAL      reduce using rule 99 (factorp -> .)
    DIF             reduce using rule 99 (factorp -> .)
    AND             reduce using rule 99 (factorp -> .)
    OR              reduce using rule 99 (factorp -> .)
    APAR            shift and go to state 124
    ACOR            shift and go to state 125

  ! COMA            [ reduce using rule 108 (empty -> .) ]
  ! CPAR            [ reduce using rule 108 (empty -> .) ]
  ! POR             [ reduce using rule 108 (empty -> .) ]
  ! DIV             [ reduce using rule 108 (empty -> .) ]
  ! MAS             [ reduce using rule 108 (empty -> .) ]
  ! MENOS           [ reduce using rule 108 (empty -> .) ]
  ! MAYQ            [ reduce using rule 108 (empty -> .) ]
  ! MENQ            [ reduce using rule 108 (empty -> .) ]
  ! MAYI            [ reduce using rule 108 (empty -> .) ]
  ! MENI            [ reduce using rule 108 (empty -> .) ]
  ! IGUALIGUAL      [ reduce using rule 108 (empty -> .) ]
  ! DIF             [ reduce using rule 108 (empty -> .) ]
  ! AND             [ reduce using rule 108 (empty -> .) ]
  ! OR              [ reduce using rule 108 (empty -> .) ]

    factorp                        shift and go to state 171
    empty                          shift and go to state 126

state 129

    (49) llamada -> ID APAR args . CPAR PTCOMA

    CPAR            shift and go to state 172


state 130

    (100) factorp -> APAR exp . factorpp CPAR
    (51) args -> exp . argsp
    (103) factorpp -> . COMA exp factorpp
    (104) factorpp -> . empty
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 175
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 173
    argsp                          shift and go to state 174
    empty                          shift and go to state 176

state 131

    (50) args -> ctes . argsp
    (98) factor -> ctes .
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (108) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for CPAR resolved using rule 98 (factor -> ctes .)
    POR             reduce using rule 98 (factor -> ctes .)
    DIV             reduce using rule 98 (factor -> ctes .)
    MAS             reduce using rule 98 (factor -> ctes .)
    MENOS           reduce using rule 98 (factor -> ctes .)
    MAYQ            reduce using rule 98 (factor -> ctes .)
    MENQ            reduce using rule 98 (factor -> ctes .)
    MAYI            reduce using rule 98 (factor -> ctes .)
    MENI            reduce using rule 98 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 98 (factor -> ctes .)
    DIF             reduce using rule 98 (factor -> ctes .)
    AND             reduce using rule 98 (factor -> ctes .)
    OR              reduce using rule 98 (factor -> ctes .)
    CPAR            reduce using rule 98 (factor -> ctes .)
    COMA            shift and go to state 178

  ! COMA            [ reduce using rule 98 (factor -> ctes .) ]
  ! CPAR            [ reduce using rule 108 (empty -> .) ]

    argsp                          shift and go to state 177
    empty                          shift and go to state 179

state 132

    (52) args -> STRING . argsp
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 180
    empty                          shift and go to state 179

state 133

    (53) args -> CTEC . argsp
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 181
    empty                          shift and go to state 179

state 134

    (47) ididx -> ACOR exp . CCOR
    (101) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 182


state 135

    (56) return -> RETURN APAR asigpp . CPAR PTCOMA

    CPAR            shift and go to state 183


state 136

    (43) asigpp -> exp .

    CPAR            reduce using rule 43 (asigpp -> exp .)
    PTCOMA          reduce using rule 43 (asigpp -> exp .)


state 137

    (44) asigpp -> CTEC .

    CPAR            reduce using rule 44 (asigpp -> CTEC .)
    PTCOMA          reduce using rule 44 (asigpp -> CTEC .)


state 138

    (45) asigpp -> STRING .

    CPAR            reduce using rule 45 (asigpp -> STRING .)
    PTCOMA          reduce using rule 45 (asigpp -> STRING .)


state 139

    (46) asigpp -> ACOR . asigp CCOR
    (37) asigp -> . exp asigppp
    (38) asigp -> . CTEC asigppp
    (39) asigp -> . STRING asigppp
    (40) asigp -> . empty
    (74) exp -> . texp expp
    (108) empty -> .
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 186
    STRING          shift and go to state 187
    CCOR            reduce using rule 108 (empty -> .)
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    asigp                          shift and go to state 184
    exp                            shift and go to state 185
    empty                          shift and go to state 188
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 140

    (57) lectura -> READ APAR ID . ididx lecturapp CPAR PTCOMA
    (47) ididx -> . ACOR exp CCOR
    (48) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 151
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 189
    empty                          shift and go to state 152

state 141

    (60) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (64) escriturapp -> . COMA escriturap
    (65) escriturapp -> . empty
    (108) empty -> .

    COMA            shift and go to state 191
    CPAR            reduce using rule 108 (empty -> .)

    escriturapp                    shift and go to state 190
    empty                          shift and go to state 192

state 142

    (61) escriturap -> STRING .

    COMA            reduce using rule 61 (escriturap -> STRING .)
    CPAR            reduce using rule 61 (escriturap -> STRING .)


state 143

    (62) escriturap -> exp .

    COMA            reduce using rule 62 (escriturap -> exp .)
    CPAR            reduce using rule 62 (escriturap -> exp .)


state 144

    (63) escriturap -> CTEC .

    COMA            reduce using rule 63 (escriturap -> CTEC .)
    CPAR            reduce using rule 63 (escriturap -> CTEC .)


state 145

    (66) cond -> IF APAR condp . CPAR THEN ALLA estatutos CLLA condpp

    CPAR            shift and go to state 193


state 146

    (67) condp -> exp .

    CPAR            reduce using rule 67 (condp -> exp .)


state 147

    (68) condp -> TRUE .

    CPAR            reduce using rule 68 (condp -> TRUE .)


state 148

    (69) condp -> FALSE .

    CPAR            reduce using rule 69 (condp -> FALSE .)


state 149

    (72) while -> WHILE APAR condp . CPAR DO ALLA estatutos CLLA

    CPAR            shift and go to state 194


state 150

    (73) for -> FOR ID ididx . IGUAL exp TO exp DO ALLA estatutos CLLA

    IGUAL           shift and go to state 195


state 151

    (47) ididx -> ACOR . exp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 196
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 152

    (48) ididx -> empty .

    IGUAL           reduce using rule 48 (ididx -> empty .)
    COMA            reduce using rule 48 (ididx -> empty .)
    CPAR            reduce using rule 48 (ididx -> empty .)


state 153

    (75) expp -> OR exp .

    ID              reduce using rule 75 (expp -> OR exp .)
    RETURN          reduce using rule 75 (expp -> OR exp .)
    READ            reduce using rule 75 (expp -> OR exp .)
    WRITE           reduce using rule 75 (expp -> OR exp .)
    IF              reduce using rule 75 (expp -> OR exp .)
    WHILE           reduce using rule 75 (expp -> OR exp .)
    FOR             reduce using rule 75 (expp -> OR exp .)
    APAR            reduce using rule 75 (expp -> OR exp .)
    CTEI            reduce using rule 75 (expp -> OR exp .)
    CTEF            reduce using rule 75 (expp -> OR exp .)
    CLLA            reduce using rule 75 (expp -> OR exp .)
    CPAR            reduce using rule 75 (expp -> OR exp .)
    COMA            reduce using rule 75 (expp -> OR exp .)
    CCOR            reduce using rule 75 (expp -> OR exp .)
    PTCOMA          reduce using rule 75 (expp -> OR exp .)
    TO              reduce using rule 75 (expp -> OR exp .)
    DO              reduce using rule 75 (expp -> OR exp .)


state 154

    (78) texpp -> AND texp .

    OR              reduce using rule 78 (texpp -> AND texp .)
    ID              reduce using rule 78 (texpp -> AND texp .)
    RETURN          reduce using rule 78 (texpp -> AND texp .)
    READ            reduce using rule 78 (texpp -> AND texp .)
    WRITE           reduce using rule 78 (texpp -> AND texp .)
    IF              reduce using rule 78 (texpp -> AND texp .)
    WHILE           reduce using rule 78 (texpp -> AND texp .)
    FOR             reduce using rule 78 (texpp -> AND texp .)
    APAR            reduce using rule 78 (texpp -> AND texp .)
    CTEI            reduce using rule 78 (texpp -> AND texp .)
    CTEF            reduce using rule 78 (texpp -> AND texp .)
    CLLA            reduce using rule 78 (texpp -> AND texp .)
    CPAR            reduce using rule 78 (texpp -> AND texp .)
    COMA            reduce using rule 78 (texpp -> AND texp .)
    CCOR            reduce using rule 78 (texpp -> AND texp .)
    PTCOMA          reduce using rule 78 (texpp -> AND texp .)
    TO              reduce using rule 78 (texpp -> AND texp .)
    DO              reduce using rule 78 (texpp -> AND texp .)


state 155

    (81) gexpp -> MAYQ mexp .

    AND             reduce using rule 81 (gexpp -> MAYQ mexp .)
    OR              reduce using rule 81 (gexpp -> MAYQ mexp .)
    ID              reduce using rule 81 (gexpp -> MAYQ mexp .)
    RETURN          reduce using rule 81 (gexpp -> MAYQ mexp .)
    READ            reduce using rule 81 (gexpp -> MAYQ mexp .)
    WRITE           reduce using rule 81 (gexpp -> MAYQ mexp .)
    IF              reduce using rule 81 (gexpp -> MAYQ mexp .)
    WHILE           reduce using rule 81 (gexpp -> MAYQ mexp .)
    FOR             reduce using rule 81 (gexpp -> MAYQ mexp .)
    APAR            reduce using rule 81 (gexpp -> MAYQ mexp .)
    CTEI            reduce using rule 81 (gexpp -> MAYQ mexp .)
    CTEF            reduce using rule 81 (gexpp -> MAYQ mexp .)
    CLLA            reduce using rule 81 (gexpp -> MAYQ mexp .)
    CPAR            reduce using rule 81 (gexpp -> MAYQ mexp .)
    COMA            reduce using rule 81 (gexpp -> MAYQ mexp .)
    CCOR            reduce using rule 81 (gexpp -> MAYQ mexp .)
    PTCOMA          reduce using rule 81 (gexpp -> MAYQ mexp .)
    TO              reduce using rule 81 (gexpp -> MAYQ mexp .)
    DO              reduce using rule 81 (gexpp -> MAYQ mexp .)


state 156

    (82) gexpp -> MENQ mexp .

    AND             reduce using rule 82 (gexpp -> MENQ mexp .)
    OR              reduce using rule 82 (gexpp -> MENQ mexp .)
    ID              reduce using rule 82 (gexpp -> MENQ mexp .)
    RETURN          reduce using rule 82 (gexpp -> MENQ mexp .)
    READ            reduce using rule 82 (gexpp -> MENQ mexp .)
    WRITE           reduce using rule 82 (gexpp -> MENQ mexp .)
    IF              reduce using rule 82 (gexpp -> MENQ mexp .)
    WHILE           reduce using rule 82 (gexpp -> MENQ mexp .)
    FOR             reduce using rule 82 (gexpp -> MENQ mexp .)
    APAR            reduce using rule 82 (gexpp -> MENQ mexp .)
    CTEI            reduce using rule 82 (gexpp -> MENQ mexp .)
    CTEF            reduce using rule 82 (gexpp -> MENQ mexp .)
    CLLA            reduce using rule 82 (gexpp -> MENQ mexp .)
    CPAR            reduce using rule 82 (gexpp -> MENQ mexp .)
    COMA            reduce using rule 82 (gexpp -> MENQ mexp .)
    CCOR            reduce using rule 82 (gexpp -> MENQ mexp .)
    PTCOMA          reduce using rule 82 (gexpp -> MENQ mexp .)
    TO              reduce using rule 82 (gexpp -> MENQ mexp .)
    DO              reduce using rule 82 (gexpp -> MENQ mexp .)


state 157

    (83) gexpp -> MAYI mexp .

    AND             reduce using rule 83 (gexpp -> MAYI mexp .)
    OR              reduce using rule 83 (gexpp -> MAYI mexp .)
    ID              reduce using rule 83 (gexpp -> MAYI mexp .)
    RETURN          reduce using rule 83 (gexpp -> MAYI mexp .)
    READ            reduce using rule 83 (gexpp -> MAYI mexp .)
    WRITE           reduce using rule 83 (gexpp -> MAYI mexp .)
    IF              reduce using rule 83 (gexpp -> MAYI mexp .)
    WHILE           reduce using rule 83 (gexpp -> MAYI mexp .)
    FOR             reduce using rule 83 (gexpp -> MAYI mexp .)
    APAR            reduce using rule 83 (gexpp -> MAYI mexp .)
    CTEI            reduce using rule 83 (gexpp -> MAYI mexp .)
    CTEF            reduce using rule 83 (gexpp -> MAYI mexp .)
    CLLA            reduce using rule 83 (gexpp -> MAYI mexp .)
    CPAR            reduce using rule 83 (gexpp -> MAYI mexp .)
    COMA            reduce using rule 83 (gexpp -> MAYI mexp .)
    CCOR            reduce using rule 83 (gexpp -> MAYI mexp .)
    PTCOMA          reduce using rule 83 (gexpp -> MAYI mexp .)
    TO              reduce using rule 83 (gexpp -> MAYI mexp .)
    DO              reduce using rule 83 (gexpp -> MAYI mexp .)


state 158

    (84) gexpp -> MENI mexp .

    AND             reduce using rule 84 (gexpp -> MENI mexp .)
    OR              reduce using rule 84 (gexpp -> MENI mexp .)
    ID              reduce using rule 84 (gexpp -> MENI mexp .)
    RETURN          reduce using rule 84 (gexpp -> MENI mexp .)
    READ            reduce using rule 84 (gexpp -> MENI mexp .)
    WRITE           reduce using rule 84 (gexpp -> MENI mexp .)
    IF              reduce using rule 84 (gexpp -> MENI mexp .)
    WHILE           reduce using rule 84 (gexpp -> MENI mexp .)
    FOR             reduce using rule 84 (gexpp -> MENI mexp .)
    APAR            reduce using rule 84 (gexpp -> MENI mexp .)
    CTEI            reduce using rule 84 (gexpp -> MENI mexp .)
    CTEF            reduce using rule 84 (gexpp -> MENI mexp .)
    CLLA            reduce using rule 84 (gexpp -> MENI mexp .)
    CPAR            reduce using rule 84 (gexpp -> MENI mexp .)
    COMA            reduce using rule 84 (gexpp -> MENI mexp .)
    CCOR            reduce using rule 84 (gexpp -> MENI mexp .)
    PTCOMA          reduce using rule 84 (gexpp -> MENI mexp .)
    TO              reduce using rule 84 (gexpp -> MENI mexp .)
    DO              reduce using rule 84 (gexpp -> MENI mexp .)


state 159

    (85) gexpp -> IGUALIGUAL mexp .

    AND             reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    OR              reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    ID              reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    RETURN          reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    READ            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    WRITE           reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    IF              reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    WHILE           reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    FOR             reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    APAR            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    CTEI            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    CTEF            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    CLLA            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    CPAR            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    COMA            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    CCOR            reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    PTCOMA          reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    TO              reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)
    DO              reduce using rule 85 (gexpp -> IGUALIGUAL mexp .)


state 160

    (86) gexpp -> DIF mexp .

    AND             reduce using rule 86 (gexpp -> DIF mexp .)
    OR              reduce using rule 86 (gexpp -> DIF mexp .)
    ID              reduce using rule 86 (gexpp -> DIF mexp .)
    RETURN          reduce using rule 86 (gexpp -> DIF mexp .)
    READ            reduce using rule 86 (gexpp -> DIF mexp .)
    WRITE           reduce using rule 86 (gexpp -> DIF mexp .)
    IF              reduce using rule 86 (gexpp -> DIF mexp .)
    WHILE           reduce using rule 86 (gexpp -> DIF mexp .)
    FOR             reduce using rule 86 (gexpp -> DIF mexp .)
    APAR            reduce using rule 86 (gexpp -> DIF mexp .)
    CTEI            reduce using rule 86 (gexpp -> DIF mexp .)
    CTEF            reduce using rule 86 (gexpp -> DIF mexp .)
    CLLA            reduce using rule 86 (gexpp -> DIF mexp .)
    CPAR            reduce using rule 86 (gexpp -> DIF mexp .)
    COMA            reduce using rule 86 (gexpp -> DIF mexp .)
    CCOR            reduce using rule 86 (gexpp -> DIF mexp .)
    PTCOMA          reduce using rule 86 (gexpp -> DIF mexp .)
    TO              reduce using rule 86 (gexpp -> DIF mexp .)
    DO              reduce using rule 86 (gexpp -> DIF mexp .)


state 161

    (89) mexpp -> MAS mexp .

    MAYQ            reduce using rule 89 (mexpp -> MAS mexp .)
    MENQ            reduce using rule 89 (mexpp -> MAS mexp .)
    MAYI            reduce using rule 89 (mexpp -> MAS mexp .)
    MENI            reduce using rule 89 (mexpp -> MAS mexp .)
    IGUALIGUAL      reduce using rule 89 (mexpp -> MAS mexp .)
    DIF             reduce using rule 89 (mexpp -> MAS mexp .)
    AND             reduce using rule 89 (mexpp -> MAS mexp .)
    OR              reduce using rule 89 (mexpp -> MAS mexp .)
    ID              reduce using rule 89 (mexpp -> MAS mexp .)
    RETURN          reduce using rule 89 (mexpp -> MAS mexp .)
    READ            reduce using rule 89 (mexpp -> MAS mexp .)
    WRITE           reduce using rule 89 (mexpp -> MAS mexp .)
    IF              reduce using rule 89 (mexpp -> MAS mexp .)
    WHILE           reduce using rule 89 (mexpp -> MAS mexp .)
    FOR             reduce using rule 89 (mexpp -> MAS mexp .)
    APAR            reduce using rule 89 (mexpp -> MAS mexp .)
    CTEI            reduce using rule 89 (mexpp -> MAS mexp .)
    CTEF            reduce using rule 89 (mexpp -> MAS mexp .)
    CLLA            reduce using rule 89 (mexpp -> MAS mexp .)
    CPAR            reduce using rule 89 (mexpp -> MAS mexp .)
    COMA            reduce using rule 89 (mexpp -> MAS mexp .)
    CCOR            reduce using rule 89 (mexpp -> MAS mexp .)
    PTCOMA          reduce using rule 89 (mexpp -> MAS mexp .)
    TO              reduce using rule 89 (mexpp -> MAS mexp .)
    DO              reduce using rule 89 (mexpp -> MAS mexp .)


state 162

    (90) mexpp -> MENOS mexp .

    MAYQ            reduce using rule 90 (mexpp -> MENOS mexp .)
    MENQ            reduce using rule 90 (mexpp -> MENOS mexp .)
    MAYI            reduce using rule 90 (mexpp -> MENOS mexp .)
    MENI            reduce using rule 90 (mexpp -> MENOS mexp .)
    IGUALIGUAL      reduce using rule 90 (mexpp -> MENOS mexp .)
    DIF             reduce using rule 90 (mexpp -> MENOS mexp .)
    AND             reduce using rule 90 (mexpp -> MENOS mexp .)
    OR              reduce using rule 90 (mexpp -> MENOS mexp .)
    ID              reduce using rule 90 (mexpp -> MENOS mexp .)
    RETURN          reduce using rule 90 (mexpp -> MENOS mexp .)
    READ            reduce using rule 90 (mexpp -> MENOS mexp .)
    WRITE           reduce using rule 90 (mexpp -> MENOS mexp .)
    IF              reduce using rule 90 (mexpp -> MENOS mexp .)
    WHILE           reduce using rule 90 (mexpp -> MENOS mexp .)
    FOR             reduce using rule 90 (mexpp -> MENOS mexp .)
    APAR            reduce using rule 90 (mexpp -> MENOS mexp .)
    CTEI            reduce using rule 90 (mexpp -> MENOS mexp .)
    CTEF            reduce using rule 90 (mexpp -> MENOS mexp .)
    CLLA            reduce using rule 90 (mexpp -> MENOS mexp .)
    CPAR            reduce using rule 90 (mexpp -> MENOS mexp .)
    COMA            reduce using rule 90 (mexpp -> MENOS mexp .)
    CCOR            reduce using rule 90 (mexpp -> MENOS mexp .)
    PTCOMA          reduce using rule 90 (mexpp -> MENOS mexp .)
    TO              reduce using rule 90 (mexpp -> MENOS mexp .)
    DO              reduce using rule 90 (mexpp -> MENOS mexp .)


state 163

    (93) terminop -> POR termino .

    MAS             reduce using rule 93 (terminop -> POR termino .)
    MENOS           reduce using rule 93 (terminop -> POR termino .)
    MAYQ            reduce using rule 93 (terminop -> POR termino .)
    MENQ            reduce using rule 93 (terminop -> POR termino .)
    MAYI            reduce using rule 93 (terminop -> POR termino .)
    MENI            reduce using rule 93 (terminop -> POR termino .)
    IGUALIGUAL      reduce using rule 93 (terminop -> POR termino .)
    DIF             reduce using rule 93 (terminop -> POR termino .)
    AND             reduce using rule 93 (terminop -> POR termino .)
    OR              reduce using rule 93 (terminop -> POR termino .)
    ID              reduce using rule 93 (terminop -> POR termino .)
    RETURN          reduce using rule 93 (terminop -> POR termino .)
    READ            reduce using rule 93 (terminop -> POR termino .)
    WRITE           reduce using rule 93 (terminop -> POR termino .)
    IF              reduce using rule 93 (terminop -> POR termino .)
    WHILE           reduce using rule 93 (terminop -> POR termino .)
    FOR             reduce using rule 93 (terminop -> POR termino .)
    APAR            reduce using rule 93 (terminop -> POR termino .)
    CTEI            reduce using rule 93 (terminop -> POR termino .)
    CTEF            reduce using rule 93 (terminop -> POR termino .)
    CLLA            reduce using rule 93 (terminop -> POR termino .)
    CPAR            reduce using rule 93 (terminop -> POR termino .)
    COMA            reduce using rule 93 (terminop -> POR termino .)
    CCOR            reduce using rule 93 (terminop -> POR termino .)
    PTCOMA          reduce using rule 93 (terminop -> POR termino .)
    TO              reduce using rule 93 (terminop -> POR termino .)
    DO              reduce using rule 93 (terminop -> POR termino .)


state 164

    (94) terminop -> DIV termino .

    MAS             reduce using rule 94 (terminop -> DIV termino .)
    MENOS           reduce using rule 94 (terminop -> DIV termino .)
    MAYQ            reduce using rule 94 (terminop -> DIV termino .)
    MENQ            reduce using rule 94 (terminop -> DIV termino .)
    MAYI            reduce using rule 94 (terminop -> DIV termino .)
    MENI            reduce using rule 94 (terminop -> DIV termino .)
    IGUALIGUAL      reduce using rule 94 (terminop -> DIV termino .)
    DIF             reduce using rule 94 (terminop -> DIV termino .)
    AND             reduce using rule 94 (terminop -> DIV termino .)
    OR              reduce using rule 94 (terminop -> DIV termino .)
    ID              reduce using rule 94 (terminop -> DIV termino .)
    RETURN          reduce using rule 94 (terminop -> DIV termino .)
    READ            reduce using rule 94 (terminop -> DIV termino .)
    WRITE           reduce using rule 94 (terminop -> DIV termino .)
    IF              reduce using rule 94 (terminop -> DIV termino .)
    WHILE           reduce using rule 94 (terminop -> DIV termino .)
    FOR             reduce using rule 94 (terminop -> DIV termino .)
    APAR            reduce using rule 94 (terminop -> DIV termino .)
    CTEI            reduce using rule 94 (terminop -> DIV termino .)
    CTEF            reduce using rule 94 (terminop -> DIV termino .)
    CLLA            reduce using rule 94 (terminop -> DIV termino .)
    CPAR            reduce using rule 94 (terminop -> DIV termino .)
    COMA            reduce using rule 94 (terminop -> DIV termino .)
    CCOR            reduce using rule 94 (terminop -> DIV termino .)
    PTCOMA          reduce using rule 94 (terminop -> DIV termino .)
    TO              reduce using rule 94 (terminop -> DIV termino .)
    DO              reduce using rule 94 (terminop -> DIV termino .)


state 165

    (13) funcspp -> APAR params CPAR PTCOMA varss . ALLA estatutos CLLA funcs

    ALLA            shift and go to state 197


state 166

    (32) params -> tipo DOSPNTS ID ididx . paramsp
    (34) paramsp -> . COMA params
    (35) paramsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 199
    CPAR            reduce using rule 108 (empty -> .)

    paramsp                        shift and go to state 198
    empty                          shift and go to state 200

state 167

    (10) varspp -> COMA ID varsppp varspp .

    INT             reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    FLOAT           reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    CHAR            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    STR             reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    BOOL            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    FUNCTION        reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    MAIN            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)
    ALLA            reduce using rule 10 (varspp -> COMA ID varsppp varspp .)


state 168

    (100) factorp -> APAR exp . factorpp CPAR
    (103) factorpp -> . COMA exp factorpp
    (104) factorpp -> . empty
    (108) empty -> .

    COMA            shift and go to state 201
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 173
    empty                          shift and go to state 202

state 169

    (101) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 203


state 170

    (36) asig -> ID ididx IGUAL asigpp . PTCOMA

    PTCOMA          shift and go to state 204


state 171

    (105) ctes -> ID factorp .
    (97) factor -> ID factorp .

  ! reduce/reduce conflict for POR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIV resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 97 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 97 (factor -> ID factorp .)
    POR             reduce using rule 97 (factor -> ID factorp .)
    DIV             reduce using rule 97 (factor -> ID factorp .)
    MAS             reduce using rule 97 (factor -> ID factorp .)
    MENOS           reduce using rule 97 (factor -> ID factorp .)
    MAYQ            reduce using rule 97 (factor -> ID factorp .)
    MENQ            reduce using rule 97 (factor -> ID factorp .)
    MAYI            reduce using rule 97 (factor -> ID factorp .)
    MENI            reduce using rule 97 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 97 (factor -> ID factorp .)
    DIF             reduce using rule 97 (factor -> ID factorp .)
    AND             reduce using rule 97 (factor -> ID factorp .)
    OR              reduce using rule 97 (factor -> ID factorp .)
    COMA            reduce using rule 97 (factor -> ID factorp .)
    CPAR            reduce using rule 97 (factor -> ID factorp .)

  ! COMA            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! POR             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 105 (ctes -> ID factorp .) ]


state 172

    (49) llamada -> ID APAR args CPAR . PTCOMA

    PTCOMA          shift and go to state 205


state 173

    (100) factorp -> APAR exp factorpp . CPAR

    CPAR            shift and go to state 206


state 174

    (51) args -> exp argsp .

    CPAR            reduce using rule 51 (args -> exp argsp .)


state 175

    (103) factorpp -> COMA . exp factorpp
    (54) argsp -> COMA . args
    (74) exp -> . texp expp
    (50) args -> . ctes argsp
    (51) args -> . exp argsp
    (52) args -> . STRING argsp
    (53) args -> . CTEC argsp
    (77) texp -> . gexp texpp
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes

    STRING          shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 128
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67
    APAR            shift and go to state 42

    exp                            shift and go to state 207
    args                           shift and go to state 208
    texp                           shift and go to state 60
    ctes                           shift and go to state 131
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64

state 176

    (104) factorpp -> empty .
    (55) argsp -> empty .

  ! reduce/reduce conflict for CPAR resolved using rule 55 (argsp -> empty .)
    CPAR            reduce using rule 55 (argsp -> empty .)

  ! CPAR            [ reduce using rule 104 (factorpp -> empty .) ]


state 177

    (50) args -> ctes argsp .

    CPAR            reduce using rule 50 (args -> ctes argsp .)


state 178

    (54) argsp -> COMA . args
    (50) args -> . ctes argsp
    (51) args -> . exp argsp
    (52) args -> . STRING argsp
    (53) args -> . CTEC argsp
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes

    STRING          shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 128
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67
    APAR            shift and go to state 42

    args                           shift and go to state 208
    ctes                           shift and go to state 131
    exp                            shift and go to state 209
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64

state 179

    (55) argsp -> empty .

    CPAR            reduce using rule 55 (argsp -> empty .)


state 180

    (52) args -> STRING argsp .

    CPAR            reduce using rule 52 (args -> STRING argsp .)


state 181

    (53) args -> CTEC argsp .

    CPAR            reduce using rule 53 (args -> CTEC argsp .)


state 182

    (47) ididx -> ACOR exp CCOR .
    (101) factorp -> ACOR exp CCOR .

    IGUAL           reduce using rule 47 (ididx -> ACOR exp CCOR .)
    POR             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    DIV             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    IGUALIGUAL      reduce using rule 101 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 101 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 101 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 101 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 101 (factorp -> ACOR exp CCOR .)


state 183

    (56) return -> RETURN APAR asigpp CPAR . PTCOMA

    PTCOMA          shift and go to state 210


state 184

    (46) asigpp -> ACOR asigp . CCOR

    CCOR            shift and go to state 211


state 185

    (37) asigp -> exp . asigppp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (108) empty -> .

    COMA            shift and go to state 213
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 212
    empty                          shift and go to state 214

state 186

    (38) asigp -> CTEC . asigppp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (108) empty -> .

    COMA            shift and go to state 213
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 215
    empty                          shift and go to state 214

state 187

    (39) asigp -> STRING . asigppp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (108) empty -> .

    COMA            shift and go to state 213
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 216
    empty                          shift and go to state 214

state 188

    (40) asigp -> empty .

    CCOR            reduce using rule 40 (asigp -> empty .)


state 189

    (57) lectura -> READ APAR ID ididx . lecturapp CPAR PTCOMA
    (58) lecturapp -> . COMA ID ididx lecturapp
    (59) lecturapp -> . empty
    (108) empty -> .

    COMA            shift and go to state 218
    CPAR            reduce using rule 108 (empty -> .)

    lecturapp                      shift and go to state 217
    empty                          shift and go to state 219

state 190

    (60) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 220


state 191

    (64) escriturapp -> COMA . escriturap
    (61) escriturap -> . STRING
    (62) escriturap -> . exp
    (63) escriturap -> . CTEC
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    STRING          shift and go to state 142
    CTEC            shift and go to state 144
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    escriturap                     shift and go to state 221
    exp                            shift and go to state 143
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 192

    (65) escriturapp -> empty .

    CPAR            reduce using rule 65 (escriturapp -> empty .)


state 193

    (66) cond -> IF APAR condp CPAR . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 222


state 194

    (72) while -> WHILE APAR condp CPAR . DO ALLA estatutos CLLA

    DO              shift and go to state 223


state 195

    (73) for -> FOR ID ididx IGUAL . exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 224
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 196

    (47) ididx -> ACOR exp . CCOR

    CCOR            shift and go to state 225


state 197

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA . estatutos CLLA funcs
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    estatutos                      shift and go to state 226
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 198

    (32) params -> tipo DOSPNTS ID ididx paramsp .

    CPAR            reduce using rule 32 (params -> tipo DOSPNTS ID ididx paramsp .)


state 199

    (34) paramsp -> COMA . params
    (32) params -> . tipo DOSPNTS ID ididx paramsp
    (33) params -> . empty
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . STR
    (31) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STR             shift and go to state 18
    BOOL            shift and go to state 19
    CPAR            reduce using rule 108 (empty -> .)

    params                         shift and go to state 227
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 200

    (35) paramsp -> empty .

    CPAR            reduce using rule 35 (paramsp -> empty .)


state 201

    (103) factorpp -> COMA . exp factorpp
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 228
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 202

    (104) factorpp -> empty .

    CPAR            reduce using rule 104 (factorpp -> empty .)


state 203

    (101) factorp -> ACOR exp CCOR .

    POR             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    DIV             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    IGUALIGUAL      reduce using rule 101 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 101 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 101 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 101 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 101 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 101 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 101 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 101 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 101 (factorp -> ACOR exp CCOR .)


state 204

    (36) asig -> ID ididx IGUAL asigpp PTCOMA .

    ID              reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    RETURN          reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    READ            reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    WRITE           reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    IF              reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    WHILE           reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    FOR             reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    APAR            reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CTEI            reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CTEF            reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CLLA            reduce using rule 36 (asig -> ID ididx IGUAL asigpp PTCOMA .)


state 205

    (49) llamada -> ID APAR args CPAR PTCOMA .

    ID              reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    RETURN          reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    READ            reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    WRITE           reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    IF              reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    WHILE           reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    FOR             reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    APAR            reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEI            reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEF            reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)
    CLLA            reduce using rule 49 (llamada -> ID APAR args CPAR PTCOMA .)


state 206

    (100) factorp -> APAR exp factorpp CPAR .

    POR             reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    DIV             reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    MAS             reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    MENOS           reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    MAYQ            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    MENQ            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    MAYI            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    MENI            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    IGUALIGUAL      reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    DIF             reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    AND             reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    OR              reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    ID              reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    RETURN          reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    READ            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    WRITE           reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    IF              reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    WHILE           reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    FOR             reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    APAR            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    CTEI            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    CTEF            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    CLLA            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    CPAR            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    CCOR            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    COMA            reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    PTCOMA          reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    TO              reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)
    DO              reduce using rule 100 (factorp -> APAR exp factorpp CPAR .)


state 207

    (103) factorpp -> COMA exp . factorpp
    (51) args -> exp . argsp
    (103) factorpp -> . COMA exp factorpp
    (104) factorpp -> . empty
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 175
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 229
    argsp                          shift and go to state 174
    empty                          shift and go to state 176

state 208

    (54) argsp -> COMA args .

    CPAR            reduce using rule 54 (argsp -> COMA args .)


state 209

    (51) args -> exp . argsp
    (54) argsp -> . COMA args
    (55) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 174
    empty                          shift and go to state 179

state 210

    (56) return -> RETURN APAR asigpp CPAR PTCOMA .

    ID              reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    RETURN          reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    READ            reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    WRITE           reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    IF              reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    WHILE           reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    FOR             reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    APAR            reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CTEI            reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CTEF            reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CLLA            reduce using rule 56 (return -> RETURN APAR asigpp CPAR PTCOMA .)


state 211

    (46) asigpp -> ACOR asigp CCOR .

    CPAR            reduce using rule 46 (asigpp -> ACOR asigp CCOR .)
    PTCOMA          reduce using rule 46 (asigpp -> ACOR asigp CCOR .)


state 212

    (37) asigp -> exp asigppp .

    CCOR            reduce using rule 37 (asigp -> exp asigppp .)


state 213

    (41) asigppp -> COMA . asigp
    (37) asigp -> . exp asigppp
    (38) asigp -> . CTEC asigppp
    (39) asigp -> . STRING asigppp
    (40) asigp -> . empty
    (74) exp -> . texp expp
    (108) empty -> .
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 186
    STRING          shift and go to state 187
    CCOR            reduce using rule 108 (empty -> .)
    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    asigp                          shift and go to state 230
    exp                            shift and go to state 185
    empty                          shift and go to state 188
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 214

    (42) asigppp -> empty .

    CCOR            reduce using rule 42 (asigppp -> empty .)


state 215

    (38) asigp -> CTEC asigppp .

    CCOR            reduce using rule 38 (asigp -> CTEC asigppp .)


state 216

    (39) asigp -> STRING asigppp .

    CCOR            reduce using rule 39 (asigp -> STRING asigppp .)


state 217

    (57) lectura -> READ APAR ID ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 231


state 218

    (58) lecturapp -> COMA . ID ididx lecturapp

    ID              shift and go to state 232


state 219

    (59) lecturapp -> empty .

    CPAR            reduce using rule 59 (lecturapp -> empty .)


state 220

    (60) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 233


state 221

    (64) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 64 (escriturapp -> COMA escriturap .)


state 222

    (66) cond -> IF APAR condp CPAR THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 234


state 223

    (72) while -> WHILE APAR condp CPAR DO . ALLA estatutos CLLA

    ALLA            shift and go to state 235


state 224

    (73) for -> FOR ID ididx IGUAL exp . TO exp DO ALLA estatutos CLLA

    TO              shift and go to state 236


state 225

    (47) ididx -> ACOR exp CCOR .

    IGUAL           reduce using rule 47 (ididx -> ACOR exp CCOR .)
    COMA            reduce using rule 47 (ididx -> ACOR exp CCOR .)
    CPAR            reduce using rule 47 (ididx -> ACOR exp CCOR .)


state 226

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos . CLLA funcs

    CLLA            shift and go to state 237


state 227

    (34) paramsp -> COMA params .

    CPAR            reduce using rule 34 (paramsp -> COMA params .)


state 228

    (103) factorpp -> COMA exp . factorpp
    (103) factorpp -> . COMA exp factorpp
    (104) factorpp -> . empty
    (108) empty -> .

    COMA            shift and go to state 201
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 229
    empty                          shift and go to state 202

state 229

    (103) factorpp -> COMA exp factorpp .

    CPAR            reduce using rule 103 (factorpp -> COMA exp factorpp .)


state 230

    (41) asigppp -> COMA asigp .

    CCOR            reduce using rule 41 (asigppp -> COMA asigp .)


state 231

    (57) lectura -> READ APAR ID ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 238


state 232

    (58) lecturapp -> COMA ID . ididx lecturapp
    (47) ididx -> . ACOR exp CCOR
    (48) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 151
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 239
    empty                          shift and go to state 152

state 233

    (60) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    ID              reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    RETURN          reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 234

    (66) cond -> IF APAR condp CPAR THEN ALLA . estatutos CLLA condpp
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    estatutos                      shift and go to state 240
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 235

    (72) while -> WHILE APAR condp CPAR DO ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    estatutos                      shift and go to state 241
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 236

    (73) for -> FOR ID ididx IGUAL exp TO . exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 42
    ID              shift and go to state 74
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 242
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 237

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA . funcs
    (11) funcs -> . FUNCTION funcsp ID funcspp
    (12) funcs -> . empty
    (108) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 108 (empty -> .)

    funcs                          shift and go to state 243
    empty                          shift and go to state 11

state 238

    (57) lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .

    ID              reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    RETURN          reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 57 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)


state 239

    (58) lecturapp -> COMA ID ididx . lecturapp
    (58) lecturapp -> . COMA ID ididx lecturapp
    (59) lecturapp -> . empty
    (108) empty -> .

    COMA            shift and go to state 218
    CPAR            reduce using rule 108 (empty -> .)

    lecturapp                      shift and go to state 244
    empty                          shift and go to state 219

state 240

    (66) cond -> IF APAR condp CPAR THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 245


state 241

    (72) while -> WHILE APAR condp CPAR DO ALLA estatutos . CLLA

    CLLA            shift and go to state 246


state 242

    (73) for -> FOR ID ididx IGUAL exp TO exp . DO ALLA estatutos CLLA

    DO              shift and go to state 247


state 243

    (13) funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .

    MAIN            reduce using rule 13 (funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .)


state 244

    (58) lecturapp -> COMA ID ididx lecturapp .

    CPAR            reduce using rule 58 (lecturapp -> COMA ID ididx lecturapp .)


state 245

    (66) cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA . condpp
    (70) condpp -> . ELSE ALLA estatutos CLLA
    (71) condpp -> . empty
    (108) empty -> .

    ELSE            shift and go to state 249
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)

    condpp                         shift and go to state 248
    empty                          shift and go to state 250

state 246

    (72) while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .

    ID              reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    READ            reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    IF              reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    FOR             reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    APAR            reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 72 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)


state 247

    (73) for -> FOR ID ididx IGUAL exp TO exp DO . ALLA estatutos CLLA

    ALLA            shift and go to state 251


state 248

    (66) cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .

    ID              reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    RETURN          reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 66 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)


state 249

    (70) condpp -> ELSE . ALLA estatutos CLLA

    ALLA            shift and go to state 252


state 250

    (71) condpp -> empty .

    ID              reduce using rule 71 (condpp -> empty .)
    RETURN          reduce using rule 71 (condpp -> empty .)
    READ            reduce using rule 71 (condpp -> empty .)
    WRITE           reduce using rule 71 (condpp -> empty .)
    IF              reduce using rule 71 (condpp -> empty .)
    WHILE           reduce using rule 71 (condpp -> empty .)
    FOR             reduce using rule 71 (condpp -> empty .)
    APAR            reduce using rule 71 (condpp -> empty .)
    CTEI            reduce using rule 71 (condpp -> empty .)
    CTEF            reduce using rule 71 (condpp -> empty .)
    CLLA            reduce using rule 71 (condpp -> empty .)


state 251

    (73) for -> FOR ID ididx IGUAL exp TO exp DO ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    exp                            shift and go to state 52
    estatutos                      shift and go to state 253
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 252

    (70) condpp -> ELSE ALLA . estatutos CLLA
    (16) estatutos -> . asig estatutop
    (17) estatutos -> . llamada estatutop
    (18) estatutos -> . return estatutop
    (19) estatutos -> . lectura estatutop
    (20) estatutos -> . escritura estatutop
    (21) estatutos -> . cond estatutop
    (22) estatutos -> . while estatutop
    (23) estatutos -> . for estatutop
    (24) estatutos -> . exp estatutop
    (36) asig -> . ID ididx IGUAL asigpp PTCOMA
    (49) llamada -> . ID APAR args CPAR PTCOMA
    (56) return -> . RETURN APAR asigpp CPAR PTCOMA
    (57) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (66) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (72) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (73) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (80) gexp -> . mexp gexpp
    (88) mexp -> . termino mexpp
    (92) termino -> . factor terminop
    (96) factor -> . APAR exp CPAR
    (97) factor -> . ID factorp
    (98) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 53
    RETURN          shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    APAR            shift and go to state 42
    CTEI            shift and go to state 66
    CTEF            shift and go to state 67

    estatutos                      shift and go to state 254
    asig                           shift and go to state 44
    llamada                        shift and go to state 45
    return                         shift and go to state 46
    lectura                        shift and go to state 47
    escritura                      shift and go to state 48
    cond                           shift and go to state 49
    while                          shift and go to state 50
    for                            shift and go to state 51
    exp                            shift and go to state 52
    texp                           shift and go to state 60
    gexp                           shift and go to state 61
    mexp                           shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    ctes                           shift and go to state 65

state 253

    (73) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos . CLLA

    CLLA            shift and go to state 255


state 254

    (70) condpp -> ELSE ALLA estatutos . CLLA

    CLLA            shift and go to state 256


state 255

    (73) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .

    ID              reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    READ            reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    IF              reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    FOR             reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    APAR            reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 73 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)


state 256

    (70) condpp -> ELSE ALLA estatutos CLLA .

    ID              reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    RETURN          reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    READ            reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    WRITE           reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    IF              reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    WHILE           reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    FOR             reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    APAR            reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    CTEI            reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    CTEF            reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)
    CLLA            reduce using rule 70 (condpp -> ELSE ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 53 resolved as shift
WARNING: shift/reduce conflict for APAR in state 53 resolved as shift
WARNING: shift/reduce conflict for APAR in state 74 resolved as shift
WARNING: shift/reduce conflict for APAR in state 74 resolved as shift
WARNING: shift/reduce conflict for COMA in state 131 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (factorp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 53
WARNING: reduce/reduce conflict in state 74 resolved using rule (factorp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 74
WARNING: reduce/reduce conflict in state 89 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 89
WARNING: reduce/reduce conflict in state 128 resolved using rule (factorp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 131 resolved using rule (factor -> ctes)
WARNING: rejected rule (empty -> <empty>) in state 131
WARNING: reduce/reduce conflict in state 171 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 171
WARNING: reduce/reduce conflict in state 176 resolved using rule (argsp -> empty)
WARNING: rejected rule (factorpp -> empty) in state 176
WARNING: Rule (ctes -> ID factorp) is never reduced
