Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    IGUALIGUAL
    NOT
    STR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     poptomain -> <empty>
Rule 4     varss -> VARS vars
Rule 5     varss -> empty
Rule 6     vars -> tipo DOSPNTS insertVar varsppp varspp vars
Rule 7     vars -> empty
Rule 8     insertVar -> ID
Rule 9     varsppp -> ACOR CTEI CCOR
Rule 10    varsppp -> empty
Rule 11    varspp -> PTCOMA
Rule 12    varspp -> COMA insertVar varsppp varspp
Rule 13    funcs -> FUNCTION funcsp insertFunc funcspp
Rule 14    funcs -> empty
Rule 15    insertFunc -> ID
Rule 16    funcspp -> APAR params CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
Rule 17    endfunction -> <empty>
Rule 18    addsize -> <empty>
Rule 19    funcsp -> VOID
Rule 20    funcsp -> tipo
Rule 21    estatutos -> asig estatutop
Rule 22    estatutos -> return estatutop
Rule 23    estatutos -> lectura estatutop
Rule 24    estatutos -> escritura estatutop
Rule 25    estatutos -> cond estatutop
Rule 26    estatutos -> while estatutop
Rule 27    estatutos -> for estatutop
Rule 28    estatutos -> exp estatutop
Rule 29    estatutop -> estatutos
Rule 30    estatutop -> empty
Rule 31    tipo -> INT
Rule 32    tipo -> FLOAT
Rule 33    tipo -> CHAR
Rule 34    params -> tipo DOSPNTS insertParams ididx paramsp
Rule 35    params -> empty
Rule 36    insertParams -> ID
Rule 37    paramsp -> COMA params
Rule 38    paramsp -> empty
Rule 39    asig -> varAs ididx igualAs asigpp PTCOMA
Rule 40    varAs -> ID
Rule 41    igualAs -> IGUAL
Rule 42    asigp -> exp asigppp
Rule 43    asigp -> empty
Rule 44    asigppp -> COMA asigp
Rule 45    asigppp -> empty
Rule 46    asigpp -> exp
Rule 47    asigpp -> ACOR asigp CCOR
Rule 48    ididx -> ACOR exp CCOR
Rule 49    ididx -> empty
Rule 50    return -> RETURN APAR exp CPAR PTCOMA
Rule 51    lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA
Rule 52    readId -> ID
Rule 53    lecturapp -> COMA readId ididx lecturapp
Rule 54    lecturapp -> empty
Rule 55    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 56    escriturap -> pushEsc
Rule 57    escriturap -> exp
Rule 58    pushEsc -> STRING
Rule 59    pushEsc -> CTEC
Rule 60    escriturapp -> COMA escriturap
Rule 61    escriturapp -> empty
Rule 62    cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
Rule 63    condpp -> checkElse ALLA estatutos CLLA
Rule 64    condpp -> empty
Rule 65    checkElse -> ELSE
Rule 66    checkCond -> CPAR
Rule 67    while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
Rule 68    saveWhile -> WHILE
Rule 69    checkWhileCond -> CPAR
Rule 70    for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
Rule 71    varFor -> ID
Rule 72    initFor -> TO
Rule 73    beforeDo -> DO
Rule 74    exp -> texp expp
Rule 75    expp -> OR exp
Rule 76    expp -> empty
Rule 77    texp -> gexp texpp
Rule 78    texpp -> andCheck texp
Rule 79    texpp -> empty
Rule 80    andCheck -> AND
Rule 81    gexp -> mexp gexpp
Rule 82    gexpp -> addPO mexp
Rule 83    gexpp -> empty
Rule 84    addPO -> MAYQ
Rule 85    addPO -> MENQ
Rule 86    addPO -> MAYI
Rule 87    addPO -> MENI
Rule 88    addPO -> IGUAL IGUAL
Rule 89    addPO -> DIF
Rule 90    mexp -> termino mexpp
Rule 91    mexpp -> operSR mexp
Rule 92    mexpp -> empty
Rule 93    operSR -> MENOS
Rule 94    operSR -> MAS
Rule 95    termino -> factor terminop
Rule 96    terminop -> oper termino
Rule 97    terminop -> empty
Rule 98    oper -> DIV
Rule 99    oper -> POR
Rule 100   factor -> APAR exp CPAR
Rule 101   factor -> ctes
Rule 102   factorp -> APAR exp factorpp CPAR
Rule 103   factorp -> ACOR exp CCOR
Rule 104   factorp -> empty
Rule 105   factorpp -> COMA exp factorpp
Rule 106   factorpp -> empty
Rule 107   ctes -> CTEC
Rule 108   ctes -> CTEI
Rule 109   ctes -> CTEF
Rule 110   ctes -> ID factorp
Rule 111   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 9 47 48 103
ALLA                 : 1 16 62 63 67 70
AND                  : 80
APAR                 : 1 16 50 51 55 62 67 100 102
BOOL                 : 
CCOR                 : 9 47 48 103
CHAR                 : 33
CLLA                 : 1 16 62 63 67 70
COMA                 : 12 37 44 53 60 105
CPAR                 : 1 16 50 51 55 66 69 100 102
CTEC                 : 59 107
CTEF                 : 109
CTEI                 : 9 108
DIF                  : 89
DIV                  : 98
DO                   : 67 73
DOSPNTS              : 6 34
ELSE                 : 65
FALSE                : 
FLOAT                : 32
FOR                  : 70
FUNCTION             : 13
ID                   : 2 8 15 36 40 52 71 110
IF                   : 62
IGUAL                : 41 70 88 88
IGUALIGUAL           : 
INT                  : 31
MAIN                 : 1
MAS                  : 94
MAYI                 : 86
MAYQ                 : 84
MENI                 : 87
MENOS                : 93
MENQ                 : 85
NOT                  : 
OR                   : 75
POR                  : 99
PROGRAM              : 1
PTCOMA               : 2 11 16 39 50 51 55
READ                 : 51
RETURN               : 50
STR                  : 
STRING               : 58
THEN                 : 62
TO                   : 72
TRUE                 : 
VARS                 : 4
VOID                 : 19
WHILE                : 68
WRITE                : 55
error                : 

Nonterminals, with rules where they appear

addPO                : 82
addsize              : 16
agregarTablaFunciones : 1
andCheck             : 78
asig                 : 21
asigp                : 44 47
asigpp               : 39
asigppp              : 42
beforeDo             : 70
checkCond            : 62
checkElse            : 63
checkWhileCond       : 67
cond                 : 25
condpp               : 62
ctes                 : 101
empty                : 5 7 10 14 30 35 38 43 45 49 54 61 64 76 79 83 92 97 104 106
endfunction          : 16
escritura            : 24
escriturap           : 55 60
escriturapp          : 55
estatutop            : 21 22 23 24 25 26 27 28
estatutos            : 1 16 29 62 63 67 70
exp                  : 28 42 46 48 50 57 62 67 70 70 75 100 102 103 105
expp                 : 74
factor               : 95
factorp              : 110
factorpp             : 102 105
for                  : 27
funcs                : 1 16
funcsp               : 13
funcspp              : 13
gexp                 : 77
gexpp                : 81
ididx                : 34 39 51 53 70
igualAs              : 39
initFor              : 70
insertFunc           : 13
insertParams         : 34
insertVar            : 6 12
lectura              : 23
lecturapp            : 51 53
mexp                 : 81 82 91
mexpp                : 90
oper                 : 96
operSR               : 91
params               : 16 37
paramsp              : 34
poptomain            : 1
program              : 0
pushEsc              : 56
readId               : 51 53
return               : 22
saveWhile            : 67
termino              : 90 96
terminop             : 95
texp                 : 74 78
texpp                : 77
tipo                 : 6 20 34
varAs                : 39
varFor               : 70
vars                 : 4 6
varspp               : 6 12
varsppp              : 6 12
varss                : 1 16
while                : 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (111) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (13) funcs -> . FUNCTION funcsp insertFunc funcspp
    (14) funcs -> . empty
    (111) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 111 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (4) varss -> VARS . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR
    (111) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)
    ALLA            reduce using rule 111 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) varss -> empty .

    FUNCTION        reduce using rule 5 (varss -> empty .)
    MAIN            reduce using rule 5 (varss -> empty .)
    ALLA            reduce using rule 5 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA poptomain estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (13) funcs -> FUNCTION . funcsp insertFunc funcspp
    (19) funcsp -> . VOID
    (20) funcsp -> . tipo
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (14) funcs -> empty .

    MAIN            reduce using rule 14 (funcs -> empty .)


state 12

    (4) varss -> VARS vars .

    FUNCTION        reduce using rule 4 (varss -> VARS vars .)
    MAIN            reduce using rule 4 (varss -> VARS vars .)
    ALLA            reduce using rule 4 (varss -> VARS vars .)


state 13

    (6) vars -> tipo . DOSPNTS insertVar varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    ALLA            reduce using rule 7 (vars -> empty .)


state 15

    (31) tipo -> INT .

    DOSPNTS         reduce using rule 31 (tipo -> INT .)
    ID              reduce using rule 31 (tipo -> INT .)


state 16

    (32) tipo -> FLOAT .

    DOSPNTS         reduce using rule 32 (tipo -> FLOAT .)
    ID              reduce using rule 32 (tipo -> FLOAT .)


state 17

    (33) tipo -> CHAR .

    DOSPNTS         reduce using rule 33 (tipo -> CHAR .)
    ID              reduce using rule 33 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA poptomain estatutos CLLA

    APAR            shift and go to state 23


state 19

    (13) funcs -> FUNCTION funcsp . insertFunc funcspp
    (15) insertFunc -> . ID

    ID              shift and go to state 25

    insertFunc                     shift and go to state 24

state 20

    (19) funcsp -> VOID .

    ID              reduce using rule 19 (funcsp -> VOID .)


state 21

    (20) funcsp -> tipo .

    ID              reduce using rule 20 (funcsp -> tipo .)


state 22

    (6) vars -> tipo DOSPNTS . insertVar varsppp varspp vars
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 26

state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA poptomain estatutos CLLA

    CPAR            shift and go to state 28


state 24

    (13) funcs -> FUNCTION funcsp insertFunc . funcspp
    (16) funcspp -> . APAR params CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 25

    (15) insertFunc -> ID .

    APAR            reduce using rule 15 (insertFunc -> ID .)


state 26

    (6) vars -> tipo DOSPNTS insertVar . varsppp varspp vars
    (9) varsppp -> . ACOR CTEI CCOR
    (10) varsppp -> . empty
    (111) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)

    varsppp                        shift and go to state 31
    empty                          shift and go to state 33

state 27

    (8) insertVar -> ID .

    ACOR            reduce using rule 8 (insertVar -> ID .)
    PTCOMA          reduce using rule 8 (insertVar -> ID .)
    COMA            reduce using rule 8 (insertVar -> ID .)


state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA poptomain estatutos CLLA

    ALLA            shift and go to state 34


state 29

    (13) funcs -> FUNCTION funcsp insertFunc funcspp .

    MAIN            reduce using rule 13 (funcs -> FUNCTION funcsp insertFunc funcspp .)


state 30

    (16) funcspp -> APAR . params CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (34) params -> . tipo DOSPNTS insertParams ididx paramsp
    (35) params -> . empty
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR
    (111) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 111 (empty -> .)

    params                         shift and go to state 35
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 31

    (6) vars -> tipo DOSPNTS insertVar varsppp . varspp vars
    (11) varspp -> . PTCOMA
    (12) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 38

state 32

    (9) varsppp -> ACOR . CTEI CCOR

    CTEI            shift and go to state 41


state 33

    (10) varsppp -> empty .

    PTCOMA          reduce using rule 10 (varsppp -> empty .)
    COMA            reduce using rule 10 (varsppp -> empty .)


state 34

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . poptomain estatutos CLLA
    (3) poptomain -> .

    RETURN          reduce using rule 3 (poptomain -> .)
    READ            reduce using rule 3 (poptomain -> .)
    WRITE           reduce using rule 3 (poptomain -> .)
    IF              reduce using rule 3 (poptomain -> .)
    FOR             reduce using rule 3 (poptomain -> .)
    ID              reduce using rule 3 (poptomain -> .)
    WHILE           reduce using rule 3 (poptomain -> .)
    APAR            reduce using rule 3 (poptomain -> .)
    CTEC            reduce using rule 3 (poptomain -> .)
    CTEI            reduce using rule 3 (poptomain -> .)
    CTEF            reduce using rule 3 (poptomain -> .)

    poptomain                      shift and go to state 42

state 35

    (16) funcspp -> APAR params . CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    CPAR            shift and go to state 43


state 36

    (34) params -> tipo . DOSPNTS insertParams ididx paramsp

    DOSPNTS         shift and go to state 44


state 37

    (35) params -> empty .

    CPAR            reduce using rule 35 (params -> empty .)


state 38

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR
    (111) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)
    ALLA            reduce using rule 111 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 45
    empty                          shift and go to state 14

state 39

    (11) varspp -> PTCOMA .

    INT             reduce using rule 11 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 11 (varspp -> PTCOMA .)
    CHAR            reduce using rule 11 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 11 (varspp -> PTCOMA .)
    MAIN            reduce using rule 11 (varspp -> PTCOMA .)
    ALLA            reduce using rule 11 (varspp -> PTCOMA .)


state 40

    (12) varspp -> COMA . insertVar varsppp varspp
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 46

state 41

    (9) varsppp -> ACOR CTEI . CCOR

    CCOR            shift and go to state 47


state 42

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain . estatutos CLLA
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    estatutos                      shift and go to state 49
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 43

    (16) funcspp -> APAR params CPAR . PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    PTCOMA          shift and go to state 76


state 44

    (34) params -> tipo DOSPNTS . insertParams ididx paramsp
    (36) insertParams -> . ID

    ID              shift and go to state 78

    insertParams                   shift and go to state 77

state 45

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp vars .

    FUNCTION        reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    MAIN            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    ALLA            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)


state 46

    (12) varspp -> COMA insertVar . varsppp varspp
    (9) varsppp -> . ACOR CTEI CCOR
    (10) varsppp -> . empty
    (111) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)

    varsppp                        shift and go to state 79
    empty                          shift and go to state 33

state 47

    (9) varsppp -> ACOR CTEI CCOR .

    PTCOMA          reduce using rule 9 (varsppp -> ACOR CTEI CCOR .)
    COMA            reduce using rule 9 (varsppp -> ACOR CTEI CCOR .)


state 48

    (100) factor -> APAR . exp CPAR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 80
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 49

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos . CLLA

    CLLA            shift and go to state 82


state 50

    (21) estatutos -> asig . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    asig                           shift and go to state 50
    estatutop                      shift and go to state 83
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 51

    (22) estatutos -> return . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    return                         shift and go to state 51
    estatutop                      shift and go to state 86
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 52

    (23) estatutos -> lectura . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    lectura                        shift and go to state 52
    estatutop                      shift and go to state 87
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 53

    (24) estatutos -> escritura . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    escritura                      shift and go to state 53
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 54

    (25) estatutos -> cond . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    cond                           shift and go to state 54
    estatutop                      shift and go to state 89
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 55

    (26) estatutos -> while . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    while                          shift and go to state 55
    estatutop                      shift and go to state 90
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 56

    (27) estatutos -> for . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    for                            shift and go to state 56
    estatutop                      shift and go to state 91
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 57

    (28) estatutos -> exp . estatutop
    (29) estatutop -> . estatutos
    (30) estatutop -> . empty
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (111) empty -> .
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CLLA            reduce using rule 111 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    exp                            shift and go to state 57
    estatutop                      shift and go to state 92
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 58

    (39) asig -> varAs . ididx igualAs asigpp PTCOMA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (111) empty -> .

    ACOR            shift and go to state 94
    IGUAL           reduce using rule 111 (empty -> .)

    ididx                          shift and go to state 93
    empty                          shift and go to state 95

state 59

    (50) return -> RETURN . APAR exp CPAR PTCOMA

    APAR            shift and go to state 96


state 60

    (51) lectura -> READ . APAR readId ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 97


state 61

    (55) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 98


state 62

    (62) cond -> IF . APAR exp checkCond THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 99


state 63

    (67) while -> saveWhile . APAR exp checkWhileCond DO ALLA estatutos CLLA

    APAR            shift and go to state 100


state 64

    (70) for -> FOR . varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (71) varFor -> . ID

    ID              shift and go to state 102

    varFor                         shift and go to state 101

state 65

    (74) exp -> texp . expp
    (75) expp -> . OR exp
    (76) expp -> . empty
    (111) empty -> .

    OR              shift and go to state 104
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    APAR            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)
    CCOR            reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)
    PTCOMA          reduce using rule 111 (empty -> .)
    TO              reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)

    expp                           shift and go to state 103
    empty                          shift and go to state 105

state 66

    (40) varAs -> ID .
    (110) ctes -> ID . factorp
    (102) factorp -> . APAR exp factorpp CPAR
    (103) factorp -> . ACOR exp CCOR
    (104) factorp -> . empty
    (111) empty -> .

  ! shift/reduce conflict for ACOR resolved as shift
  ! reduce/reduce conflict for IGUAL resolved using rule 40 (varAs -> ID .)
  ! shift/reduce conflict for APAR resolved as shift
    IGUAL           reduce using rule 40 (varAs -> ID .)
    APAR            shift and go to state 107
    ACOR            shift and go to state 108
    DIV             reduce using rule 111 (empty -> .)
    POR             reduce using rule 111 (empty -> .)
    MENOS           reduce using rule 111 (empty -> .)
    MAS             reduce using rule 111 (empty -> .)
    MAYQ            reduce using rule 111 (empty -> .)
    MENQ            reduce using rule 111 (empty -> .)
    MAYI            reduce using rule 111 (empty -> .)
    MENI            reduce using rule 111 (empty -> .)
    DIF             reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)

  ! ACOR            [ reduce using rule 40 (varAs -> ID .) ]
  ! IGUAL           [ reduce using rule 111 (empty -> .) ]
  ! APAR            [ reduce using rule 111 (empty -> .) ]

    factorp                        shift and go to state 106
    empty                          shift and go to state 109

state 67

    (68) saveWhile -> WHILE .

    APAR            reduce using rule 68 (saveWhile -> WHILE .)


state 68

    (77) texp -> gexp . texpp
    (78) texpp -> . andCheck texp
    (79) texpp -> . empty
    (80) andCheck -> . AND
    (111) empty -> .

    AND             shift and go to state 113
    OR              reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    APAR            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)
    CCOR            reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)
    PTCOMA          reduce using rule 111 (empty -> .)
    TO              reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)

    texpp                          shift and go to state 110
    andCheck                       shift and go to state 111
    empty                          shift and go to state 112

state 69

    (81) gexp -> mexp . gexpp
    (82) gexpp -> . addPO mexp
    (83) gexpp -> . empty
    (84) addPO -> . MAYQ
    (85) addPO -> . MENQ
    (86) addPO -> . MAYI
    (87) addPO -> . MENI
    (88) addPO -> . IGUAL IGUAL
    (89) addPO -> . DIF
    (111) empty -> .

    MAYQ            shift and go to state 117
    MENQ            shift and go to state 118
    MAYI            shift and go to state 119
    MENI            shift and go to state 120
    IGUAL           shift and go to state 121
    DIF             shift and go to state 122
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    APAR            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)
    CCOR            reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)
    PTCOMA          reduce using rule 111 (empty -> .)
    TO              reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)

    gexpp                          shift and go to state 114
    addPO                          shift and go to state 115
    empty                          shift and go to state 116

state 70

    (90) mexp -> termino . mexpp
    (91) mexpp -> . operSR mexp
    (92) mexpp -> . empty
    (93) operSR -> . MENOS
    (94) operSR -> . MAS
    (111) empty -> .

    MENOS           shift and go to state 126
    MAS             shift and go to state 127
    MAYQ            reduce using rule 111 (empty -> .)
    MENQ            reduce using rule 111 (empty -> .)
    MAYI            reduce using rule 111 (empty -> .)
    MENI            reduce using rule 111 (empty -> .)
    IGUAL           reduce using rule 111 (empty -> .)
    DIF             reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    APAR            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)
    CCOR            reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)
    PTCOMA          reduce using rule 111 (empty -> .)
    TO              reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)

    mexpp                          shift and go to state 123
    operSR                         shift and go to state 124
    empty                          shift and go to state 125

state 71

    (95) termino -> factor . terminop
    (96) terminop -> . oper termino
    (97) terminop -> . empty
    (98) oper -> . DIV
    (99) oper -> . POR
    (111) empty -> .

    DIV             shift and go to state 131
    POR             shift and go to state 132
    MENOS           reduce using rule 111 (empty -> .)
    MAS             reduce using rule 111 (empty -> .)
    MAYQ            reduce using rule 111 (empty -> .)
    MENQ            reduce using rule 111 (empty -> .)
    MAYI            reduce using rule 111 (empty -> .)
    MENI            reduce using rule 111 (empty -> .)
    IGUAL           reduce using rule 111 (empty -> .)
    DIF             reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    APAR            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)
    CCOR            reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)
    PTCOMA          reduce using rule 111 (empty -> .)
    TO              reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)

    terminop                       shift and go to state 128
    oper                           shift and go to state 129
    empty                          shift and go to state 130

state 72

    (101) factor -> ctes .

    DIV             reduce using rule 101 (factor -> ctes .)
    POR             reduce using rule 101 (factor -> ctes .)
    MENOS           reduce using rule 101 (factor -> ctes .)
    MAS             reduce using rule 101 (factor -> ctes .)
    MAYQ            reduce using rule 101 (factor -> ctes .)
    MENQ            reduce using rule 101 (factor -> ctes .)
    MAYI            reduce using rule 101 (factor -> ctes .)
    MENI            reduce using rule 101 (factor -> ctes .)
    IGUAL           reduce using rule 101 (factor -> ctes .)
    DIF             reduce using rule 101 (factor -> ctes .)
    AND             reduce using rule 101 (factor -> ctes .)
    OR              reduce using rule 101 (factor -> ctes .)
    RETURN          reduce using rule 101 (factor -> ctes .)
    READ            reduce using rule 101 (factor -> ctes .)
    WRITE           reduce using rule 101 (factor -> ctes .)
    IF              reduce using rule 101 (factor -> ctes .)
    FOR             reduce using rule 101 (factor -> ctes .)
    ID              reduce using rule 101 (factor -> ctes .)
    WHILE           reduce using rule 101 (factor -> ctes .)
    APAR            reduce using rule 101 (factor -> ctes .)
    CTEC            reduce using rule 101 (factor -> ctes .)
    CTEI            reduce using rule 101 (factor -> ctes .)
    CTEF            reduce using rule 101 (factor -> ctes .)
    CLLA            reduce using rule 101 (factor -> ctes .)
    CPAR            reduce using rule 101 (factor -> ctes .)
    CCOR            reduce using rule 101 (factor -> ctes .)
    COMA            reduce using rule 101 (factor -> ctes .)
    PTCOMA          reduce using rule 101 (factor -> ctes .)
    TO              reduce using rule 101 (factor -> ctes .)
    DO              reduce using rule 101 (factor -> ctes .)


state 73

    (107) ctes -> CTEC .

    DIV             reduce using rule 107 (ctes -> CTEC .)
    POR             reduce using rule 107 (ctes -> CTEC .)
    MENOS           reduce using rule 107 (ctes -> CTEC .)
    MAS             reduce using rule 107 (ctes -> CTEC .)
    MAYQ            reduce using rule 107 (ctes -> CTEC .)
    MENQ            reduce using rule 107 (ctes -> CTEC .)
    MAYI            reduce using rule 107 (ctes -> CTEC .)
    MENI            reduce using rule 107 (ctes -> CTEC .)
    IGUAL           reduce using rule 107 (ctes -> CTEC .)
    DIF             reduce using rule 107 (ctes -> CTEC .)
    AND             reduce using rule 107 (ctes -> CTEC .)
    OR              reduce using rule 107 (ctes -> CTEC .)
    RETURN          reduce using rule 107 (ctes -> CTEC .)
    READ            reduce using rule 107 (ctes -> CTEC .)
    WRITE           reduce using rule 107 (ctes -> CTEC .)
    IF              reduce using rule 107 (ctes -> CTEC .)
    FOR             reduce using rule 107 (ctes -> CTEC .)
    ID              reduce using rule 107 (ctes -> CTEC .)
    WHILE           reduce using rule 107 (ctes -> CTEC .)
    APAR            reduce using rule 107 (ctes -> CTEC .)
    CTEC            reduce using rule 107 (ctes -> CTEC .)
    CTEI            reduce using rule 107 (ctes -> CTEC .)
    CTEF            reduce using rule 107 (ctes -> CTEC .)
    CLLA            reduce using rule 107 (ctes -> CTEC .)
    CPAR            reduce using rule 107 (ctes -> CTEC .)
    CCOR            reduce using rule 107 (ctes -> CTEC .)
    COMA            reduce using rule 107 (ctes -> CTEC .)
    PTCOMA          reduce using rule 107 (ctes -> CTEC .)
    TO              reduce using rule 107 (ctes -> CTEC .)
    DO              reduce using rule 107 (ctes -> CTEC .)


state 74

    (108) ctes -> CTEI .

    DIV             reduce using rule 108 (ctes -> CTEI .)
    POR             reduce using rule 108 (ctes -> CTEI .)
    MENOS           reduce using rule 108 (ctes -> CTEI .)
    MAS             reduce using rule 108 (ctes -> CTEI .)
    MAYQ            reduce using rule 108 (ctes -> CTEI .)
    MENQ            reduce using rule 108 (ctes -> CTEI .)
    MAYI            reduce using rule 108 (ctes -> CTEI .)
    MENI            reduce using rule 108 (ctes -> CTEI .)
    IGUAL           reduce using rule 108 (ctes -> CTEI .)
    DIF             reduce using rule 108 (ctes -> CTEI .)
    AND             reduce using rule 108 (ctes -> CTEI .)
    OR              reduce using rule 108 (ctes -> CTEI .)
    RETURN          reduce using rule 108 (ctes -> CTEI .)
    READ            reduce using rule 108 (ctes -> CTEI .)
    WRITE           reduce using rule 108 (ctes -> CTEI .)
    IF              reduce using rule 108 (ctes -> CTEI .)
    FOR             reduce using rule 108 (ctes -> CTEI .)
    ID              reduce using rule 108 (ctes -> CTEI .)
    WHILE           reduce using rule 108 (ctes -> CTEI .)
    APAR            reduce using rule 108 (ctes -> CTEI .)
    CTEC            reduce using rule 108 (ctes -> CTEI .)
    CTEI            reduce using rule 108 (ctes -> CTEI .)
    CTEF            reduce using rule 108 (ctes -> CTEI .)
    CLLA            reduce using rule 108 (ctes -> CTEI .)
    CPAR            reduce using rule 108 (ctes -> CTEI .)
    CCOR            reduce using rule 108 (ctes -> CTEI .)
    COMA            reduce using rule 108 (ctes -> CTEI .)
    PTCOMA          reduce using rule 108 (ctes -> CTEI .)
    TO              reduce using rule 108 (ctes -> CTEI .)
    DO              reduce using rule 108 (ctes -> CTEI .)


state 75

    (109) ctes -> CTEF .

    DIV             reduce using rule 109 (ctes -> CTEF .)
    POR             reduce using rule 109 (ctes -> CTEF .)
    MENOS           reduce using rule 109 (ctes -> CTEF .)
    MAS             reduce using rule 109 (ctes -> CTEF .)
    MAYQ            reduce using rule 109 (ctes -> CTEF .)
    MENQ            reduce using rule 109 (ctes -> CTEF .)
    MAYI            reduce using rule 109 (ctes -> CTEF .)
    MENI            reduce using rule 109 (ctes -> CTEF .)
    IGUAL           reduce using rule 109 (ctes -> CTEF .)
    DIF             reduce using rule 109 (ctes -> CTEF .)
    AND             reduce using rule 109 (ctes -> CTEF .)
    OR              reduce using rule 109 (ctes -> CTEF .)
    RETURN          reduce using rule 109 (ctes -> CTEF .)
    READ            reduce using rule 109 (ctes -> CTEF .)
    WRITE           reduce using rule 109 (ctes -> CTEF .)
    IF              reduce using rule 109 (ctes -> CTEF .)
    FOR             reduce using rule 109 (ctes -> CTEF .)
    ID              reduce using rule 109 (ctes -> CTEF .)
    WHILE           reduce using rule 109 (ctes -> CTEF .)
    APAR            reduce using rule 109 (ctes -> CTEF .)
    CTEC            reduce using rule 109 (ctes -> CTEF .)
    CTEI            reduce using rule 109 (ctes -> CTEF .)
    CTEF            reduce using rule 109 (ctes -> CTEF .)
    CLLA            reduce using rule 109 (ctes -> CTEF .)
    CPAR            reduce using rule 109 (ctes -> CTEF .)
    CCOR            reduce using rule 109 (ctes -> CTEF .)
    COMA            reduce using rule 109 (ctes -> CTEF .)
    PTCOMA          reduce using rule 109 (ctes -> CTEF .)
    TO              reduce using rule 109 (ctes -> CTEF .)
    DO              reduce using rule 109 (ctes -> CTEF .)


state 76

    (16) funcspp -> APAR params CPAR PTCOMA . varss ALLA addsize estatutos CLLA endfunction funcs
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (111) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 111 (empty -> .)

    varss                          shift and go to state 133
    empty                          shift and go to state 7

state 77

    (34) params -> tipo DOSPNTS insertParams . ididx paramsp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (111) empty -> .

    ACOR            shift and go to state 94
    COMA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)

    ididx                          shift and go to state 134
    empty                          shift and go to state 95

state 78

    (36) insertParams -> ID .

    ACOR            reduce using rule 36 (insertParams -> ID .)
    COMA            reduce using rule 36 (insertParams -> ID .)
    CPAR            reduce using rule 36 (insertParams -> ID .)


state 79

    (12) varspp -> COMA insertVar varsppp . varspp
    (11) varspp -> . PTCOMA
    (12) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 135

state 80

    (100) factor -> APAR exp . CPAR

    CPAR            shift and go to state 136


state 81

    (110) ctes -> ID . factorp
    (102) factorp -> . APAR exp factorpp CPAR
    (103) factorp -> . ACOR exp CCOR
    (104) factorp -> . empty
    (111) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 107
    ACOR            shift and go to state 108
    DIV             reduce using rule 111 (empty -> .)
    POR             reduce using rule 111 (empty -> .)
    MENOS           reduce using rule 111 (empty -> .)
    MAS             reduce using rule 111 (empty -> .)
    MAYQ            reduce using rule 111 (empty -> .)
    MENQ            reduce using rule 111 (empty -> .)
    MAYI            reduce using rule 111 (empty -> .)
    MENI            reduce using rule 111 (empty -> .)
    IGUAL           reduce using rule 111 (empty -> .)
    DIF             reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)
    CCOR            reduce using rule 111 (empty -> .)
    COMA            reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)
    PTCOMA          reduce using rule 111 (empty -> .)
    TO              reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)

  ! APAR            [ reduce using rule 111 (empty -> .) ]

    factorp                        shift and go to state 106
    empty                          shift and go to state 109

state 82

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .)


state 83

    (21) estatutos -> asig estatutop .

    CLLA            reduce using rule 21 (estatutos -> asig estatutop .)


state 84

    (29) estatutop -> estatutos .

    CLLA            reduce using rule 29 (estatutop -> estatutos .)


state 85

    (30) estatutop -> empty .

    CLLA            reduce using rule 30 (estatutop -> empty .)


state 86

    (22) estatutos -> return estatutop .

    CLLA            reduce using rule 22 (estatutos -> return estatutop .)


state 87

    (23) estatutos -> lectura estatutop .

    CLLA            reduce using rule 23 (estatutos -> lectura estatutop .)


state 88

    (24) estatutos -> escritura estatutop .

    CLLA            reduce using rule 24 (estatutos -> escritura estatutop .)


state 89

    (25) estatutos -> cond estatutop .

    CLLA            reduce using rule 25 (estatutos -> cond estatutop .)


state 90

    (26) estatutos -> while estatutop .

    CLLA            reduce using rule 26 (estatutos -> while estatutop .)


state 91

    (27) estatutos -> for estatutop .

    CLLA            reduce using rule 27 (estatutos -> for estatutop .)


state 92

    (28) estatutos -> exp estatutop .

    CLLA            reduce using rule 28 (estatutos -> exp estatutop .)


state 93

    (39) asig -> varAs ididx . igualAs asigpp PTCOMA
    (41) igualAs -> . IGUAL

    IGUAL           shift and go to state 138

    igualAs                        shift and go to state 137

state 94

    (48) ididx -> ACOR . exp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 139
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 95

    (49) ididx -> empty .

    IGUAL           reduce using rule 49 (ididx -> empty .)
    COMA            reduce using rule 49 (ididx -> empty .)
    CPAR            reduce using rule 49 (ididx -> empty .)


state 96

    (50) return -> RETURN APAR . exp CPAR PTCOMA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 140
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 97

    (51) lectura -> READ APAR . readId ididx lecturapp CPAR PTCOMA
    (52) readId -> . ID

    ID              shift and go to state 142

    readId                         shift and go to state 141

state 98

    (55) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (56) escriturap -> . pushEsc
    (57) escriturap -> . exp
    (58) pushEsc -> . STRING
    (59) pushEsc -> . CTEC
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    STRING          shift and go to state 146
    CTEC            shift and go to state 147
    APAR            shift and go to state 48
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    escriturap                     shift and go to state 143
    pushEsc                        shift and go to state 144
    exp                            shift and go to state 145
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 99

    (62) cond -> IF APAR . exp checkCond THEN ALLA estatutos CLLA condpp
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 148
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 100

    (67) while -> saveWhile APAR . exp checkWhileCond DO ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 149
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 101

    (70) for -> FOR varFor . ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (111) empty -> .

    ACOR            shift and go to state 94
    IGUAL           reduce using rule 111 (empty -> .)

    ididx                          shift and go to state 150
    empty                          shift and go to state 95

state 102

    (71) varFor -> ID .

    ACOR            reduce using rule 71 (varFor -> ID .)
    IGUAL           reduce using rule 71 (varFor -> ID .)


state 103

    (74) exp -> texp expp .

    RETURN          reduce using rule 74 (exp -> texp expp .)
    READ            reduce using rule 74 (exp -> texp expp .)
    WRITE           reduce using rule 74 (exp -> texp expp .)
    IF              reduce using rule 74 (exp -> texp expp .)
    FOR             reduce using rule 74 (exp -> texp expp .)
    ID              reduce using rule 74 (exp -> texp expp .)
    WHILE           reduce using rule 74 (exp -> texp expp .)
    APAR            reduce using rule 74 (exp -> texp expp .)
    CTEC            reduce using rule 74 (exp -> texp expp .)
    CTEI            reduce using rule 74 (exp -> texp expp .)
    CTEF            reduce using rule 74 (exp -> texp expp .)
    CLLA            reduce using rule 74 (exp -> texp expp .)
    CPAR            reduce using rule 74 (exp -> texp expp .)
    CCOR            reduce using rule 74 (exp -> texp expp .)
    COMA            reduce using rule 74 (exp -> texp expp .)
    PTCOMA          reduce using rule 74 (exp -> texp expp .)
    TO              reduce using rule 74 (exp -> texp expp .)
    DO              reduce using rule 74 (exp -> texp expp .)


state 104

    (75) expp -> OR . exp
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 151
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 105

    (76) expp -> empty .

    RETURN          reduce using rule 76 (expp -> empty .)
    READ            reduce using rule 76 (expp -> empty .)
    WRITE           reduce using rule 76 (expp -> empty .)
    IF              reduce using rule 76 (expp -> empty .)
    FOR             reduce using rule 76 (expp -> empty .)
    ID              reduce using rule 76 (expp -> empty .)
    WHILE           reduce using rule 76 (expp -> empty .)
    APAR            reduce using rule 76 (expp -> empty .)
    CTEC            reduce using rule 76 (expp -> empty .)
    CTEI            reduce using rule 76 (expp -> empty .)
    CTEF            reduce using rule 76 (expp -> empty .)
    CLLA            reduce using rule 76 (expp -> empty .)
    CPAR            reduce using rule 76 (expp -> empty .)
    CCOR            reduce using rule 76 (expp -> empty .)
    COMA            reduce using rule 76 (expp -> empty .)
    PTCOMA          reduce using rule 76 (expp -> empty .)
    TO              reduce using rule 76 (expp -> empty .)
    DO              reduce using rule 76 (expp -> empty .)


state 106

    (110) ctes -> ID factorp .

    DIV             reduce using rule 110 (ctes -> ID factorp .)
    POR             reduce using rule 110 (ctes -> ID factorp .)
    MENOS           reduce using rule 110 (ctes -> ID factorp .)
    MAS             reduce using rule 110 (ctes -> ID factorp .)
    MAYQ            reduce using rule 110 (ctes -> ID factorp .)
    MENQ            reduce using rule 110 (ctes -> ID factorp .)
    MAYI            reduce using rule 110 (ctes -> ID factorp .)
    MENI            reduce using rule 110 (ctes -> ID factorp .)
    IGUAL           reduce using rule 110 (ctes -> ID factorp .)
    DIF             reduce using rule 110 (ctes -> ID factorp .)
    AND             reduce using rule 110 (ctes -> ID factorp .)
    OR              reduce using rule 110 (ctes -> ID factorp .)
    RETURN          reduce using rule 110 (ctes -> ID factorp .)
    READ            reduce using rule 110 (ctes -> ID factorp .)
    WRITE           reduce using rule 110 (ctes -> ID factorp .)
    IF              reduce using rule 110 (ctes -> ID factorp .)
    FOR             reduce using rule 110 (ctes -> ID factorp .)
    ID              reduce using rule 110 (ctes -> ID factorp .)
    WHILE           reduce using rule 110 (ctes -> ID factorp .)
    APAR            reduce using rule 110 (ctes -> ID factorp .)
    CTEC            reduce using rule 110 (ctes -> ID factorp .)
    CTEI            reduce using rule 110 (ctes -> ID factorp .)
    CTEF            reduce using rule 110 (ctes -> ID factorp .)
    CLLA            reduce using rule 110 (ctes -> ID factorp .)
    CPAR            reduce using rule 110 (ctes -> ID factorp .)
    CCOR            reduce using rule 110 (ctes -> ID factorp .)
    COMA            reduce using rule 110 (ctes -> ID factorp .)
    PTCOMA          reduce using rule 110 (ctes -> ID factorp .)
    TO              reduce using rule 110 (ctes -> ID factorp .)
    DO              reduce using rule 110 (ctes -> ID factorp .)


state 107

    (102) factorp -> APAR . exp factorpp CPAR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 152
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 108

    (103) factorp -> ACOR . exp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 153
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 109

    (104) factorp -> empty .

    DIV             reduce using rule 104 (factorp -> empty .)
    POR             reduce using rule 104 (factorp -> empty .)
    MENOS           reduce using rule 104 (factorp -> empty .)
    MAS             reduce using rule 104 (factorp -> empty .)
    MAYQ            reduce using rule 104 (factorp -> empty .)
    MENQ            reduce using rule 104 (factorp -> empty .)
    MAYI            reduce using rule 104 (factorp -> empty .)
    MENI            reduce using rule 104 (factorp -> empty .)
    IGUAL           reduce using rule 104 (factorp -> empty .)
    DIF             reduce using rule 104 (factorp -> empty .)
    AND             reduce using rule 104 (factorp -> empty .)
    OR              reduce using rule 104 (factorp -> empty .)
    RETURN          reduce using rule 104 (factorp -> empty .)
    READ            reduce using rule 104 (factorp -> empty .)
    WRITE           reduce using rule 104 (factorp -> empty .)
    IF              reduce using rule 104 (factorp -> empty .)
    FOR             reduce using rule 104 (factorp -> empty .)
    ID              reduce using rule 104 (factorp -> empty .)
    WHILE           reduce using rule 104 (factorp -> empty .)
    APAR            reduce using rule 104 (factorp -> empty .)
    CTEC            reduce using rule 104 (factorp -> empty .)
    CTEI            reduce using rule 104 (factorp -> empty .)
    CTEF            reduce using rule 104 (factorp -> empty .)
    CLLA            reduce using rule 104 (factorp -> empty .)
    CPAR            reduce using rule 104 (factorp -> empty .)
    CCOR            reduce using rule 104 (factorp -> empty .)
    COMA            reduce using rule 104 (factorp -> empty .)
    PTCOMA          reduce using rule 104 (factorp -> empty .)
    TO              reduce using rule 104 (factorp -> empty .)
    DO              reduce using rule 104 (factorp -> empty .)


state 110

    (77) texp -> gexp texpp .

    OR              reduce using rule 77 (texp -> gexp texpp .)
    RETURN          reduce using rule 77 (texp -> gexp texpp .)
    READ            reduce using rule 77 (texp -> gexp texpp .)
    WRITE           reduce using rule 77 (texp -> gexp texpp .)
    IF              reduce using rule 77 (texp -> gexp texpp .)
    FOR             reduce using rule 77 (texp -> gexp texpp .)
    ID              reduce using rule 77 (texp -> gexp texpp .)
    WHILE           reduce using rule 77 (texp -> gexp texpp .)
    APAR            reduce using rule 77 (texp -> gexp texpp .)
    CTEC            reduce using rule 77 (texp -> gexp texpp .)
    CTEI            reduce using rule 77 (texp -> gexp texpp .)
    CTEF            reduce using rule 77 (texp -> gexp texpp .)
    CLLA            reduce using rule 77 (texp -> gexp texpp .)
    CPAR            reduce using rule 77 (texp -> gexp texpp .)
    CCOR            reduce using rule 77 (texp -> gexp texpp .)
    COMA            reduce using rule 77 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 77 (texp -> gexp texpp .)
    TO              reduce using rule 77 (texp -> gexp texpp .)
    DO              reduce using rule 77 (texp -> gexp texpp .)


state 111

    (78) texpp -> andCheck . texp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    texp                           shift and go to state 154
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 112

    (79) texpp -> empty .

    OR              reduce using rule 79 (texpp -> empty .)
    RETURN          reduce using rule 79 (texpp -> empty .)
    READ            reduce using rule 79 (texpp -> empty .)
    WRITE           reduce using rule 79 (texpp -> empty .)
    IF              reduce using rule 79 (texpp -> empty .)
    FOR             reduce using rule 79 (texpp -> empty .)
    ID              reduce using rule 79 (texpp -> empty .)
    WHILE           reduce using rule 79 (texpp -> empty .)
    APAR            reduce using rule 79 (texpp -> empty .)
    CTEC            reduce using rule 79 (texpp -> empty .)
    CTEI            reduce using rule 79 (texpp -> empty .)
    CTEF            reduce using rule 79 (texpp -> empty .)
    CLLA            reduce using rule 79 (texpp -> empty .)
    CPAR            reduce using rule 79 (texpp -> empty .)
    CCOR            reduce using rule 79 (texpp -> empty .)
    COMA            reduce using rule 79 (texpp -> empty .)
    PTCOMA          reduce using rule 79 (texpp -> empty .)
    TO              reduce using rule 79 (texpp -> empty .)
    DO              reduce using rule 79 (texpp -> empty .)


state 113

    (80) andCheck -> AND .

    APAR            reduce using rule 80 (andCheck -> AND .)
    CTEC            reduce using rule 80 (andCheck -> AND .)
    CTEI            reduce using rule 80 (andCheck -> AND .)
    CTEF            reduce using rule 80 (andCheck -> AND .)
    ID              reduce using rule 80 (andCheck -> AND .)


state 114

    (81) gexp -> mexp gexpp .

    AND             reduce using rule 81 (gexp -> mexp gexpp .)
    OR              reduce using rule 81 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 81 (gexp -> mexp gexpp .)
    READ            reduce using rule 81 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 81 (gexp -> mexp gexpp .)
    IF              reduce using rule 81 (gexp -> mexp gexpp .)
    FOR             reduce using rule 81 (gexp -> mexp gexpp .)
    ID              reduce using rule 81 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 81 (gexp -> mexp gexpp .)
    APAR            reduce using rule 81 (gexp -> mexp gexpp .)
    CTEC            reduce using rule 81 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 81 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 81 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 81 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 81 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 81 (gexp -> mexp gexpp .)
    COMA            reduce using rule 81 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 81 (gexp -> mexp gexpp .)
    TO              reduce using rule 81 (gexp -> mexp gexpp .)
    DO              reduce using rule 81 (gexp -> mexp gexpp .)


state 115

    (82) gexpp -> addPO . mexp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    mexp                           shift and go to state 155
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 116

    (83) gexpp -> empty .

    AND             reduce using rule 83 (gexpp -> empty .)
    OR              reduce using rule 83 (gexpp -> empty .)
    RETURN          reduce using rule 83 (gexpp -> empty .)
    READ            reduce using rule 83 (gexpp -> empty .)
    WRITE           reduce using rule 83 (gexpp -> empty .)
    IF              reduce using rule 83 (gexpp -> empty .)
    FOR             reduce using rule 83 (gexpp -> empty .)
    ID              reduce using rule 83 (gexpp -> empty .)
    WHILE           reduce using rule 83 (gexpp -> empty .)
    APAR            reduce using rule 83 (gexpp -> empty .)
    CTEC            reduce using rule 83 (gexpp -> empty .)
    CTEI            reduce using rule 83 (gexpp -> empty .)
    CTEF            reduce using rule 83 (gexpp -> empty .)
    CLLA            reduce using rule 83 (gexpp -> empty .)
    CPAR            reduce using rule 83 (gexpp -> empty .)
    CCOR            reduce using rule 83 (gexpp -> empty .)
    COMA            reduce using rule 83 (gexpp -> empty .)
    PTCOMA          reduce using rule 83 (gexpp -> empty .)
    TO              reduce using rule 83 (gexpp -> empty .)
    DO              reduce using rule 83 (gexpp -> empty .)


state 117

    (84) addPO -> MAYQ .

    APAR            reduce using rule 84 (addPO -> MAYQ .)
    CTEC            reduce using rule 84 (addPO -> MAYQ .)
    CTEI            reduce using rule 84 (addPO -> MAYQ .)
    CTEF            reduce using rule 84 (addPO -> MAYQ .)
    ID              reduce using rule 84 (addPO -> MAYQ .)


state 118

    (85) addPO -> MENQ .

    APAR            reduce using rule 85 (addPO -> MENQ .)
    CTEC            reduce using rule 85 (addPO -> MENQ .)
    CTEI            reduce using rule 85 (addPO -> MENQ .)
    CTEF            reduce using rule 85 (addPO -> MENQ .)
    ID              reduce using rule 85 (addPO -> MENQ .)


state 119

    (86) addPO -> MAYI .

    APAR            reduce using rule 86 (addPO -> MAYI .)
    CTEC            reduce using rule 86 (addPO -> MAYI .)
    CTEI            reduce using rule 86 (addPO -> MAYI .)
    CTEF            reduce using rule 86 (addPO -> MAYI .)
    ID              reduce using rule 86 (addPO -> MAYI .)


state 120

    (87) addPO -> MENI .

    APAR            reduce using rule 87 (addPO -> MENI .)
    CTEC            reduce using rule 87 (addPO -> MENI .)
    CTEI            reduce using rule 87 (addPO -> MENI .)
    CTEF            reduce using rule 87 (addPO -> MENI .)
    ID              reduce using rule 87 (addPO -> MENI .)


state 121

    (88) addPO -> IGUAL . IGUAL

    IGUAL           shift and go to state 156


state 122

    (89) addPO -> DIF .

    APAR            reduce using rule 89 (addPO -> DIF .)
    CTEC            reduce using rule 89 (addPO -> DIF .)
    CTEI            reduce using rule 89 (addPO -> DIF .)
    CTEF            reduce using rule 89 (addPO -> DIF .)
    ID              reduce using rule 89 (addPO -> DIF .)


state 123

    (90) mexp -> termino mexpp .

    MAYQ            reduce using rule 90 (mexp -> termino mexpp .)
    MENQ            reduce using rule 90 (mexp -> termino mexpp .)
    MAYI            reduce using rule 90 (mexp -> termino mexpp .)
    MENI            reduce using rule 90 (mexp -> termino mexpp .)
    IGUAL           reduce using rule 90 (mexp -> termino mexpp .)
    DIF             reduce using rule 90 (mexp -> termino mexpp .)
    AND             reduce using rule 90 (mexp -> termino mexpp .)
    OR              reduce using rule 90 (mexp -> termino mexpp .)
    RETURN          reduce using rule 90 (mexp -> termino mexpp .)
    READ            reduce using rule 90 (mexp -> termino mexpp .)
    WRITE           reduce using rule 90 (mexp -> termino mexpp .)
    IF              reduce using rule 90 (mexp -> termino mexpp .)
    FOR             reduce using rule 90 (mexp -> termino mexpp .)
    ID              reduce using rule 90 (mexp -> termino mexpp .)
    WHILE           reduce using rule 90 (mexp -> termino mexpp .)
    APAR            reduce using rule 90 (mexp -> termino mexpp .)
    CTEC            reduce using rule 90 (mexp -> termino mexpp .)
    CTEI            reduce using rule 90 (mexp -> termino mexpp .)
    CTEF            reduce using rule 90 (mexp -> termino mexpp .)
    CLLA            reduce using rule 90 (mexp -> termino mexpp .)
    CPAR            reduce using rule 90 (mexp -> termino mexpp .)
    CCOR            reduce using rule 90 (mexp -> termino mexpp .)
    COMA            reduce using rule 90 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 90 (mexp -> termino mexpp .)
    TO              reduce using rule 90 (mexp -> termino mexpp .)
    DO              reduce using rule 90 (mexp -> termino mexpp .)


state 124

    (91) mexpp -> operSR . mexp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    mexp                           shift and go to state 157
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 125

    (92) mexpp -> empty .

    MAYQ            reduce using rule 92 (mexpp -> empty .)
    MENQ            reduce using rule 92 (mexpp -> empty .)
    MAYI            reduce using rule 92 (mexpp -> empty .)
    MENI            reduce using rule 92 (mexpp -> empty .)
    IGUAL           reduce using rule 92 (mexpp -> empty .)
    DIF             reduce using rule 92 (mexpp -> empty .)
    AND             reduce using rule 92 (mexpp -> empty .)
    OR              reduce using rule 92 (mexpp -> empty .)
    RETURN          reduce using rule 92 (mexpp -> empty .)
    READ            reduce using rule 92 (mexpp -> empty .)
    WRITE           reduce using rule 92 (mexpp -> empty .)
    IF              reduce using rule 92 (mexpp -> empty .)
    FOR             reduce using rule 92 (mexpp -> empty .)
    ID              reduce using rule 92 (mexpp -> empty .)
    WHILE           reduce using rule 92 (mexpp -> empty .)
    APAR            reduce using rule 92 (mexpp -> empty .)
    CTEC            reduce using rule 92 (mexpp -> empty .)
    CTEI            reduce using rule 92 (mexpp -> empty .)
    CTEF            reduce using rule 92 (mexpp -> empty .)
    CLLA            reduce using rule 92 (mexpp -> empty .)
    CPAR            reduce using rule 92 (mexpp -> empty .)
    CCOR            reduce using rule 92 (mexpp -> empty .)
    COMA            reduce using rule 92 (mexpp -> empty .)
    PTCOMA          reduce using rule 92 (mexpp -> empty .)
    TO              reduce using rule 92 (mexpp -> empty .)
    DO              reduce using rule 92 (mexpp -> empty .)


state 126

    (93) operSR -> MENOS .

    APAR            reduce using rule 93 (operSR -> MENOS .)
    CTEC            reduce using rule 93 (operSR -> MENOS .)
    CTEI            reduce using rule 93 (operSR -> MENOS .)
    CTEF            reduce using rule 93 (operSR -> MENOS .)
    ID              reduce using rule 93 (operSR -> MENOS .)


state 127

    (94) operSR -> MAS .

    APAR            reduce using rule 94 (operSR -> MAS .)
    CTEC            reduce using rule 94 (operSR -> MAS .)
    CTEI            reduce using rule 94 (operSR -> MAS .)
    CTEF            reduce using rule 94 (operSR -> MAS .)
    ID              reduce using rule 94 (operSR -> MAS .)


state 128

    (95) termino -> factor terminop .

    MENOS           reduce using rule 95 (termino -> factor terminop .)
    MAS             reduce using rule 95 (termino -> factor terminop .)
    MAYQ            reduce using rule 95 (termino -> factor terminop .)
    MENQ            reduce using rule 95 (termino -> factor terminop .)
    MAYI            reduce using rule 95 (termino -> factor terminop .)
    MENI            reduce using rule 95 (termino -> factor terminop .)
    IGUAL           reduce using rule 95 (termino -> factor terminop .)
    DIF             reduce using rule 95 (termino -> factor terminop .)
    AND             reduce using rule 95 (termino -> factor terminop .)
    OR              reduce using rule 95 (termino -> factor terminop .)
    RETURN          reduce using rule 95 (termino -> factor terminop .)
    READ            reduce using rule 95 (termino -> factor terminop .)
    WRITE           reduce using rule 95 (termino -> factor terminop .)
    IF              reduce using rule 95 (termino -> factor terminop .)
    FOR             reduce using rule 95 (termino -> factor terminop .)
    ID              reduce using rule 95 (termino -> factor terminop .)
    WHILE           reduce using rule 95 (termino -> factor terminop .)
    APAR            reduce using rule 95 (termino -> factor terminop .)
    CTEC            reduce using rule 95 (termino -> factor terminop .)
    CTEI            reduce using rule 95 (termino -> factor terminop .)
    CTEF            reduce using rule 95 (termino -> factor terminop .)
    CLLA            reduce using rule 95 (termino -> factor terminop .)
    CPAR            reduce using rule 95 (termino -> factor terminop .)
    CCOR            reduce using rule 95 (termino -> factor terminop .)
    COMA            reduce using rule 95 (termino -> factor terminop .)
    PTCOMA          reduce using rule 95 (termino -> factor terminop .)
    TO              reduce using rule 95 (termino -> factor terminop .)
    DO              reduce using rule 95 (termino -> factor terminop .)


state 129

    (96) terminop -> oper . termino
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    termino                        shift and go to state 158
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 130

    (97) terminop -> empty .

    MENOS           reduce using rule 97 (terminop -> empty .)
    MAS             reduce using rule 97 (terminop -> empty .)
    MAYQ            reduce using rule 97 (terminop -> empty .)
    MENQ            reduce using rule 97 (terminop -> empty .)
    MAYI            reduce using rule 97 (terminop -> empty .)
    MENI            reduce using rule 97 (terminop -> empty .)
    IGUAL           reduce using rule 97 (terminop -> empty .)
    DIF             reduce using rule 97 (terminop -> empty .)
    AND             reduce using rule 97 (terminop -> empty .)
    OR              reduce using rule 97 (terminop -> empty .)
    RETURN          reduce using rule 97 (terminop -> empty .)
    READ            reduce using rule 97 (terminop -> empty .)
    WRITE           reduce using rule 97 (terminop -> empty .)
    IF              reduce using rule 97 (terminop -> empty .)
    FOR             reduce using rule 97 (terminop -> empty .)
    ID              reduce using rule 97 (terminop -> empty .)
    WHILE           reduce using rule 97 (terminop -> empty .)
    APAR            reduce using rule 97 (terminop -> empty .)
    CTEC            reduce using rule 97 (terminop -> empty .)
    CTEI            reduce using rule 97 (terminop -> empty .)
    CTEF            reduce using rule 97 (terminop -> empty .)
    CLLA            reduce using rule 97 (terminop -> empty .)
    CPAR            reduce using rule 97 (terminop -> empty .)
    CCOR            reduce using rule 97 (terminop -> empty .)
    COMA            reduce using rule 97 (terminop -> empty .)
    PTCOMA          reduce using rule 97 (terminop -> empty .)
    TO              reduce using rule 97 (terminop -> empty .)
    DO              reduce using rule 97 (terminop -> empty .)


state 131

    (98) oper -> DIV .

    APAR            reduce using rule 98 (oper -> DIV .)
    CTEC            reduce using rule 98 (oper -> DIV .)
    CTEI            reduce using rule 98 (oper -> DIV .)
    CTEF            reduce using rule 98 (oper -> DIV .)
    ID              reduce using rule 98 (oper -> DIV .)


state 132

    (99) oper -> POR .

    APAR            reduce using rule 99 (oper -> POR .)
    CTEC            reduce using rule 99 (oper -> POR .)
    CTEI            reduce using rule 99 (oper -> POR .)
    CTEF            reduce using rule 99 (oper -> POR .)
    ID              reduce using rule 99 (oper -> POR .)


state 133

    (16) funcspp -> APAR params CPAR PTCOMA varss . ALLA addsize estatutos CLLA endfunction funcs

    ALLA            shift and go to state 159


state 134

    (34) params -> tipo DOSPNTS insertParams ididx . paramsp
    (37) paramsp -> . COMA params
    (38) paramsp -> . empty
    (111) empty -> .

    COMA            shift and go to state 161
    CPAR            reduce using rule 111 (empty -> .)

    paramsp                        shift and go to state 160
    empty                          shift and go to state 162

state 135

    (12) varspp -> COMA insertVar varsppp varspp .

    INT             reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    FLOAT           reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    CHAR            reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    FUNCTION        reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    MAIN            reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    ALLA            reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)


state 136

    (100) factor -> APAR exp CPAR .

    DIV             reduce using rule 100 (factor -> APAR exp CPAR .)
    POR             reduce using rule 100 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 100 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 100 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 100 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 100 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 100 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 100 (factor -> APAR exp CPAR .)
    IGUAL           reduce using rule 100 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 100 (factor -> APAR exp CPAR .)
    AND             reduce using rule 100 (factor -> APAR exp CPAR .)
    OR              reduce using rule 100 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 100 (factor -> APAR exp CPAR .)
    READ            reduce using rule 100 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 100 (factor -> APAR exp CPAR .)
    IF              reduce using rule 100 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 100 (factor -> APAR exp CPAR .)
    ID              reduce using rule 100 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 100 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 100 (factor -> APAR exp CPAR .)
    CTEC            reduce using rule 100 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 100 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 100 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 100 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 100 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 100 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 100 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 100 (factor -> APAR exp CPAR .)
    TO              reduce using rule 100 (factor -> APAR exp CPAR .)
    DO              reduce using rule 100 (factor -> APAR exp CPAR .)


state 137

    (39) asig -> varAs ididx igualAs . asigpp PTCOMA
    (46) asigpp -> . exp
    (47) asigpp -> . ACOR asigp CCOR
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    ACOR            shift and go to state 165
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    asigpp                         shift and go to state 163
    exp                            shift and go to state 164
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 138

    (41) igualAs -> IGUAL .

    ACOR            reduce using rule 41 (igualAs -> IGUAL .)
    APAR            reduce using rule 41 (igualAs -> IGUAL .)
    CTEC            reduce using rule 41 (igualAs -> IGUAL .)
    CTEI            reduce using rule 41 (igualAs -> IGUAL .)
    CTEF            reduce using rule 41 (igualAs -> IGUAL .)
    ID              reduce using rule 41 (igualAs -> IGUAL .)


state 139

    (48) ididx -> ACOR exp . CCOR

    CCOR            shift and go to state 166


state 140

    (50) return -> RETURN APAR exp . CPAR PTCOMA

    CPAR            shift and go to state 167


state 141

    (51) lectura -> READ APAR readId . ididx lecturapp CPAR PTCOMA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (111) empty -> .

    ACOR            shift and go to state 94
    COMA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)

    ididx                          shift and go to state 168
    empty                          shift and go to state 95

state 142

    (52) readId -> ID .

    ACOR            reduce using rule 52 (readId -> ID .)
    COMA            reduce using rule 52 (readId -> ID .)
    CPAR            reduce using rule 52 (readId -> ID .)


state 143

    (55) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (60) escriturapp -> . COMA escriturap
    (61) escriturapp -> . empty
    (111) empty -> .

    COMA            shift and go to state 170
    CPAR            reduce using rule 111 (empty -> .)

    escriturapp                    shift and go to state 169
    empty                          shift and go to state 171

state 144

    (56) escriturap -> pushEsc .

    COMA            reduce using rule 56 (escriturap -> pushEsc .)
    CPAR            reduce using rule 56 (escriturap -> pushEsc .)


state 145

    (57) escriturap -> exp .

    COMA            reduce using rule 57 (escriturap -> exp .)
    CPAR            reduce using rule 57 (escriturap -> exp .)


state 146

    (58) pushEsc -> STRING .

    COMA            reduce using rule 58 (pushEsc -> STRING .)
    CPAR            reduce using rule 58 (pushEsc -> STRING .)


state 147

    (59) pushEsc -> CTEC .
    (107) ctes -> CTEC .

  ! reduce/reduce conflict for COMA resolved using rule 59 (pushEsc -> CTEC .)
  ! reduce/reduce conflict for CPAR resolved using rule 59 (pushEsc -> CTEC .)
    COMA            reduce using rule 59 (pushEsc -> CTEC .)
    CPAR            reduce using rule 59 (pushEsc -> CTEC .)
    DIV             reduce using rule 107 (ctes -> CTEC .)
    POR             reduce using rule 107 (ctes -> CTEC .)
    MENOS           reduce using rule 107 (ctes -> CTEC .)
    MAS             reduce using rule 107 (ctes -> CTEC .)
    MAYQ            reduce using rule 107 (ctes -> CTEC .)
    MENQ            reduce using rule 107 (ctes -> CTEC .)
    MAYI            reduce using rule 107 (ctes -> CTEC .)
    MENI            reduce using rule 107 (ctes -> CTEC .)
    IGUAL           reduce using rule 107 (ctes -> CTEC .)
    DIF             reduce using rule 107 (ctes -> CTEC .)
    AND             reduce using rule 107 (ctes -> CTEC .)
    OR              reduce using rule 107 (ctes -> CTEC .)

  ! COMA            [ reduce using rule 107 (ctes -> CTEC .) ]
  ! CPAR            [ reduce using rule 107 (ctes -> CTEC .) ]


state 148

    (62) cond -> IF APAR exp . checkCond THEN ALLA estatutos CLLA condpp
    (66) checkCond -> . CPAR

    CPAR            shift and go to state 173

    checkCond                      shift and go to state 172

state 149

    (67) while -> saveWhile APAR exp . checkWhileCond DO ALLA estatutos CLLA
    (69) checkWhileCond -> . CPAR

    CPAR            shift and go to state 175

    checkWhileCond                 shift and go to state 174

state 150

    (70) for -> FOR varFor ididx . IGUAL exp initFor exp beforeDo ALLA estatutos CLLA

    IGUAL           shift and go to state 176


state 151

    (75) expp -> OR exp .

    RETURN          reduce using rule 75 (expp -> OR exp .)
    READ            reduce using rule 75 (expp -> OR exp .)
    WRITE           reduce using rule 75 (expp -> OR exp .)
    IF              reduce using rule 75 (expp -> OR exp .)
    FOR             reduce using rule 75 (expp -> OR exp .)
    ID              reduce using rule 75 (expp -> OR exp .)
    WHILE           reduce using rule 75 (expp -> OR exp .)
    APAR            reduce using rule 75 (expp -> OR exp .)
    CTEC            reduce using rule 75 (expp -> OR exp .)
    CTEI            reduce using rule 75 (expp -> OR exp .)
    CTEF            reduce using rule 75 (expp -> OR exp .)
    CLLA            reduce using rule 75 (expp -> OR exp .)
    CPAR            reduce using rule 75 (expp -> OR exp .)
    CCOR            reduce using rule 75 (expp -> OR exp .)
    COMA            reduce using rule 75 (expp -> OR exp .)
    PTCOMA          reduce using rule 75 (expp -> OR exp .)
    TO              reduce using rule 75 (expp -> OR exp .)
    DO              reduce using rule 75 (expp -> OR exp .)


state 152

    (102) factorp -> APAR exp . factorpp CPAR
    (105) factorpp -> . COMA exp factorpp
    (106) factorpp -> . empty
    (111) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 111 (empty -> .)

    factorpp                       shift and go to state 177
    empty                          shift and go to state 179

state 153

    (103) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 180


state 154

    (78) texpp -> andCheck texp .

    OR              reduce using rule 78 (texpp -> andCheck texp .)
    RETURN          reduce using rule 78 (texpp -> andCheck texp .)
    READ            reduce using rule 78 (texpp -> andCheck texp .)
    WRITE           reduce using rule 78 (texpp -> andCheck texp .)
    IF              reduce using rule 78 (texpp -> andCheck texp .)
    FOR             reduce using rule 78 (texpp -> andCheck texp .)
    ID              reduce using rule 78 (texpp -> andCheck texp .)
    WHILE           reduce using rule 78 (texpp -> andCheck texp .)
    APAR            reduce using rule 78 (texpp -> andCheck texp .)
    CTEC            reduce using rule 78 (texpp -> andCheck texp .)
    CTEI            reduce using rule 78 (texpp -> andCheck texp .)
    CTEF            reduce using rule 78 (texpp -> andCheck texp .)
    CLLA            reduce using rule 78 (texpp -> andCheck texp .)
    CPAR            reduce using rule 78 (texpp -> andCheck texp .)
    CCOR            reduce using rule 78 (texpp -> andCheck texp .)
    COMA            reduce using rule 78 (texpp -> andCheck texp .)
    PTCOMA          reduce using rule 78 (texpp -> andCheck texp .)
    TO              reduce using rule 78 (texpp -> andCheck texp .)
    DO              reduce using rule 78 (texpp -> andCheck texp .)


state 155

    (82) gexpp -> addPO mexp .

    AND             reduce using rule 82 (gexpp -> addPO mexp .)
    OR              reduce using rule 82 (gexpp -> addPO mexp .)
    RETURN          reduce using rule 82 (gexpp -> addPO mexp .)
    READ            reduce using rule 82 (gexpp -> addPO mexp .)
    WRITE           reduce using rule 82 (gexpp -> addPO mexp .)
    IF              reduce using rule 82 (gexpp -> addPO mexp .)
    FOR             reduce using rule 82 (gexpp -> addPO mexp .)
    ID              reduce using rule 82 (gexpp -> addPO mexp .)
    WHILE           reduce using rule 82 (gexpp -> addPO mexp .)
    APAR            reduce using rule 82 (gexpp -> addPO mexp .)
    CTEC            reduce using rule 82 (gexpp -> addPO mexp .)
    CTEI            reduce using rule 82 (gexpp -> addPO mexp .)
    CTEF            reduce using rule 82 (gexpp -> addPO mexp .)
    CLLA            reduce using rule 82 (gexpp -> addPO mexp .)
    CPAR            reduce using rule 82 (gexpp -> addPO mexp .)
    CCOR            reduce using rule 82 (gexpp -> addPO mexp .)
    COMA            reduce using rule 82 (gexpp -> addPO mexp .)
    PTCOMA          reduce using rule 82 (gexpp -> addPO mexp .)
    TO              reduce using rule 82 (gexpp -> addPO mexp .)
    DO              reduce using rule 82 (gexpp -> addPO mexp .)


state 156

    (88) addPO -> IGUAL IGUAL .

    APAR            reduce using rule 88 (addPO -> IGUAL IGUAL .)
    CTEC            reduce using rule 88 (addPO -> IGUAL IGUAL .)
    CTEI            reduce using rule 88 (addPO -> IGUAL IGUAL .)
    CTEF            reduce using rule 88 (addPO -> IGUAL IGUAL .)
    ID              reduce using rule 88 (addPO -> IGUAL IGUAL .)


state 157

    (91) mexpp -> operSR mexp .

    MAYQ            reduce using rule 91 (mexpp -> operSR mexp .)
    MENQ            reduce using rule 91 (mexpp -> operSR mexp .)
    MAYI            reduce using rule 91 (mexpp -> operSR mexp .)
    MENI            reduce using rule 91 (mexpp -> operSR mexp .)
    IGUAL           reduce using rule 91 (mexpp -> operSR mexp .)
    DIF             reduce using rule 91 (mexpp -> operSR mexp .)
    AND             reduce using rule 91 (mexpp -> operSR mexp .)
    OR              reduce using rule 91 (mexpp -> operSR mexp .)
    RETURN          reduce using rule 91 (mexpp -> operSR mexp .)
    READ            reduce using rule 91 (mexpp -> operSR mexp .)
    WRITE           reduce using rule 91 (mexpp -> operSR mexp .)
    IF              reduce using rule 91 (mexpp -> operSR mexp .)
    FOR             reduce using rule 91 (mexpp -> operSR mexp .)
    ID              reduce using rule 91 (mexpp -> operSR mexp .)
    WHILE           reduce using rule 91 (mexpp -> operSR mexp .)
    APAR            reduce using rule 91 (mexpp -> operSR mexp .)
    CTEC            reduce using rule 91 (mexpp -> operSR mexp .)
    CTEI            reduce using rule 91 (mexpp -> operSR mexp .)
    CTEF            reduce using rule 91 (mexpp -> operSR mexp .)
    CLLA            reduce using rule 91 (mexpp -> operSR mexp .)
    CPAR            reduce using rule 91 (mexpp -> operSR mexp .)
    CCOR            reduce using rule 91 (mexpp -> operSR mexp .)
    COMA            reduce using rule 91 (mexpp -> operSR mexp .)
    PTCOMA          reduce using rule 91 (mexpp -> operSR mexp .)
    TO              reduce using rule 91 (mexpp -> operSR mexp .)
    DO              reduce using rule 91 (mexpp -> operSR mexp .)


state 158

    (96) terminop -> oper termino .

    MENOS           reduce using rule 96 (terminop -> oper termino .)
    MAS             reduce using rule 96 (terminop -> oper termino .)
    MAYQ            reduce using rule 96 (terminop -> oper termino .)
    MENQ            reduce using rule 96 (terminop -> oper termino .)
    MAYI            reduce using rule 96 (terminop -> oper termino .)
    MENI            reduce using rule 96 (terminop -> oper termino .)
    IGUAL           reduce using rule 96 (terminop -> oper termino .)
    DIF             reduce using rule 96 (terminop -> oper termino .)
    AND             reduce using rule 96 (terminop -> oper termino .)
    OR              reduce using rule 96 (terminop -> oper termino .)
    RETURN          reduce using rule 96 (terminop -> oper termino .)
    READ            reduce using rule 96 (terminop -> oper termino .)
    WRITE           reduce using rule 96 (terminop -> oper termino .)
    IF              reduce using rule 96 (terminop -> oper termino .)
    FOR             reduce using rule 96 (terminop -> oper termino .)
    ID              reduce using rule 96 (terminop -> oper termino .)
    WHILE           reduce using rule 96 (terminop -> oper termino .)
    APAR            reduce using rule 96 (terminop -> oper termino .)
    CTEC            reduce using rule 96 (terminop -> oper termino .)
    CTEI            reduce using rule 96 (terminop -> oper termino .)
    CTEF            reduce using rule 96 (terminop -> oper termino .)
    CLLA            reduce using rule 96 (terminop -> oper termino .)
    CPAR            reduce using rule 96 (terminop -> oper termino .)
    CCOR            reduce using rule 96 (terminop -> oper termino .)
    COMA            reduce using rule 96 (terminop -> oper termino .)
    PTCOMA          reduce using rule 96 (terminop -> oper termino .)
    TO              reduce using rule 96 (terminop -> oper termino .)
    DO              reduce using rule 96 (terminop -> oper termino .)


state 159

    (16) funcspp -> APAR params CPAR PTCOMA varss ALLA . addsize estatutos CLLA endfunction funcs
    (18) addsize -> .

    RETURN          reduce using rule 18 (addsize -> .)
    READ            reduce using rule 18 (addsize -> .)
    WRITE           reduce using rule 18 (addsize -> .)
    IF              reduce using rule 18 (addsize -> .)
    FOR             reduce using rule 18 (addsize -> .)
    ID              reduce using rule 18 (addsize -> .)
    WHILE           reduce using rule 18 (addsize -> .)
    APAR            reduce using rule 18 (addsize -> .)
    CTEC            reduce using rule 18 (addsize -> .)
    CTEI            reduce using rule 18 (addsize -> .)
    CTEF            reduce using rule 18 (addsize -> .)

    addsize                        shift and go to state 181

state 160

    (34) params -> tipo DOSPNTS insertParams ididx paramsp .

    CPAR            reduce using rule 34 (params -> tipo DOSPNTS insertParams ididx paramsp .)


state 161

    (37) paramsp -> COMA . params
    (34) params -> . tipo DOSPNTS insertParams ididx paramsp
    (35) params -> . empty
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR
    (111) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 111 (empty -> .)

    params                         shift and go to state 182
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 162

    (38) paramsp -> empty .

    CPAR            reduce using rule 38 (paramsp -> empty .)


state 163

    (39) asig -> varAs ididx igualAs asigpp . PTCOMA

    PTCOMA          shift and go to state 183


state 164

    (46) asigpp -> exp .

    PTCOMA          reduce using rule 46 (asigpp -> exp .)


state 165

    (47) asigpp -> ACOR . asigp CCOR
    (42) asigp -> . exp asigppp
    (43) asigp -> . empty
    (74) exp -> . texp expp
    (111) empty -> .
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CCOR            reduce using rule 111 (empty -> .)
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    asigp                          shift and go to state 184
    exp                            shift and go to state 185
    empty                          shift and go to state 186
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 166

    (48) ididx -> ACOR exp CCOR .

    IGUAL           reduce using rule 48 (ididx -> ACOR exp CCOR .)
    COMA            reduce using rule 48 (ididx -> ACOR exp CCOR .)
    CPAR            reduce using rule 48 (ididx -> ACOR exp CCOR .)


state 167

    (50) return -> RETURN APAR exp CPAR . PTCOMA

    PTCOMA          shift and go to state 187


state 168

    (51) lectura -> READ APAR readId ididx . lecturapp CPAR PTCOMA
    (53) lecturapp -> . COMA readId ididx lecturapp
    (54) lecturapp -> . empty
    (111) empty -> .

    COMA            shift and go to state 189
    CPAR            reduce using rule 111 (empty -> .)

    lecturapp                      shift and go to state 188
    empty                          shift and go to state 190

state 169

    (55) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 191


state 170

    (60) escriturapp -> COMA . escriturap
    (56) escriturap -> . pushEsc
    (57) escriturap -> . exp
    (58) pushEsc -> . STRING
    (59) pushEsc -> . CTEC
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    STRING          shift and go to state 146
    CTEC            shift and go to state 147
    APAR            shift and go to state 48
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    escriturap                     shift and go to state 192
    pushEsc                        shift and go to state 144
    exp                            shift and go to state 145
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 171

    (61) escriturapp -> empty .

    CPAR            reduce using rule 61 (escriturapp -> empty .)


state 172

    (62) cond -> IF APAR exp checkCond . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 193


state 173

    (66) checkCond -> CPAR .

    THEN            reduce using rule 66 (checkCond -> CPAR .)


state 174

    (67) while -> saveWhile APAR exp checkWhileCond . DO ALLA estatutos CLLA

    DO              shift and go to state 194


state 175

    (69) checkWhileCond -> CPAR .

    DO              reduce using rule 69 (checkWhileCond -> CPAR .)


state 176

    (70) for -> FOR varFor ididx IGUAL . exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 195
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 177

    (102) factorp -> APAR exp factorpp . CPAR

    CPAR            shift and go to state 196


state 178

    (105) factorpp -> COMA . exp factorpp
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 197
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 179

    (106) factorpp -> empty .

    CPAR            reduce using rule 106 (factorpp -> empty .)


state 180

    (103) factorp -> ACOR exp CCOR .

    DIV             reduce using rule 103 (factorp -> ACOR exp CCOR .)
    POR             reduce using rule 103 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 103 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 103 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    IGUAL           reduce using rule 103 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 103 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 103 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 103 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 103 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 103 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 103 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 103 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 103 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 103 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    CTEC            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 103 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 103 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 103 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 103 (factorp -> ACOR exp CCOR .)


state 181

    (16) funcspp -> APAR params CPAR PTCOMA varss ALLA addsize . estatutos CLLA endfunction funcs
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    estatutos                      shift and go to state 198
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 182

    (37) paramsp -> COMA params .

    CPAR            reduce using rule 37 (paramsp -> COMA params .)


state 183

    (39) asig -> varAs ididx igualAs asigpp PTCOMA .

    RETURN          reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    READ            reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WRITE           reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    IF              reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    FOR             reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    ID              reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WHILE           reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    APAR            reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEC            reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEI            reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEF            reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CLLA            reduce using rule 39 (asig -> varAs ididx igualAs asigpp PTCOMA .)


state 184

    (47) asigpp -> ACOR asigp . CCOR

    CCOR            shift and go to state 199


state 185

    (42) asigp -> exp . asigppp
    (44) asigppp -> . COMA asigp
    (45) asigppp -> . empty
    (111) empty -> .

    COMA            shift and go to state 201
    CCOR            reduce using rule 111 (empty -> .)

    asigppp                        shift and go to state 200
    empty                          shift and go to state 202

state 186

    (43) asigp -> empty .

    CCOR            reduce using rule 43 (asigp -> empty .)


state 187

    (50) return -> RETURN APAR exp CPAR PTCOMA .

    RETURN          reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    READ            reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    WRITE           reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    IF              reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    FOR             reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    ID              reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    WHILE           reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    APAR            reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEC            reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEI            reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEF            reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)
    CLLA            reduce using rule 50 (return -> RETURN APAR exp CPAR PTCOMA .)


state 188

    (51) lectura -> READ APAR readId ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 203


state 189

    (53) lecturapp -> COMA . readId ididx lecturapp
    (52) readId -> . ID

    ID              shift and go to state 142

    readId                         shift and go to state 204

state 190

    (54) lecturapp -> empty .

    CPAR            reduce using rule 54 (lecturapp -> empty .)


state 191

    (55) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 205


state 192

    (60) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 60 (escriturapp -> COMA escriturap .)


state 193

    (62) cond -> IF APAR exp checkCond THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 206


state 194

    (67) while -> saveWhile APAR exp checkWhileCond DO . ALLA estatutos CLLA

    ALLA            shift and go to state 207


state 195

    (70) for -> FOR varFor ididx IGUAL exp . initFor exp beforeDo ALLA estatutos CLLA
    (72) initFor -> . TO

    TO              shift and go to state 209

    initFor                        shift and go to state 208

state 196

    (102) factorp -> APAR exp factorpp CPAR .

    DIV             reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    POR             reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    MENOS           reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    MAS             reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    MAYQ            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    MENQ            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    MAYI            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    MENI            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    IGUAL           reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    DIF             reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    AND             reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    OR              reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    RETURN          reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    READ            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    WRITE           reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    IF              reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    FOR             reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    ID              reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    WHILE           reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    APAR            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    CTEC            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    CTEI            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    CTEF            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    CLLA            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    CPAR            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    CCOR            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    COMA            reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    PTCOMA          reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    TO              reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)
    DO              reduce using rule 102 (factorp -> APAR exp factorpp CPAR .)


state 197

    (105) factorpp -> COMA exp . factorpp
    (105) factorpp -> . COMA exp factorpp
    (106) factorpp -> . empty
    (111) empty -> .

    COMA            shift and go to state 178
    CPAR            reduce using rule 111 (empty -> .)

    factorpp                       shift and go to state 210
    empty                          shift and go to state 179

state 198

    (16) funcspp -> APAR params CPAR PTCOMA varss ALLA addsize estatutos . CLLA endfunction funcs

    CLLA            shift and go to state 211


state 199

    (47) asigpp -> ACOR asigp CCOR .

    PTCOMA          reduce using rule 47 (asigpp -> ACOR asigp CCOR .)


state 200

    (42) asigp -> exp asigppp .

    CCOR            reduce using rule 42 (asigp -> exp asigppp .)


state 201

    (44) asigppp -> COMA . asigp
    (42) asigp -> . exp asigppp
    (43) asigp -> . empty
    (74) exp -> . texp expp
    (111) empty -> .
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    CCOR            reduce using rule 111 (empty -> .)
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    asigp                          shift and go to state 212
    exp                            shift and go to state 185
    empty                          shift and go to state 186
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 202

    (45) asigppp -> empty .

    CCOR            reduce using rule 45 (asigppp -> empty .)


state 203

    (51) lectura -> READ APAR readId ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 213


state 204

    (53) lecturapp -> COMA readId . ididx lecturapp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (111) empty -> .

    ACOR            shift and go to state 94
    COMA            reduce using rule 111 (empty -> .)
    CPAR            reduce using rule 111 (empty -> .)

    ididx                          shift and go to state 214
    empty                          shift and go to state 95

state 205

    (55) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    RETURN          reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    ID              reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEC            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 55 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 206

    (62) cond -> IF APAR exp checkCond THEN ALLA . estatutos CLLA condpp
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    exp                            shift and go to state 57
    estatutos                      shift and go to state 215
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 207

    (67) while -> saveWhile APAR exp checkWhileCond DO ALLA . estatutos CLLA
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    saveWhile                      shift and go to state 63
    exp                            shift and go to state 57
    estatutos                      shift and go to state 216
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 208

    (70) for -> FOR varFor ididx IGUAL exp initFor . exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 217
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 209

    (72) initFor -> TO .

    APAR            reduce using rule 72 (initFor -> TO .)
    CTEC            reduce using rule 72 (initFor -> TO .)
    CTEI            reduce using rule 72 (initFor -> TO .)
    CTEF            reduce using rule 72 (initFor -> TO .)
    ID              reduce using rule 72 (initFor -> TO .)


state 210

    (105) factorpp -> COMA exp factorpp .

    CPAR            reduce using rule 105 (factorpp -> COMA exp factorpp .)


state 211

    (16) funcspp -> APAR params CPAR PTCOMA varss ALLA addsize estatutos CLLA . endfunction funcs
    (17) endfunction -> .

    FUNCTION        reduce using rule 17 (endfunction -> .)
    MAIN            reduce using rule 17 (endfunction -> .)

    endfunction                    shift and go to state 218

state 212

    (44) asigppp -> COMA asigp .

    CCOR            reduce using rule 44 (asigppp -> COMA asigp .)


state 213

    (51) lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .

    RETURN          reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    ID              reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEC            reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 51 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)


state 214

    (53) lecturapp -> COMA readId ididx . lecturapp
    (53) lecturapp -> . COMA readId ididx lecturapp
    (54) lecturapp -> . empty
    (111) empty -> .

    COMA            shift and go to state 189
    CPAR            reduce using rule 111 (empty -> .)

    lecturapp                      shift and go to state 219
    empty                          shift and go to state 190

state 215

    (62) cond -> IF APAR exp checkCond THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 220


state 216

    (67) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos . CLLA

    CLLA            shift and go to state 221


state 217

    (70) for -> FOR varFor ididx IGUAL exp initFor exp . beforeDo ALLA estatutos CLLA
    (73) beforeDo -> . DO

    DO              shift and go to state 223

    beforeDo                       shift and go to state 222

state 218

    (16) funcspp -> APAR params CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction . funcs
    (13) funcs -> . FUNCTION funcsp insertFunc funcspp
    (14) funcs -> . empty
    (111) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 111 (empty -> .)

    funcs                          shift and go to state 224
    empty                          shift and go to state 11

state 219

    (53) lecturapp -> COMA readId ididx lecturapp .

    CPAR            reduce using rule 53 (lecturapp -> COMA readId ididx lecturapp .)


state 220

    (62) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA . condpp
    (63) condpp -> . checkElse ALLA estatutos CLLA
    (64) condpp -> . empty
    (65) checkElse -> . ELSE
    (111) empty -> .

    ELSE            shift and go to state 228
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    WRITE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    APAR            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CLLA            reduce using rule 111 (empty -> .)

    condpp                         shift and go to state 225
    checkElse                      shift and go to state 226
    empty                          shift and go to state 227

state 221

    (67) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .

    RETURN          reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    READ            reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    IF              reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    FOR             reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    ID              reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    APAR            reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEC            reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 67 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)


state 222

    (70) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo . ALLA estatutos CLLA

    ALLA            shift and go to state 229


state 223

    (73) beforeDo -> DO .

    ALLA            reduce using rule 73 (beforeDo -> DO .)


state 224

    (16) funcspp -> APAR params CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .

    MAIN            reduce using rule 16 (funcspp -> APAR params CPAR PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .)


state 225

    (62) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .

    RETURN          reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    ID              reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEC            reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 62 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)


state 226

    (63) condpp -> checkElse . ALLA estatutos CLLA

    ALLA            shift and go to state 230


state 227

    (64) condpp -> empty .

    RETURN          reduce using rule 64 (condpp -> empty .)
    READ            reduce using rule 64 (condpp -> empty .)
    WRITE           reduce using rule 64 (condpp -> empty .)
    IF              reduce using rule 64 (condpp -> empty .)
    FOR             reduce using rule 64 (condpp -> empty .)
    ID              reduce using rule 64 (condpp -> empty .)
    WHILE           reduce using rule 64 (condpp -> empty .)
    APAR            reduce using rule 64 (condpp -> empty .)
    CTEC            reduce using rule 64 (condpp -> empty .)
    CTEI            reduce using rule 64 (condpp -> empty .)
    CTEF            reduce using rule 64 (condpp -> empty .)
    CLLA            reduce using rule 64 (condpp -> empty .)


state 228

    (65) checkElse -> ELSE .

    ALLA            reduce using rule 65 (checkElse -> ELSE .)


state 229

    (70) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA . estatutos CLLA
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    exp                            shift and go to state 57
    estatutos                      shift and go to state 231
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 230

    (63) condpp -> checkElse ALLA . estatutos CLLA
    (21) estatutos -> . asig estatutop
    (22) estatutos -> . return estatutop
    (23) estatutos -> . lectura estatutop
    (24) estatutos -> . escritura estatutop
    (25) estatutos -> . cond estatutop
    (26) estatutos -> . while estatutop
    (27) estatutos -> . for estatutop
    (28) estatutos -> . exp estatutop
    (39) asig -> . varAs ididx igualAs asigpp PTCOMA
    (50) return -> . RETURN APAR exp CPAR PTCOMA
    (51) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (55) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (62) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (67) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (70) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (74) exp -> . texp expp
    (40) varAs -> . ID
    (68) saveWhile -> . WHILE
    (77) texp -> . gexp texpp
    (81) gexp -> . mexp gexpp
    (90) mexp -> . termino mexpp
    (95) termino -> . factor terminop
    (100) factor -> . APAR exp CPAR
    (101) factor -> . ctes
    (107) ctes -> . CTEC
    (108) ctes -> . CTEI
    (109) ctes -> . CTEF
    (110) ctes -> . ID factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    estatutos                      shift and go to state 232
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 231

    (70) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos . CLLA

    CLLA            shift and go to state 233


state 232

    (63) condpp -> checkElse ALLA estatutos . CLLA

    CLLA            shift and go to state 234


state 233

    (70) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .

    RETURN          reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    READ            reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WRITE           reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    IF              reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    FOR             reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    ID              reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WHILE           reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    APAR            reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEC            reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEI            reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEF            reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CLLA            reduce using rule 70 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)


state 234

    (63) condpp -> checkElse ALLA estatutos CLLA .

    RETURN          reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    READ            reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    WRITE           reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    IF              reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    FOR             reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    ID              reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    WHILE           reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    APAR            reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEC            reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEI            reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEF            reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)
    CLLA            reduce using rule 63 (condpp -> checkElse ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ACOR in state 66 resolved as shift
WARNING: shift/reduce conflict for APAR in state 66 resolved as shift
WARNING: shift/reduce conflict for APAR in state 81 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (varAs -> ID)
WARNING: rejected rule (empty -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 147 resolved using rule (pushEsc -> CTEC)
WARNING: rejected rule (ctes -> CTEC) in state 147
