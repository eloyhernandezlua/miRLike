Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    IGUALIGUAL
    NOT
    STR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     poptomain -> <empty>
Rule 4     varss -> VARS vars
Rule 5     varss -> empty
Rule 6     vars -> tipo DOSPNTS insertVar varsppp varspp vars
Rule 7     vars -> empty
Rule 8     insertVar -> ID
Rule 9     varsppp -> ACOR CTEI CCOR
Rule 10    varsppp -> empty
Rule 11    varspp -> PTCOMA
Rule 12    varspp -> COMA insertVar varsppp varspp
Rule 13    funcs -> FUNCTION funcsp insertFunc funcspp
Rule 14    funcs -> empty
Rule 15    insertFunc -> ID
Rule 16    funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
Rule 17    updateParamTable -> <empty>
Rule 18    endfunction -> <empty>
Rule 19    addsize -> <empty>
Rule 20    funcsp -> VOID
Rule 21    funcsp -> tipo
Rule 22    estatutos -> asig estatutop
Rule 23    estatutos -> return estatutop
Rule 24    estatutos -> lectura estatutop
Rule 25    estatutos -> escritura estatutop
Rule 26    estatutos -> cond estatutop
Rule 27    estatutos -> while estatutop
Rule 28    estatutos -> for estatutop
Rule 29    estatutos -> exp estatutop
Rule 30    estatutop -> estatutos
Rule 31    estatutop -> empty
Rule 32    tipo -> INT
Rule 33    tipo -> FLOAT
Rule 34    tipo -> CHAR
Rule 35    params -> tipo DOSPNTS insertParams ididx paramsp
Rule 36    params -> empty
Rule 37    insertParams -> ID
Rule 38    paramsp -> COMA params
Rule 39    paramsp -> empty
Rule 40    asig -> varAs ididx igualAs asigpp PTCOMA
Rule 41    varAs -> ID
Rule 42    igualAs -> IGUAL
Rule 43    asigp -> exp asigppp
Rule 44    asigp -> empty
Rule 45    asigppp -> COMA asigp
Rule 46    asigppp -> empty
Rule 47    asigpp -> exp
Rule 48    asigpp -> ACOR asigp CCOR
Rule 49    ididx -> ACOR exp CCOR
Rule 50    ididx -> empty
Rule 51    return -> RETURN APAR exp CPAR PTCOMA
Rule 52    lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA
Rule 53    readId -> ID
Rule 54    lecturapp -> COMA readId ididx lecturapp
Rule 55    lecturapp -> empty
Rule 56    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 57    escriturap -> pushEsc
Rule 58    escriturap -> exp
Rule 59    pushEsc -> STRING
Rule 60    pushEsc -> CTEC
Rule 61    escriturapp -> COMA escriturap
Rule 62    escriturapp -> empty
Rule 63    cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
Rule 64    condpp -> checkElse ALLA estatutos CLLA
Rule 65    condpp -> empty
Rule 66    checkElse -> ELSE
Rule 67    checkCond -> CPAR
Rule 68    while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
Rule 69    saveWhile -> WHILE
Rule 70    checkWhileCond -> CPAR
Rule 71    for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
Rule 72    varFor -> ID
Rule 73    initFor -> TO
Rule 74    beforeDo -> DO
Rule 75    exp -> texp expp
Rule 76    expp -> OR exp
Rule 77    expp -> empty
Rule 78    texp -> gexp texpp
Rule 79    texpp -> andCheck texp
Rule 80    texpp -> empty
Rule 81    andCheck -> AND
Rule 82    gexp -> mexp gexpp
Rule 83    gexpp -> addPO mexp
Rule 84    gexpp -> empty
Rule 85    addPO -> MAYQ
Rule 86    addPO -> MENQ
Rule 87    addPO -> MAYI
Rule 88    addPO -> MENI
Rule 89    addPO -> IGUAL IGUAL
Rule 90    addPO -> DIF
Rule 91    mexp -> termino mexpp
Rule 92    mexpp -> operSR mexp
Rule 93    mexpp -> empty
Rule 94    operSR -> MENOS
Rule 95    operSR -> MAS
Rule 96    termino -> factor terminop
Rule 97    terminop -> oper termino
Rule 98    terminop -> empty
Rule 99    oper -> DIV
Rule 100   oper -> POR
Rule 101   factor -> APAR exp CPAR
Rule 102   factor -> ctes
Rule 103   factorp -> APAR createEra exp factorpp CPAR
Rule 104   factorp -> ACOR exp CCOR
Rule 105   factorp -> empty
Rule 106   createEra -> <empty>
Rule 107   factorpp -> COMA exp factorpp
Rule 108   factorpp -> empty
Rule 109   ctes -> CTEC
Rule 110   ctes -> CTEI
Rule 111   ctes -> CTEF
Rule 112   ctes -> ID validateExistance factorp
Rule 113   validateExistance -> <empty>
Rule 114   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 9 48 49 104
ALLA                 : 1 16 63 64 68 71
AND                  : 81
APAR                 : 1 16 51 52 56 63 68 101 103
BOOL                 : 
CCOR                 : 9 48 49 104
CHAR                 : 34
CLLA                 : 1 16 63 64 68 71
COMA                 : 12 38 45 54 61 107
CPAR                 : 1 16 51 52 56 67 70 101 103
CTEC                 : 60 109
CTEF                 : 111
CTEI                 : 9 110
DIF                  : 90
DIV                  : 99
DO                   : 68 74
DOSPNTS              : 6 35
ELSE                 : 66
FALSE                : 
FLOAT                : 33
FOR                  : 71
FUNCTION             : 13
ID                   : 2 8 15 37 41 53 72 112
IF                   : 63
IGUAL                : 42 71 89 89
IGUALIGUAL           : 
INT                  : 32
MAIN                 : 1
MAS                  : 95
MAYI                 : 87
MAYQ                 : 85
MENI                 : 88
MENOS                : 94
MENQ                 : 86
NOT                  : 
OR                   : 76
POR                  : 100
PROGRAM              : 1
PTCOMA               : 2 11 16 40 51 52 56
READ                 : 52
RETURN               : 51
STR                  : 
STRING               : 59
THEN                 : 63
TO                   : 73
TRUE                 : 
VARS                 : 4
VOID                 : 20
WHILE                : 69
WRITE                : 56
error                : 

Nonterminals, with rules where they appear

addPO                : 83
addsize              : 16
agregarTablaFunciones : 1
andCheck             : 79
asig                 : 22
asigp                : 45 48
asigpp               : 40
asigppp              : 43
beforeDo             : 71
checkCond            : 63
checkElse            : 64
checkWhileCond       : 68
cond                 : 26
condpp               : 63
createEra            : 103
ctes                 : 102
empty                : 5 7 10 14 31 36 39 44 46 50 55 62 65 77 80 84 93 98 105 108
endfunction          : 16
escritura            : 25
escriturap           : 56 61
escriturapp          : 56
estatutop            : 22 23 24 25 26 27 28 29
estatutos            : 1 16 30 63 64 68 71
exp                  : 29 43 47 49 51 58 63 68 71 71 76 101 103 104 107
expp                 : 75
factor               : 96
factorp              : 112
factorpp             : 103 107
for                  : 28
funcs                : 1 16
funcsp               : 13
funcspp              : 13
gexp                 : 78
gexpp                : 82
ididx                : 35 40 52 54 71
igualAs              : 40
initFor              : 71
insertFunc           : 13
insertParams         : 35
insertVar            : 6 12
lectura              : 24
lecturapp            : 52 54
mexp                 : 82 83 92
mexpp                : 91
oper                 : 97
operSR               : 92
params               : 16 38
paramsp              : 35
poptomain            : 1
program              : 0
pushEsc              : 57
readId               : 52 54
return               : 23
saveWhile            : 68
termino              : 91 97
terminop             : 96
texp                 : 75 79
texpp                : 78
tipo                 : 6 21 35
updateParamTable     : 16
validateExistance    : 112
varAs                : 40
varFor               : 71
vars                 : 4 6
varspp               : 6 12
varsppp              : 6 12
varss                : 1 16
while                : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (114) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (13) funcs -> . FUNCTION funcsp insertFunc funcspp
    (14) funcs -> . empty
    (114) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 114 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (4) varss -> VARS . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (114) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    ALLA            reduce using rule 114 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) varss -> empty .

    FUNCTION        reduce using rule 5 (varss -> empty .)
    MAIN            reduce using rule 5 (varss -> empty .)
    ALLA            reduce using rule 5 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA poptomain estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (13) funcs -> FUNCTION . funcsp insertFunc funcspp
    (20) funcsp -> . VOID
    (21) funcsp -> . tipo
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (14) funcs -> empty .

    MAIN            reduce using rule 14 (funcs -> empty .)


state 12

    (4) varss -> VARS vars .

    FUNCTION        reduce using rule 4 (varss -> VARS vars .)
    MAIN            reduce using rule 4 (varss -> VARS vars .)
    ALLA            reduce using rule 4 (varss -> VARS vars .)


state 13

    (6) vars -> tipo . DOSPNTS insertVar varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    ALLA            reduce using rule 7 (vars -> empty .)


state 15

    (32) tipo -> INT .

    DOSPNTS         reduce using rule 32 (tipo -> INT .)
    ID              reduce using rule 32 (tipo -> INT .)


state 16

    (33) tipo -> FLOAT .

    DOSPNTS         reduce using rule 33 (tipo -> FLOAT .)
    ID              reduce using rule 33 (tipo -> FLOAT .)


state 17

    (34) tipo -> CHAR .

    DOSPNTS         reduce using rule 34 (tipo -> CHAR .)
    ID              reduce using rule 34 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA poptomain estatutos CLLA

    APAR            shift and go to state 23


state 19

    (13) funcs -> FUNCTION funcsp . insertFunc funcspp
    (15) insertFunc -> . ID

    ID              shift and go to state 25

    insertFunc                     shift and go to state 24

state 20

    (20) funcsp -> VOID .

    ID              reduce using rule 20 (funcsp -> VOID .)


state 21

    (21) funcsp -> tipo .

    ID              reduce using rule 21 (funcsp -> tipo .)


state 22

    (6) vars -> tipo DOSPNTS . insertVar varsppp varspp vars
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 26

state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA poptomain estatutos CLLA

    CPAR            shift and go to state 28


state 24

    (13) funcs -> FUNCTION funcsp insertFunc . funcspp
    (16) funcspp -> . APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 25

    (15) insertFunc -> ID .

    APAR            reduce using rule 15 (insertFunc -> ID .)


state 26

    (6) vars -> tipo DOSPNTS insertVar . varsppp varspp vars
    (9) varsppp -> . ACOR CTEI CCOR
    (10) varsppp -> . empty
    (114) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)

    varsppp                        shift and go to state 31
    empty                          shift and go to state 33

state 27

    (8) insertVar -> ID .

    ACOR            reduce using rule 8 (insertVar -> ID .)
    PTCOMA          reduce using rule 8 (insertVar -> ID .)
    COMA            reduce using rule 8 (insertVar -> ID .)


state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA poptomain estatutos CLLA

    ALLA            shift and go to state 34


state 29

    (13) funcs -> FUNCTION funcsp insertFunc funcspp .

    MAIN            reduce using rule 13 (funcs -> FUNCTION funcsp insertFunc funcspp .)


state 30

    (16) funcspp -> APAR . params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (35) params -> . tipo DOSPNTS insertParams ididx paramsp
    (36) params -> . empty
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (114) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 114 (empty -> .)

    params                         shift and go to state 35
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 31

    (6) vars -> tipo DOSPNTS insertVar varsppp . varspp vars
    (11) varspp -> . PTCOMA
    (12) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 38

state 32

    (9) varsppp -> ACOR . CTEI CCOR

    CTEI            shift and go to state 41


state 33

    (10) varsppp -> empty .

    PTCOMA          reduce using rule 10 (varsppp -> empty .)
    COMA            reduce using rule 10 (varsppp -> empty .)


state 34

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . poptomain estatutos CLLA
    (3) poptomain -> .

    RETURN          reduce using rule 3 (poptomain -> .)
    READ            reduce using rule 3 (poptomain -> .)
    WRITE           reduce using rule 3 (poptomain -> .)
    IF              reduce using rule 3 (poptomain -> .)
    FOR             reduce using rule 3 (poptomain -> .)
    ID              reduce using rule 3 (poptomain -> .)
    WHILE           reduce using rule 3 (poptomain -> .)
    APAR            reduce using rule 3 (poptomain -> .)
    CTEC            reduce using rule 3 (poptomain -> .)
    CTEI            reduce using rule 3 (poptomain -> .)
    CTEF            reduce using rule 3 (poptomain -> .)

    poptomain                      shift and go to state 42

state 35

    (16) funcspp -> APAR params . CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    CPAR            shift and go to state 43


state 36

    (35) params -> tipo . DOSPNTS insertParams ididx paramsp

    DOSPNTS         shift and go to state 44


state 37

    (36) params -> empty .

    CPAR            reduce using rule 36 (params -> empty .)


state 38

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (114) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    ALLA            reduce using rule 114 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 45
    empty                          shift and go to state 14

state 39

    (11) varspp -> PTCOMA .

    INT             reduce using rule 11 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 11 (varspp -> PTCOMA .)
    CHAR            reduce using rule 11 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 11 (varspp -> PTCOMA .)
    MAIN            reduce using rule 11 (varspp -> PTCOMA .)
    ALLA            reduce using rule 11 (varspp -> PTCOMA .)


state 40

    (12) varspp -> COMA . insertVar varsppp varspp
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 46

state 41

    (9) varsppp -> ACOR CTEI . CCOR

    CCOR            shift and go to state 47


state 42

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain . estatutos CLLA
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    estatutos                      shift and go to state 49
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 43

    (16) funcspp -> APAR params CPAR . updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs
    (17) updateParamTable -> .

    PTCOMA          reduce using rule 17 (updateParamTable -> .)

    updateParamTable               shift and go to state 76

state 44

    (35) params -> tipo DOSPNTS . insertParams ididx paramsp
    (37) insertParams -> . ID

    ID              shift and go to state 78

    insertParams                   shift and go to state 77

state 45

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp vars .

    FUNCTION        reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    MAIN            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    ALLA            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)


state 46

    (12) varspp -> COMA insertVar . varsppp varspp
    (9) varsppp -> . ACOR CTEI CCOR
    (10) varsppp -> . empty
    (114) empty -> .

    ACOR            shift and go to state 32
    PTCOMA          reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)

    varsppp                        shift and go to state 79
    empty                          shift and go to state 33

state 47

    (9) varsppp -> ACOR CTEI CCOR .

    PTCOMA          reduce using rule 9 (varsppp -> ACOR CTEI CCOR .)
    COMA            reduce using rule 9 (varsppp -> ACOR CTEI CCOR .)


state 48

    (101) factor -> APAR . exp CPAR
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 80
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 49

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos . CLLA

    CLLA            shift and go to state 82


state 50

    (22) estatutos -> asig . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    asig                           shift and go to state 50
    estatutop                      shift and go to state 83
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 51

    (23) estatutos -> return . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    return                         shift and go to state 51
    estatutop                      shift and go to state 86
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 52

    (24) estatutos -> lectura . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    lectura                        shift and go to state 52
    estatutop                      shift and go to state 87
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 53

    (25) estatutos -> escritura . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    escritura                      shift and go to state 53
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 54

    (26) estatutos -> cond . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    cond                           shift and go to state 54
    estatutop                      shift and go to state 89
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 55

    (27) estatutos -> while . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    while                          shift and go to state 55
    estatutop                      shift and go to state 90
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 56

    (28) estatutos -> for . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    for                            shift and go to state 56
    estatutop                      shift and go to state 91
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 57

    (29) estatutos -> exp . estatutop
    (30) estatutop -> . estatutos
    (31) estatutop -> . empty
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (114) empty -> .
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 114 (empty -> .)
    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    exp                            shift and go to state 57
    estatutop                      shift and go to state 92
    estatutos                      shift and go to state 84
    empty                          shift and go to state 85
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 58

    (40) asig -> varAs . ididx igualAs asigpp PTCOMA
    (49) ididx -> . ACOR exp CCOR
    (50) ididx -> . empty
    (114) empty -> .

    ACOR            shift and go to state 94
    IGUAL           reduce using rule 114 (empty -> .)

    ididx                          shift and go to state 93
    empty                          shift and go to state 95

state 59

    (51) return -> RETURN . APAR exp CPAR PTCOMA

    APAR            shift and go to state 96


state 60

    (52) lectura -> READ . APAR readId ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 97


state 61

    (56) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 98


state 62

    (63) cond -> IF . APAR exp checkCond THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 99


state 63

    (68) while -> saveWhile . APAR exp checkWhileCond DO ALLA estatutos CLLA

    APAR            shift and go to state 100


state 64

    (71) for -> FOR . varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (72) varFor -> . ID

    ID              shift and go to state 102

    varFor                         shift and go to state 101

state 65

    (75) exp -> texp . expp
    (76) expp -> . OR exp
    (77) expp -> . empty
    (114) empty -> .

    OR              shift and go to state 104
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    APAR            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)
    CCOR            reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)
    PTCOMA          reduce using rule 114 (empty -> .)
    TO              reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)

    expp                           shift and go to state 103
    empty                          shift and go to state 105

state 66

    (41) varAs -> ID .
    (112) ctes -> ID . validateExistance factorp
    (113) validateExistance -> .

  ! reduce/reduce conflict for ACOR resolved using rule 41 (varAs -> ID .)
  ! reduce/reduce conflict for IGUAL resolved using rule 41 (varAs -> ID .)
    ACOR            reduce using rule 41 (varAs -> ID .)
    IGUAL           reduce using rule 41 (varAs -> ID .)
    APAR            reduce using rule 113 (validateExistance -> .)
    DIV             reduce using rule 113 (validateExistance -> .)
    POR             reduce using rule 113 (validateExistance -> .)
    MENOS           reduce using rule 113 (validateExistance -> .)
    MAS             reduce using rule 113 (validateExistance -> .)
    MAYQ            reduce using rule 113 (validateExistance -> .)
    MENQ            reduce using rule 113 (validateExistance -> .)
    MAYI            reduce using rule 113 (validateExistance -> .)
    MENI            reduce using rule 113 (validateExistance -> .)
    DIF             reduce using rule 113 (validateExistance -> .)
    AND             reduce using rule 113 (validateExistance -> .)
    OR              reduce using rule 113 (validateExistance -> .)
    RETURN          reduce using rule 113 (validateExistance -> .)
    READ            reduce using rule 113 (validateExistance -> .)
    WRITE           reduce using rule 113 (validateExistance -> .)
    IF              reduce using rule 113 (validateExistance -> .)
    FOR             reduce using rule 113 (validateExistance -> .)
    ID              reduce using rule 113 (validateExistance -> .)
    WHILE           reduce using rule 113 (validateExistance -> .)
    CTEC            reduce using rule 113 (validateExistance -> .)
    CTEI            reduce using rule 113 (validateExistance -> .)
    CTEF            reduce using rule 113 (validateExistance -> .)
    CLLA            reduce using rule 113 (validateExistance -> .)

  ! ACOR            [ reduce using rule 113 (validateExistance -> .) ]
  ! IGUAL           [ reduce using rule 113 (validateExistance -> .) ]

    validateExistance              shift and go to state 106

state 67

    (69) saveWhile -> WHILE .

    APAR            reduce using rule 69 (saveWhile -> WHILE .)


state 68

    (78) texp -> gexp . texpp
    (79) texpp -> . andCheck texp
    (80) texpp -> . empty
    (81) andCheck -> . AND
    (114) empty -> .

    AND             shift and go to state 110
    OR              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    APAR            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)
    CCOR            reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)
    PTCOMA          reduce using rule 114 (empty -> .)
    TO              reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)

    texpp                          shift and go to state 107
    andCheck                       shift and go to state 108
    empty                          shift and go to state 109

state 69

    (82) gexp -> mexp . gexpp
    (83) gexpp -> . addPO mexp
    (84) gexpp -> . empty
    (85) addPO -> . MAYQ
    (86) addPO -> . MENQ
    (87) addPO -> . MAYI
    (88) addPO -> . MENI
    (89) addPO -> . IGUAL IGUAL
    (90) addPO -> . DIF
    (114) empty -> .

    MAYQ            shift and go to state 114
    MENQ            shift and go to state 115
    MAYI            shift and go to state 116
    MENI            shift and go to state 117
    IGUAL           shift and go to state 118
    DIF             shift and go to state 119
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    APAR            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)
    CCOR            reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)
    PTCOMA          reduce using rule 114 (empty -> .)
    TO              reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)

    gexpp                          shift and go to state 111
    addPO                          shift and go to state 112
    empty                          shift and go to state 113

state 70

    (91) mexp -> termino . mexpp
    (92) mexpp -> . operSR mexp
    (93) mexpp -> . empty
    (94) operSR -> . MENOS
    (95) operSR -> . MAS
    (114) empty -> .

    MENOS           shift and go to state 123
    MAS             shift and go to state 124
    MAYQ            reduce using rule 114 (empty -> .)
    MENQ            reduce using rule 114 (empty -> .)
    MAYI            reduce using rule 114 (empty -> .)
    MENI            reduce using rule 114 (empty -> .)
    IGUAL           reduce using rule 114 (empty -> .)
    DIF             reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    APAR            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)
    CCOR            reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)
    PTCOMA          reduce using rule 114 (empty -> .)
    TO              reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)

    mexpp                          shift and go to state 120
    operSR                         shift and go to state 121
    empty                          shift and go to state 122

state 71

    (96) termino -> factor . terminop
    (97) terminop -> . oper termino
    (98) terminop -> . empty
    (99) oper -> . DIV
    (100) oper -> . POR
    (114) empty -> .

    DIV             shift and go to state 128
    POR             shift and go to state 129
    MENOS           reduce using rule 114 (empty -> .)
    MAS             reduce using rule 114 (empty -> .)
    MAYQ            reduce using rule 114 (empty -> .)
    MENQ            reduce using rule 114 (empty -> .)
    MAYI            reduce using rule 114 (empty -> .)
    MENI            reduce using rule 114 (empty -> .)
    IGUAL           reduce using rule 114 (empty -> .)
    DIF             reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    APAR            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)
    CCOR            reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)
    PTCOMA          reduce using rule 114 (empty -> .)
    TO              reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)

    terminop                       shift and go to state 125
    oper                           shift and go to state 126
    empty                          shift and go to state 127

state 72

    (102) factor -> ctes .

    DIV             reduce using rule 102 (factor -> ctes .)
    POR             reduce using rule 102 (factor -> ctes .)
    MENOS           reduce using rule 102 (factor -> ctes .)
    MAS             reduce using rule 102 (factor -> ctes .)
    MAYQ            reduce using rule 102 (factor -> ctes .)
    MENQ            reduce using rule 102 (factor -> ctes .)
    MAYI            reduce using rule 102 (factor -> ctes .)
    MENI            reduce using rule 102 (factor -> ctes .)
    IGUAL           reduce using rule 102 (factor -> ctes .)
    DIF             reduce using rule 102 (factor -> ctes .)
    AND             reduce using rule 102 (factor -> ctes .)
    OR              reduce using rule 102 (factor -> ctes .)
    RETURN          reduce using rule 102 (factor -> ctes .)
    READ            reduce using rule 102 (factor -> ctes .)
    WRITE           reduce using rule 102 (factor -> ctes .)
    IF              reduce using rule 102 (factor -> ctes .)
    FOR             reduce using rule 102 (factor -> ctes .)
    ID              reduce using rule 102 (factor -> ctes .)
    WHILE           reduce using rule 102 (factor -> ctes .)
    APAR            reduce using rule 102 (factor -> ctes .)
    CTEC            reduce using rule 102 (factor -> ctes .)
    CTEI            reduce using rule 102 (factor -> ctes .)
    CTEF            reduce using rule 102 (factor -> ctes .)
    CLLA            reduce using rule 102 (factor -> ctes .)
    CPAR            reduce using rule 102 (factor -> ctes .)
    CCOR            reduce using rule 102 (factor -> ctes .)
    COMA            reduce using rule 102 (factor -> ctes .)
    PTCOMA          reduce using rule 102 (factor -> ctes .)
    TO              reduce using rule 102 (factor -> ctes .)
    DO              reduce using rule 102 (factor -> ctes .)


state 73

    (109) ctes -> CTEC .

    DIV             reduce using rule 109 (ctes -> CTEC .)
    POR             reduce using rule 109 (ctes -> CTEC .)
    MENOS           reduce using rule 109 (ctes -> CTEC .)
    MAS             reduce using rule 109 (ctes -> CTEC .)
    MAYQ            reduce using rule 109 (ctes -> CTEC .)
    MENQ            reduce using rule 109 (ctes -> CTEC .)
    MAYI            reduce using rule 109 (ctes -> CTEC .)
    MENI            reduce using rule 109 (ctes -> CTEC .)
    IGUAL           reduce using rule 109 (ctes -> CTEC .)
    DIF             reduce using rule 109 (ctes -> CTEC .)
    AND             reduce using rule 109 (ctes -> CTEC .)
    OR              reduce using rule 109 (ctes -> CTEC .)
    RETURN          reduce using rule 109 (ctes -> CTEC .)
    READ            reduce using rule 109 (ctes -> CTEC .)
    WRITE           reduce using rule 109 (ctes -> CTEC .)
    IF              reduce using rule 109 (ctes -> CTEC .)
    FOR             reduce using rule 109 (ctes -> CTEC .)
    ID              reduce using rule 109 (ctes -> CTEC .)
    WHILE           reduce using rule 109 (ctes -> CTEC .)
    APAR            reduce using rule 109 (ctes -> CTEC .)
    CTEC            reduce using rule 109 (ctes -> CTEC .)
    CTEI            reduce using rule 109 (ctes -> CTEC .)
    CTEF            reduce using rule 109 (ctes -> CTEC .)
    CLLA            reduce using rule 109 (ctes -> CTEC .)
    CPAR            reduce using rule 109 (ctes -> CTEC .)
    CCOR            reduce using rule 109 (ctes -> CTEC .)
    COMA            reduce using rule 109 (ctes -> CTEC .)
    PTCOMA          reduce using rule 109 (ctes -> CTEC .)
    TO              reduce using rule 109 (ctes -> CTEC .)
    DO              reduce using rule 109 (ctes -> CTEC .)


state 74

    (110) ctes -> CTEI .

    DIV             reduce using rule 110 (ctes -> CTEI .)
    POR             reduce using rule 110 (ctes -> CTEI .)
    MENOS           reduce using rule 110 (ctes -> CTEI .)
    MAS             reduce using rule 110 (ctes -> CTEI .)
    MAYQ            reduce using rule 110 (ctes -> CTEI .)
    MENQ            reduce using rule 110 (ctes -> CTEI .)
    MAYI            reduce using rule 110 (ctes -> CTEI .)
    MENI            reduce using rule 110 (ctes -> CTEI .)
    IGUAL           reduce using rule 110 (ctes -> CTEI .)
    DIF             reduce using rule 110 (ctes -> CTEI .)
    AND             reduce using rule 110 (ctes -> CTEI .)
    OR              reduce using rule 110 (ctes -> CTEI .)
    RETURN          reduce using rule 110 (ctes -> CTEI .)
    READ            reduce using rule 110 (ctes -> CTEI .)
    WRITE           reduce using rule 110 (ctes -> CTEI .)
    IF              reduce using rule 110 (ctes -> CTEI .)
    FOR             reduce using rule 110 (ctes -> CTEI .)
    ID              reduce using rule 110 (ctes -> CTEI .)
    WHILE           reduce using rule 110 (ctes -> CTEI .)
    APAR            reduce using rule 110 (ctes -> CTEI .)
    CTEC            reduce using rule 110 (ctes -> CTEI .)
    CTEI            reduce using rule 110 (ctes -> CTEI .)
    CTEF            reduce using rule 110 (ctes -> CTEI .)
    CLLA            reduce using rule 110 (ctes -> CTEI .)
    CPAR            reduce using rule 110 (ctes -> CTEI .)
    CCOR            reduce using rule 110 (ctes -> CTEI .)
    COMA            reduce using rule 110 (ctes -> CTEI .)
    PTCOMA          reduce using rule 110 (ctes -> CTEI .)
    TO              reduce using rule 110 (ctes -> CTEI .)
    DO              reduce using rule 110 (ctes -> CTEI .)


state 75

    (111) ctes -> CTEF .

    DIV             reduce using rule 111 (ctes -> CTEF .)
    POR             reduce using rule 111 (ctes -> CTEF .)
    MENOS           reduce using rule 111 (ctes -> CTEF .)
    MAS             reduce using rule 111 (ctes -> CTEF .)
    MAYQ            reduce using rule 111 (ctes -> CTEF .)
    MENQ            reduce using rule 111 (ctes -> CTEF .)
    MAYI            reduce using rule 111 (ctes -> CTEF .)
    MENI            reduce using rule 111 (ctes -> CTEF .)
    IGUAL           reduce using rule 111 (ctes -> CTEF .)
    DIF             reduce using rule 111 (ctes -> CTEF .)
    AND             reduce using rule 111 (ctes -> CTEF .)
    OR              reduce using rule 111 (ctes -> CTEF .)
    RETURN          reduce using rule 111 (ctes -> CTEF .)
    READ            reduce using rule 111 (ctes -> CTEF .)
    WRITE           reduce using rule 111 (ctes -> CTEF .)
    IF              reduce using rule 111 (ctes -> CTEF .)
    FOR             reduce using rule 111 (ctes -> CTEF .)
    ID              reduce using rule 111 (ctes -> CTEF .)
    WHILE           reduce using rule 111 (ctes -> CTEF .)
    APAR            reduce using rule 111 (ctes -> CTEF .)
    CTEC            reduce using rule 111 (ctes -> CTEF .)
    CTEI            reduce using rule 111 (ctes -> CTEF .)
    CTEF            reduce using rule 111 (ctes -> CTEF .)
    CLLA            reduce using rule 111 (ctes -> CTEF .)
    CPAR            reduce using rule 111 (ctes -> CTEF .)
    CCOR            reduce using rule 111 (ctes -> CTEF .)
    COMA            reduce using rule 111 (ctes -> CTEF .)
    PTCOMA          reduce using rule 111 (ctes -> CTEF .)
    TO              reduce using rule 111 (ctes -> CTEF .)
    DO              reduce using rule 111 (ctes -> CTEF .)


state 76

    (16) funcspp -> APAR params CPAR updateParamTable . PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs

    PTCOMA          shift and go to state 130


state 77

    (35) params -> tipo DOSPNTS insertParams . ididx paramsp
    (49) ididx -> . ACOR exp CCOR
    (50) ididx -> . empty
    (114) empty -> .

    ACOR            shift and go to state 94
    COMA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)

    ididx                          shift and go to state 131
    empty                          shift and go to state 95

state 78

    (37) insertParams -> ID .

    ACOR            reduce using rule 37 (insertParams -> ID .)
    COMA            reduce using rule 37 (insertParams -> ID .)
    CPAR            reduce using rule 37 (insertParams -> ID .)


state 79

    (12) varspp -> COMA insertVar varsppp . varspp
    (11) varspp -> . PTCOMA
    (12) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 39
    COMA            shift and go to state 40

    varspp                         shift and go to state 132

state 80

    (101) factor -> APAR exp . CPAR

    CPAR            shift and go to state 133


state 81

    (112) ctes -> ID . validateExistance factorp
    (113) validateExistance -> .

    APAR            reduce using rule 113 (validateExistance -> .)
    ACOR            reduce using rule 113 (validateExistance -> .)
    DIV             reduce using rule 113 (validateExistance -> .)
    POR             reduce using rule 113 (validateExistance -> .)
    MENOS           reduce using rule 113 (validateExistance -> .)
    MAS             reduce using rule 113 (validateExistance -> .)
    MAYQ            reduce using rule 113 (validateExistance -> .)
    MENQ            reduce using rule 113 (validateExistance -> .)
    MAYI            reduce using rule 113 (validateExistance -> .)
    MENI            reduce using rule 113 (validateExistance -> .)
    IGUAL           reduce using rule 113 (validateExistance -> .)
    DIF             reduce using rule 113 (validateExistance -> .)
    AND             reduce using rule 113 (validateExistance -> .)
    OR              reduce using rule 113 (validateExistance -> .)
    CPAR            reduce using rule 113 (validateExistance -> .)
    CCOR            reduce using rule 113 (validateExistance -> .)
    COMA            reduce using rule 113 (validateExistance -> .)
    RETURN          reduce using rule 113 (validateExistance -> .)
    READ            reduce using rule 113 (validateExistance -> .)
    WRITE           reduce using rule 113 (validateExistance -> .)
    IF              reduce using rule 113 (validateExistance -> .)
    FOR             reduce using rule 113 (validateExistance -> .)
    ID              reduce using rule 113 (validateExistance -> .)
    WHILE           reduce using rule 113 (validateExistance -> .)
    CTEC            reduce using rule 113 (validateExistance -> .)
    CTEI            reduce using rule 113 (validateExistance -> .)
    CTEF            reduce using rule 113 (validateExistance -> .)
    CLLA            reduce using rule 113 (validateExistance -> .)
    PTCOMA          reduce using rule 113 (validateExistance -> .)
    TO              reduce using rule 113 (validateExistance -> .)
    DO              reduce using rule 113 (validateExistance -> .)

    validateExistance              shift and go to state 106

state 82

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .)


state 83

    (22) estatutos -> asig estatutop .

    CLLA            reduce using rule 22 (estatutos -> asig estatutop .)


state 84

    (30) estatutop -> estatutos .

    CLLA            reduce using rule 30 (estatutop -> estatutos .)


state 85

    (31) estatutop -> empty .

    CLLA            reduce using rule 31 (estatutop -> empty .)


state 86

    (23) estatutos -> return estatutop .

    CLLA            reduce using rule 23 (estatutos -> return estatutop .)


state 87

    (24) estatutos -> lectura estatutop .

    CLLA            reduce using rule 24 (estatutos -> lectura estatutop .)


state 88

    (25) estatutos -> escritura estatutop .

    CLLA            reduce using rule 25 (estatutos -> escritura estatutop .)


state 89

    (26) estatutos -> cond estatutop .

    CLLA            reduce using rule 26 (estatutos -> cond estatutop .)


state 90

    (27) estatutos -> while estatutop .

    CLLA            reduce using rule 27 (estatutos -> while estatutop .)


state 91

    (28) estatutos -> for estatutop .

    CLLA            reduce using rule 28 (estatutos -> for estatutop .)


state 92

    (29) estatutos -> exp estatutop .

    CLLA            reduce using rule 29 (estatutos -> exp estatutop .)


state 93

    (40) asig -> varAs ididx . igualAs asigpp PTCOMA
    (42) igualAs -> . IGUAL

    IGUAL           shift and go to state 135

    igualAs                        shift and go to state 134

state 94

    (49) ididx -> ACOR . exp CCOR
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 136
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 95

    (50) ididx -> empty .

    IGUAL           reduce using rule 50 (ididx -> empty .)
    COMA            reduce using rule 50 (ididx -> empty .)
    CPAR            reduce using rule 50 (ididx -> empty .)


state 96

    (51) return -> RETURN APAR . exp CPAR PTCOMA
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 137
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 97

    (52) lectura -> READ APAR . readId ididx lecturapp CPAR PTCOMA
    (53) readId -> . ID

    ID              shift and go to state 139

    readId                         shift and go to state 138

state 98

    (56) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (57) escriturap -> . pushEsc
    (58) escriturap -> . exp
    (59) pushEsc -> . STRING
    (60) pushEsc -> . CTEC
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 143
    CTEC            shift and go to state 144
    APAR            shift and go to state 48
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    escriturap                     shift and go to state 140
    pushEsc                        shift and go to state 141
    exp                            shift and go to state 142
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 99

    (63) cond -> IF APAR . exp checkCond THEN ALLA estatutos CLLA condpp
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 145
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 100

    (68) while -> saveWhile APAR . exp checkWhileCond DO ALLA estatutos CLLA
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 146
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 101

    (71) for -> FOR varFor . ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (49) ididx -> . ACOR exp CCOR
    (50) ididx -> . empty
    (114) empty -> .

    ACOR            shift and go to state 94
    IGUAL           reduce using rule 114 (empty -> .)

    ididx                          shift and go to state 147
    empty                          shift and go to state 95

state 102

    (72) varFor -> ID .

    ACOR            reduce using rule 72 (varFor -> ID .)
    IGUAL           reduce using rule 72 (varFor -> ID .)


state 103

    (75) exp -> texp expp .

    RETURN          reduce using rule 75 (exp -> texp expp .)
    READ            reduce using rule 75 (exp -> texp expp .)
    WRITE           reduce using rule 75 (exp -> texp expp .)
    IF              reduce using rule 75 (exp -> texp expp .)
    FOR             reduce using rule 75 (exp -> texp expp .)
    ID              reduce using rule 75 (exp -> texp expp .)
    WHILE           reduce using rule 75 (exp -> texp expp .)
    APAR            reduce using rule 75 (exp -> texp expp .)
    CTEC            reduce using rule 75 (exp -> texp expp .)
    CTEI            reduce using rule 75 (exp -> texp expp .)
    CTEF            reduce using rule 75 (exp -> texp expp .)
    CLLA            reduce using rule 75 (exp -> texp expp .)
    CPAR            reduce using rule 75 (exp -> texp expp .)
    CCOR            reduce using rule 75 (exp -> texp expp .)
    COMA            reduce using rule 75 (exp -> texp expp .)
    PTCOMA          reduce using rule 75 (exp -> texp expp .)
    TO              reduce using rule 75 (exp -> texp expp .)
    DO              reduce using rule 75 (exp -> texp expp .)


state 104

    (76) expp -> OR . exp
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 148
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 105

    (77) expp -> empty .

    RETURN          reduce using rule 77 (expp -> empty .)
    READ            reduce using rule 77 (expp -> empty .)
    WRITE           reduce using rule 77 (expp -> empty .)
    IF              reduce using rule 77 (expp -> empty .)
    FOR             reduce using rule 77 (expp -> empty .)
    ID              reduce using rule 77 (expp -> empty .)
    WHILE           reduce using rule 77 (expp -> empty .)
    APAR            reduce using rule 77 (expp -> empty .)
    CTEC            reduce using rule 77 (expp -> empty .)
    CTEI            reduce using rule 77 (expp -> empty .)
    CTEF            reduce using rule 77 (expp -> empty .)
    CLLA            reduce using rule 77 (expp -> empty .)
    CPAR            reduce using rule 77 (expp -> empty .)
    CCOR            reduce using rule 77 (expp -> empty .)
    COMA            reduce using rule 77 (expp -> empty .)
    PTCOMA          reduce using rule 77 (expp -> empty .)
    TO              reduce using rule 77 (expp -> empty .)
    DO              reduce using rule 77 (expp -> empty .)


state 106

    (112) ctes -> ID validateExistance . factorp
    (103) factorp -> . APAR createEra exp factorpp CPAR
    (104) factorp -> . ACOR exp CCOR
    (105) factorp -> . empty
    (114) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 150
    ACOR            shift and go to state 151
    DIV             reduce using rule 114 (empty -> .)
    POR             reduce using rule 114 (empty -> .)
    MENOS           reduce using rule 114 (empty -> .)
    MAS             reduce using rule 114 (empty -> .)
    MAYQ            reduce using rule 114 (empty -> .)
    MENQ            reduce using rule 114 (empty -> .)
    MAYI            reduce using rule 114 (empty -> .)
    MENI            reduce using rule 114 (empty -> .)
    IGUAL           reduce using rule 114 (empty -> .)
    DIF             reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)
    CCOR            reduce using rule 114 (empty -> .)
    COMA            reduce using rule 114 (empty -> .)
    PTCOMA          reduce using rule 114 (empty -> .)
    TO              reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)

  ! APAR            [ reduce using rule 114 (empty -> .) ]

    factorp                        shift and go to state 149
    empty                          shift and go to state 152

state 107

    (78) texp -> gexp texpp .

    OR              reduce using rule 78 (texp -> gexp texpp .)
    RETURN          reduce using rule 78 (texp -> gexp texpp .)
    READ            reduce using rule 78 (texp -> gexp texpp .)
    WRITE           reduce using rule 78 (texp -> gexp texpp .)
    IF              reduce using rule 78 (texp -> gexp texpp .)
    FOR             reduce using rule 78 (texp -> gexp texpp .)
    ID              reduce using rule 78 (texp -> gexp texpp .)
    WHILE           reduce using rule 78 (texp -> gexp texpp .)
    APAR            reduce using rule 78 (texp -> gexp texpp .)
    CTEC            reduce using rule 78 (texp -> gexp texpp .)
    CTEI            reduce using rule 78 (texp -> gexp texpp .)
    CTEF            reduce using rule 78 (texp -> gexp texpp .)
    CLLA            reduce using rule 78 (texp -> gexp texpp .)
    CPAR            reduce using rule 78 (texp -> gexp texpp .)
    CCOR            reduce using rule 78 (texp -> gexp texpp .)
    COMA            reduce using rule 78 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 78 (texp -> gexp texpp .)
    TO              reduce using rule 78 (texp -> gexp texpp .)
    DO              reduce using rule 78 (texp -> gexp texpp .)


state 108

    (79) texpp -> andCheck . texp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    texp                           shift and go to state 153
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 109

    (80) texpp -> empty .

    OR              reduce using rule 80 (texpp -> empty .)
    RETURN          reduce using rule 80 (texpp -> empty .)
    READ            reduce using rule 80 (texpp -> empty .)
    WRITE           reduce using rule 80 (texpp -> empty .)
    IF              reduce using rule 80 (texpp -> empty .)
    FOR             reduce using rule 80 (texpp -> empty .)
    ID              reduce using rule 80 (texpp -> empty .)
    WHILE           reduce using rule 80 (texpp -> empty .)
    APAR            reduce using rule 80 (texpp -> empty .)
    CTEC            reduce using rule 80 (texpp -> empty .)
    CTEI            reduce using rule 80 (texpp -> empty .)
    CTEF            reduce using rule 80 (texpp -> empty .)
    CLLA            reduce using rule 80 (texpp -> empty .)
    CPAR            reduce using rule 80 (texpp -> empty .)
    CCOR            reduce using rule 80 (texpp -> empty .)
    COMA            reduce using rule 80 (texpp -> empty .)
    PTCOMA          reduce using rule 80 (texpp -> empty .)
    TO              reduce using rule 80 (texpp -> empty .)
    DO              reduce using rule 80 (texpp -> empty .)


state 110

    (81) andCheck -> AND .

    APAR            reduce using rule 81 (andCheck -> AND .)
    CTEC            reduce using rule 81 (andCheck -> AND .)
    CTEI            reduce using rule 81 (andCheck -> AND .)
    CTEF            reduce using rule 81 (andCheck -> AND .)
    ID              reduce using rule 81 (andCheck -> AND .)


state 111

    (82) gexp -> mexp gexpp .

    AND             reduce using rule 82 (gexp -> mexp gexpp .)
    OR              reduce using rule 82 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 82 (gexp -> mexp gexpp .)
    READ            reduce using rule 82 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 82 (gexp -> mexp gexpp .)
    IF              reduce using rule 82 (gexp -> mexp gexpp .)
    FOR             reduce using rule 82 (gexp -> mexp gexpp .)
    ID              reduce using rule 82 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 82 (gexp -> mexp gexpp .)
    APAR            reduce using rule 82 (gexp -> mexp gexpp .)
    CTEC            reduce using rule 82 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 82 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 82 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 82 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 82 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 82 (gexp -> mexp gexpp .)
    COMA            reduce using rule 82 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 82 (gexp -> mexp gexpp .)
    TO              reduce using rule 82 (gexp -> mexp gexpp .)
    DO              reduce using rule 82 (gexp -> mexp gexpp .)


state 112

    (83) gexpp -> addPO . mexp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    mexp                           shift and go to state 154
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 113

    (84) gexpp -> empty .

    AND             reduce using rule 84 (gexpp -> empty .)
    OR              reduce using rule 84 (gexpp -> empty .)
    RETURN          reduce using rule 84 (gexpp -> empty .)
    READ            reduce using rule 84 (gexpp -> empty .)
    WRITE           reduce using rule 84 (gexpp -> empty .)
    IF              reduce using rule 84 (gexpp -> empty .)
    FOR             reduce using rule 84 (gexpp -> empty .)
    ID              reduce using rule 84 (gexpp -> empty .)
    WHILE           reduce using rule 84 (gexpp -> empty .)
    APAR            reduce using rule 84 (gexpp -> empty .)
    CTEC            reduce using rule 84 (gexpp -> empty .)
    CTEI            reduce using rule 84 (gexpp -> empty .)
    CTEF            reduce using rule 84 (gexpp -> empty .)
    CLLA            reduce using rule 84 (gexpp -> empty .)
    CPAR            reduce using rule 84 (gexpp -> empty .)
    CCOR            reduce using rule 84 (gexpp -> empty .)
    COMA            reduce using rule 84 (gexpp -> empty .)
    PTCOMA          reduce using rule 84 (gexpp -> empty .)
    TO              reduce using rule 84 (gexpp -> empty .)
    DO              reduce using rule 84 (gexpp -> empty .)


state 114

    (85) addPO -> MAYQ .

    APAR            reduce using rule 85 (addPO -> MAYQ .)
    CTEC            reduce using rule 85 (addPO -> MAYQ .)
    CTEI            reduce using rule 85 (addPO -> MAYQ .)
    CTEF            reduce using rule 85 (addPO -> MAYQ .)
    ID              reduce using rule 85 (addPO -> MAYQ .)


state 115

    (86) addPO -> MENQ .

    APAR            reduce using rule 86 (addPO -> MENQ .)
    CTEC            reduce using rule 86 (addPO -> MENQ .)
    CTEI            reduce using rule 86 (addPO -> MENQ .)
    CTEF            reduce using rule 86 (addPO -> MENQ .)
    ID              reduce using rule 86 (addPO -> MENQ .)


state 116

    (87) addPO -> MAYI .

    APAR            reduce using rule 87 (addPO -> MAYI .)
    CTEC            reduce using rule 87 (addPO -> MAYI .)
    CTEI            reduce using rule 87 (addPO -> MAYI .)
    CTEF            reduce using rule 87 (addPO -> MAYI .)
    ID              reduce using rule 87 (addPO -> MAYI .)


state 117

    (88) addPO -> MENI .

    APAR            reduce using rule 88 (addPO -> MENI .)
    CTEC            reduce using rule 88 (addPO -> MENI .)
    CTEI            reduce using rule 88 (addPO -> MENI .)
    CTEF            reduce using rule 88 (addPO -> MENI .)
    ID              reduce using rule 88 (addPO -> MENI .)


state 118

    (89) addPO -> IGUAL . IGUAL

    IGUAL           shift and go to state 155


state 119

    (90) addPO -> DIF .

    APAR            reduce using rule 90 (addPO -> DIF .)
    CTEC            reduce using rule 90 (addPO -> DIF .)
    CTEI            reduce using rule 90 (addPO -> DIF .)
    CTEF            reduce using rule 90 (addPO -> DIF .)
    ID              reduce using rule 90 (addPO -> DIF .)


state 120

    (91) mexp -> termino mexpp .

    MAYQ            reduce using rule 91 (mexp -> termino mexpp .)
    MENQ            reduce using rule 91 (mexp -> termino mexpp .)
    MAYI            reduce using rule 91 (mexp -> termino mexpp .)
    MENI            reduce using rule 91 (mexp -> termino mexpp .)
    IGUAL           reduce using rule 91 (mexp -> termino mexpp .)
    DIF             reduce using rule 91 (mexp -> termino mexpp .)
    AND             reduce using rule 91 (mexp -> termino mexpp .)
    OR              reduce using rule 91 (mexp -> termino mexpp .)
    RETURN          reduce using rule 91 (mexp -> termino mexpp .)
    READ            reduce using rule 91 (mexp -> termino mexpp .)
    WRITE           reduce using rule 91 (mexp -> termino mexpp .)
    IF              reduce using rule 91 (mexp -> termino mexpp .)
    FOR             reduce using rule 91 (mexp -> termino mexpp .)
    ID              reduce using rule 91 (mexp -> termino mexpp .)
    WHILE           reduce using rule 91 (mexp -> termino mexpp .)
    APAR            reduce using rule 91 (mexp -> termino mexpp .)
    CTEC            reduce using rule 91 (mexp -> termino mexpp .)
    CTEI            reduce using rule 91 (mexp -> termino mexpp .)
    CTEF            reduce using rule 91 (mexp -> termino mexpp .)
    CLLA            reduce using rule 91 (mexp -> termino mexpp .)
    CPAR            reduce using rule 91 (mexp -> termino mexpp .)
    CCOR            reduce using rule 91 (mexp -> termino mexpp .)
    COMA            reduce using rule 91 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 91 (mexp -> termino mexpp .)
    TO              reduce using rule 91 (mexp -> termino mexpp .)
    DO              reduce using rule 91 (mexp -> termino mexpp .)


state 121

    (92) mexpp -> operSR . mexp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    mexp                           shift and go to state 156
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 122

    (93) mexpp -> empty .

    MAYQ            reduce using rule 93 (mexpp -> empty .)
    MENQ            reduce using rule 93 (mexpp -> empty .)
    MAYI            reduce using rule 93 (mexpp -> empty .)
    MENI            reduce using rule 93 (mexpp -> empty .)
    IGUAL           reduce using rule 93 (mexpp -> empty .)
    DIF             reduce using rule 93 (mexpp -> empty .)
    AND             reduce using rule 93 (mexpp -> empty .)
    OR              reduce using rule 93 (mexpp -> empty .)
    RETURN          reduce using rule 93 (mexpp -> empty .)
    READ            reduce using rule 93 (mexpp -> empty .)
    WRITE           reduce using rule 93 (mexpp -> empty .)
    IF              reduce using rule 93 (mexpp -> empty .)
    FOR             reduce using rule 93 (mexpp -> empty .)
    ID              reduce using rule 93 (mexpp -> empty .)
    WHILE           reduce using rule 93 (mexpp -> empty .)
    APAR            reduce using rule 93 (mexpp -> empty .)
    CTEC            reduce using rule 93 (mexpp -> empty .)
    CTEI            reduce using rule 93 (mexpp -> empty .)
    CTEF            reduce using rule 93 (mexpp -> empty .)
    CLLA            reduce using rule 93 (mexpp -> empty .)
    CPAR            reduce using rule 93 (mexpp -> empty .)
    CCOR            reduce using rule 93 (mexpp -> empty .)
    COMA            reduce using rule 93 (mexpp -> empty .)
    PTCOMA          reduce using rule 93 (mexpp -> empty .)
    TO              reduce using rule 93 (mexpp -> empty .)
    DO              reduce using rule 93 (mexpp -> empty .)


state 123

    (94) operSR -> MENOS .

    APAR            reduce using rule 94 (operSR -> MENOS .)
    CTEC            reduce using rule 94 (operSR -> MENOS .)
    CTEI            reduce using rule 94 (operSR -> MENOS .)
    CTEF            reduce using rule 94 (operSR -> MENOS .)
    ID              reduce using rule 94 (operSR -> MENOS .)


state 124

    (95) operSR -> MAS .

    APAR            reduce using rule 95 (operSR -> MAS .)
    CTEC            reduce using rule 95 (operSR -> MAS .)
    CTEI            reduce using rule 95 (operSR -> MAS .)
    CTEF            reduce using rule 95 (operSR -> MAS .)
    ID              reduce using rule 95 (operSR -> MAS .)


state 125

    (96) termino -> factor terminop .

    MENOS           reduce using rule 96 (termino -> factor terminop .)
    MAS             reduce using rule 96 (termino -> factor terminop .)
    MAYQ            reduce using rule 96 (termino -> factor terminop .)
    MENQ            reduce using rule 96 (termino -> factor terminop .)
    MAYI            reduce using rule 96 (termino -> factor terminop .)
    MENI            reduce using rule 96 (termino -> factor terminop .)
    IGUAL           reduce using rule 96 (termino -> factor terminop .)
    DIF             reduce using rule 96 (termino -> factor terminop .)
    AND             reduce using rule 96 (termino -> factor terminop .)
    OR              reduce using rule 96 (termino -> factor terminop .)
    RETURN          reduce using rule 96 (termino -> factor terminop .)
    READ            reduce using rule 96 (termino -> factor terminop .)
    WRITE           reduce using rule 96 (termino -> factor terminop .)
    IF              reduce using rule 96 (termino -> factor terminop .)
    FOR             reduce using rule 96 (termino -> factor terminop .)
    ID              reduce using rule 96 (termino -> factor terminop .)
    WHILE           reduce using rule 96 (termino -> factor terminop .)
    APAR            reduce using rule 96 (termino -> factor terminop .)
    CTEC            reduce using rule 96 (termino -> factor terminop .)
    CTEI            reduce using rule 96 (termino -> factor terminop .)
    CTEF            reduce using rule 96 (termino -> factor terminop .)
    CLLA            reduce using rule 96 (termino -> factor terminop .)
    CPAR            reduce using rule 96 (termino -> factor terminop .)
    CCOR            reduce using rule 96 (termino -> factor terminop .)
    COMA            reduce using rule 96 (termino -> factor terminop .)
    PTCOMA          reduce using rule 96 (termino -> factor terminop .)
    TO              reduce using rule 96 (termino -> factor terminop .)
    DO              reduce using rule 96 (termino -> factor terminop .)


state 126

    (97) terminop -> oper . termino
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    termino                        shift and go to state 157
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 127

    (98) terminop -> empty .

    MENOS           reduce using rule 98 (terminop -> empty .)
    MAS             reduce using rule 98 (terminop -> empty .)
    MAYQ            reduce using rule 98 (terminop -> empty .)
    MENQ            reduce using rule 98 (terminop -> empty .)
    MAYI            reduce using rule 98 (terminop -> empty .)
    MENI            reduce using rule 98 (terminop -> empty .)
    IGUAL           reduce using rule 98 (terminop -> empty .)
    DIF             reduce using rule 98 (terminop -> empty .)
    AND             reduce using rule 98 (terminop -> empty .)
    OR              reduce using rule 98 (terminop -> empty .)
    RETURN          reduce using rule 98 (terminop -> empty .)
    READ            reduce using rule 98 (terminop -> empty .)
    WRITE           reduce using rule 98 (terminop -> empty .)
    IF              reduce using rule 98 (terminop -> empty .)
    FOR             reduce using rule 98 (terminop -> empty .)
    ID              reduce using rule 98 (terminop -> empty .)
    WHILE           reduce using rule 98 (terminop -> empty .)
    APAR            reduce using rule 98 (terminop -> empty .)
    CTEC            reduce using rule 98 (terminop -> empty .)
    CTEI            reduce using rule 98 (terminop -> empty .)
    CTEF            reduce using rule 98 (terminop -> empty .)
    CLLA            reduce using rule 98 (terminop -> empty .)
    CPAR            reduce using rule 98 (terminop -> empty .)
    CCOR            reduce using rule 98 (terminop -> empty .)
    COMA            reduce using rule 98 (terminop -> empty .)
    PTCOMA          reduce using rule 98 (terminop -> empty .)
    TO              reduce using rule 98 (terminop -> empty .)
    DO              reduce using rule 98 (terminop -> empty .)


state 128

    (99) oper -> DIV .

    APAR            reduce using rule 99 (oper -> DIV .)
    CTEC            reduce using rule 99 (oper -> DIV .)
    CTEI            reduce using rule 99 (oper -> DIV .)
    CTEF            reduce using rule 99 (oper -> DIV .)
    ID              reduce using rule 99 (oper -> DIV .)


state 129

    (100) oper -> POR .

    APAR            reduce using rule 100 (oper -> POR .)
    CTEC            reduce using rule 100 (oper -> POR .)
    CTEI            reduce using rule 100 (oper -> POR .)
    CTEF            reduce using rule 100 (oper -> POR .)
    ID              reduce using rule 100 (oper -> POR .)


state 130

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA . varss ALLA addsize estatutos CLLA endfunction funcs
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (114) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 114 (empty -> .)

    varss                          shift and go to state 158
    empty                          shift and go to state 7

state 131

    (35) params -> tipo DOSPNTS insertParams ididx . paramsp
    (38) paramsp -> . COMA params
    (39) paramsp -> . empty
    (114) empty -> .

    COMA            shift and go to state 160
    CPAR            reduce using rule 114 (empty -> .)

    paramsp                        shift and go to state 159
    empty                          shift and go to state 161

state 132

    (12) varspp -> COMA insertVar varsppp varspp .

    INT             reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    FLOAT           reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    CHAR            reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    FUNCTION        reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    MAIN            reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)
    ALLA            reduce using rule 12 (varspp -> COMA insertVar varsppp varspp .)


state 133

    (101) factor -> APAR exp CPAR .

    DIV             reduce using rule 101 (factor -> APAR exp CPAR .)
    POR             reduce using rule 101 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 101 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 101 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 101 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 101 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 101 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 101 (factor -> APAR exp CPAR .)
    IGUAL           reduce using rule 101 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 101 (factor -> APAR exp CPAR .)
    AND             reduce using rule 101 (factor -> APAR exp CPAR .)
    OR              reduce using rule 101 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 101 (factor -> APAR exp CPAR .)
    READ            reduce using rule 101 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 101 (factor -> APAR exp CPAR .)
    IF              reduce using rule 101 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 101 (factor -> APAR exp CPAR .)
    ID              reduce using rule 101 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 101 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 101 (factor -> APAR exp CPAR .)
    CTEC            reduce using rule 101 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 101 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 101 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 101 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 101 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 101 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 101 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 101 (factor -> APAR exp CPAR .)
    TO              reduce using rule 101 (factor -> APAR exp CPAR .)
    DO              reduce using rule 101 (factor -> APAR exp CPAR .)


state 134

    (40) asig -> varAs ididx igualAs . asigpp PTCOMA
    (47) asigpp -> . exp
    (48) asigpp -> . ACOR asigp CCOR
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    ACOR            shift and go to state 164
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    asigpp                         shift and go to state 162
    exp                            shift and go to state 163
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 135

    (42) igualAs -> IGUAL .

    ACOR            reduce using rule 42 (igualAs -> IGUAL .)
    APAR            reduce using rule 42 (igualAs -> IGUAL .)
    CTEC            reduce using rule 42 (igualAs -> IGUAL .)
    CTEI            reduce using rule 42 (igualAs -> IGUAL .)
    CTEF            reduce using rule 42 (igualAs -> IGUAL .)
    ID              reduce using rule 42 (igualAs -> IGUAL .)


state 136

    (49) ididx -> ACOR exp . CCOR

    CCOR            shift and go to state 165


state 137

    (51) return -> RETURN APAR exp . CPAR PTCOMA

    CPAR            shift and go to state 166


state 138

    (52) lectura -> READ APAR readId . ididx lecturapp CPAR PTCOMA
    (49) ididx -> . ACOR exp CCOR
    (50) ididx -> . empty
    (114) empty -> .

    ACOR            shift and go to state 94
    COMA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)

    ididx                          shift and go to state 167
    empty                          shift and go to state 95

state 139

    (53) readId -> ID .

    ACOR            reduce using rule 53 (readId -> ID .)
    COMA            reduce using rule 53 (readId -> ID .)
    CPAR            reduce using rule 53 (readId -> ID .)


state 140

    (56) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (61) escriturapp -> . COMA escriturap
    (62) escriturapp -> . empty
    (114) empty -> .

    COMA            shift and go to state 169
    CPAR            reduce using rule 114 (empty -> .)

    escriturapp                    shift and go to state 168
    empty                          shift and go to state 170

state 141

    (57) escriturap -> pushEsc .

    COMA            reduce using rule 57 (escriturap -> pushEsc .)
    CPAR            reduce using rule 57 (escriturap -> pushEsc .)


state 142

    (58) escriturap -> exp .

    COMA            reduce using rule 58 (escriturap -> exp .)
    CPAR            reduce using rule 58 (escriturap -> exp .)


state 143

    (59) pushEsc -> STRING .

    COMA            reduce using rule 59 (pushEsc -> STRING .)
    CPAR            reduce using rule 59 (pushEsc -> STRING .)


state 144

    (60) pushEsc -> CTEC .
    (109) ctes -> CTEC .

  ! reduce/reduce conflict for COMA resolved using rule 60 (pushEsc -> CTEC .)
  ! reduce/reduce conflict for CPAR resolved using rule 60 (pushEsc -> CTEC .)
    COMA            reduce using rule 60 (pushEsc -> CTEC .)
    CPAR            reduce using rule 60 (pushEsc -> CTEC .)
    DIV             reduce using rule 109 (ctes -> CTEC .)
    POR             reduce using rule 109 (ctes -> CTEC .)
    MENOS           reduce using rule 109 (ctes -> CTEC .)
    MAS             reduce using rule 109 (ctes -> CTEC .)
    MAYQ            reduce using rule 109 (ctes -> CTEC .)
    MENQ            reduce using rule 109 (ctes -> CTEC .)
    MAYI            reduce using rule 109 (ctes -> CTEC .)
    MENI            reduce using rule 109 (ctes -> CTEC .)
    IGUAL           reduce using rule 109 (ctes -> CTEC .)
    DIF             reduce using rule 109 (ctes -> CTEC .)
    AND             reduce using rule 109 (ctes -> CTEC .)
    OR              reduce using rule 109 (ctes -> CTEC .)

  ! COMA            [ reduce using rule 109 (ctes -> CTEC .) ]
  ! CPAR            [ reduce using rule 109 (ctes -> CTEC .) ]


state 145

    (63) cond -> IF APAR exp . checkCond THEN ALLA estatutos CLLA condpp
    (67) checkCond -> . CPAR

    CPAR            shift and go to state 172

    checkCond                      shift and go to state 171

state 146

    (68) while -> saveWhile APAR exp . checkWhileCond DO ALLA estatutos CLLA
    (70) checkWhileCond -> . CPAR

    CPAR            shift and go to state 174

    checkWhileCond                 shift and go to state 173

state 147

    (71) for -> FOR varFor ididx . IGUAL exp initFor exp beforeDo ALLA estatutos CLLA

    IGUAL           shift and go to state 175


state 148

    (76) expp -> OR exp .

    RETURN          reduce using rule 76 (expp -> OR exp .)
    READ            reduce using rule 76 (expp -> OR exp .)
    WRITE           reduce using rule 76 (expp -> OR exp .)
    IF              reduce using rule 76 (expp -> OR exp .)
    FOR             reduce using rule 76 (expp -> OR exp .)
    ID              reduce using rule 76 (expp -> OR exp .)
    WHILE           reduce using rule 76 (expp -> OR exp .)
    APAR            reduce using rule 76 (expp -> OR exp .)
    CTEC            reduce using rule 76 (expp -> OR exp .)
    CTEI            reduce using rule 76 (expp -> OR exp .)
    CTEF            reduce using rule 76 (expp -> OR exp .)
    CLLA            reduce using rule 76 (expp -> OR exp .)
    CPAR            reduce using rule 76 (expp -> OR exp .)
    CCOR            reduce using rule 76 (expp -> OR exp .)
    COMA            reduce using rule 76 (expp -> OR exp .)
    PTCOMA          reduce using rule 76 (expp -> OR exp .)
    TO              reduce using rule 76 (expp -> OR exp .)
    DO              reduce using rule 76 (expp -> OR exp .)


state 149

    (112) ctes -> ID validateExistance factorp .

    DIV             reduce using rule 112 (ctes -> ID validateExistance factorp .)
    POR             reduce using rule 112 (ctes -> ID validateExistance factorp .)
    MENOS           reduce using rule 112 (ctes -> ID validateExistance factorp .)
    MAS             reduce using rule 112 (ctes -> ID validateExistance factorp .)
    MAYQ            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    MENQ            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    MAYI            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    MENI            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    IGUAL           reduce using rule 112 (ctes -> ID validateExistance factorp .)
    DIF             reduce using rule 112 (ctes -> ID validateExistance factorp .)
    AND             reduce using rule 112 (ctes -> ID validateExistance factorp .)
    OR              reduce using rule 112 (ctes -> ID validateExistance factorp .)
    RETURN          reduce using rule 112 (ctes -> ID validateExistance factorp .)
    READ            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    WRITE           reduce using rule 112 (ctes -> ID validateExistance factorp .)
    IF              reduce using rule 112 (ctes -> ID validateExistance factorp .)
    FOR             reduce using rule 112 (ctes -> ID validateExistance factorp .)
    ID              reduce using rule 112 (ctes -> ID validateExistance factorp .)
    WHILE           reduce using rule 112 (ctes -> ID validateExistance factorp .)
    APAR            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    CTEC            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    CTEI            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    CTEF            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    CLLA            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    CPAR            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    CCOR            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    COMA            reduce using rule 112 (ctes -> ID validateExistance factorp .)
    PTCOMA          reduce using rule 112 (ctes -> ID validateExistance factorp .)
    TO              reduce using rule 112 (ctes -> ID validateExistance factorp .)
    DO              reduce using rule 112 (ctes -> ID validateExistance factorp .)


state 150

    (103) factorp -> APAR . createEra exp factorpp CPAR
    (106) createEra -> .

    APAR            reduce using rule 106 (createEra -> .)
    CTEC            reduce using rule 106 (createEra -> .)
    CTEI            reduce using rule 106 (createEra -> .)
    CTEF            reduce using rule 106 (createEra -> .)
    ID              reduce using rule 106 (createEra -> .)

    createEra                      shift and go to state 176

state 151

    (104) factorp -> ACOR . exp CCOR
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 177
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 152

    (105) factorp -> empty .

    DIV             reduce using rule 105 (factorp -> empty .)
    POR             reduce using rule 105 (factorp -> empty .)
    MENOS           reduce using rule 105 (factorp -> empty .)
    MAS             reduce using rule 105 (factorp -> empty .)
    MAYQ            reduce using rule 105 (factorp -> empty .)
    MENQ            reduce using rule 105 (factorp -> empty .)
    MAYI            reduce using rule 105 (factorp -> empty .)
    MENI            reduce using rule 105 (factorp -> empty .)
    IGUAL           reduce using rule 105 (factorp -> empty .)
    DIF             reduce using rule 105 (factorp -> empty .)
    AND             reduce using rule 105 (factorp -> empty .)
    OR              reduce using rule 105 (factorp -> empty .)
    RETURN          reduce using rule 105 (factorp -> empty .)
    READ            reduce using rule 105 (factorp -> empty .)
    WRITE           reduce using rule 105 (factorp -> empty .)
    IF              reduce using rule 105 (factorp -> empty .)
    FOR             reduce using rule 105 (factorp -> empty .)
    ID              reduce using rule 105 (factorp -> empty .)
    WHILE           reduce using rule 105 (factorp -> empty .)
    APAR            reduce using rule 105 (factorp -> empty .)
    CTEC            reduce using rule 105 (factorp -> empty .)
    CTEI            reduce using rule 105 (factorp -> empty .)
    CTEF            reduce using rule 105 (factorp -> empty .)
    CLLA            reduce using rule 105 (factorp -> empty .)
    CPAR            reduce using rule 105 (factorp -> empty .)
    CCOR            reduce using rule 105 (factorp -> empty .)
    COMA            reduce using rule 105 (factorp -> empty .)
    PTCOMA          reduce using rule 105 (factorp -> empty .)
    TO              reduce using rule 105 (factorp -> empty .)
    DO              reduce using rule 105 (factorp -> empty .)


state 153

    (79) texpp -> andCheck texp .

    OR              reduce using rule 79 (texpp -> andCheck texp .)
    RETURN          reduce using rule 79 (texpp -> andCheck texp .)
    READ            reduce using rule 79 (texpp -> andCheck texp .)
    WRITE           reduce using rule 79 (texpp -> andCheck texp .)
    IF              reduce using rule 79 (texpp -> andCheck texp .)
    FOR             reduce using rule 79 (texpp -> andCheck texp .)
    ID              reduce using rule 79 (texpp -> andCheck texp .)
    WHILE           reduce using rule 79 (texpp -> andCheck texp .)
    APAR            reduce using rule 79 (texpp -> andCheck texp .)
    CTEC            reduce using rule 79 (texpp -> andCheck texp .)
    CTEI            reduce using rule 79 (texpp -> andCheck texp .)
    CTEF            reduce using rule 79 (texpp -> andCheck texp .)
    CLLA            reduce using rule 79 (texpp -> andCheck texp .)
    CPAR            reduce using rule 79 (texpp -> andCheck texp .)
    CCOR            reduce using rule 79 (texpp -> andCheck texp .)
    COMA            reduce using rule 79 (texpp -> andCheck texp .)
    PTCOMA          reduce using rule 79 (texpp -> andCheck texp .)
    TO              reduce using rule 79 (texpp -> andCheck texp .)
    DO              reduce using rule 79 (texpp -> andCheck texp .)


state 154

    (83) gexpp -> addPO mexp .

    AND             reduce using rule 83 (gexpp -> addPO mexp .)
    OR              reduce using rule 83 (gexpp -> addPO mexp .)
    RETURN          reduce using rule 83 (gexpp -> addPO mexp .)
    READ            reduce using rule 83 (gexpp -> addPO mexp .)
    WRITE           reduce using rule 83 (gexpp -> addPO mexp .)
    IF              reduce using rule 83 (gexpp -> addPO mexp .)
    FOR             reduce using rule 83 (gexpp -> addPO mexp .)
    ID              reduce using rule 83 (gexpp -> addPO mexp .)
    WHILE           reduce using rule 83 (gexpp -> addPO mexp .)
    APAR            reduce using rule 83 (gexpp -> addPO mexp .)
    CTEC            reduce using rule 83 (gexpp -> addPO mexp .)
    CTEI            reduce using rule 83 (gexpp -> addPO mexp .)
    CTEF            reduce using rule 83 (gexpp -> addPO mexp .)
    CLLA            reduce using rule 83 (gexpp -> addPO mexp .)
    CPAR            reduce using rule 83 (gexpp -> addPO mexp .)
    CCOR            reduce using rule 83 (gexpp -> addPO mexp .)
    COMA            reduce using rule 83 (gexpp -> addPO mexp .)
    PTCOMA          reduce using rule 83 (gexpp -> addPO mexp .)
    TO              reduce using rule 83 (gexpp -> addPO mexp .)
    DO              reduce using rule 83 (gexpp -> addPO mexp .)


state 155

    (89) addPO -> IGUAL IGUAL .

    APAR            reduce using rule 89 (addPO -> IGUAL IGUAL .)
    CTEC            reduce using rule 89 (addPO -> IGUAL IGUAL .)
    CTEI            reduce using rule 89 (addPO -> IGUAL IGUAL .)
    CTEF            reduce using rule 89 (addPO -> IGUAL IGUAL .)
    ID              reduce using rule 89 (addPO -> IGUAL IGUAL .)


state 156

    (92) mexpp -> operSR mexp .

    MAYQ            reduce using rule 92 (mexpp -> operSR mexp .)
    MENQ            reduce using rule 92 (mexpp -> operSR mexp .)
    MAYI            reduce using rule 92 (mexpp -> operSR mexp .)
    MENI            reduce using rule 92 (mexpp -> operSR mexp .)
    IGUAL           reduce using rule 92 (mexpp -> operSR mexp .)
    DIF             reduce using rule 92 (mexpp -> operSR mexp .)
    AND             reduce using rule 92 (mexpp -> operSR mexp .)
    OR              reduce using rule 92 (mexpp -> operSR mexp .)
    RETURN          reduce using rule 92 (mexpp -> operSR mexp .)
    READ            reduce using rule 92 (mexpp -> operSR mexp .)
    WRITE           reduce using rule 92 (mexpp -> operSR mexp .)
    IF              reduce using rule 92 (mexpp -> operSR mexp .)
    FOR             reduce using rule 92 (mexpp -> operSR mexp .)
    ID              reduce using rule 92 (mexpp -> operSR mexp .)
    WHILE           reduce using rule 92 (mexpp -> operSR mexp .)
    APAR            reduce using rule 92 (mexpp -> operSR mexp .)
    CTEC            reduce using rule 92 (mexpp -> operSR mexp .)
    CTEI            reduce using rule 92 (mexpp -> operSR mexp .)
    CTEF            reduce using rule 92 (mexpp -> operSR mexp .)
    CLLA            reduce using rule 92 (mexpp -> operSR mexp .)
    CPAR            reduce using rule 92 (mexpp -> operSR mexp .)
    CCOR            reduce using rule 92 (mexpp -> operSR mexp .)
    COMA            reduce using rule 92 (mexpp -> operSR mexp .)
    PTCOMA          reduce using rule 92 (mexpp -> operSR mexp .)
    TO              reduce using rule 92 (mexpp -> operSR mexp .)
    DO              reduce using rule 92 (mexpp -> operSR mexp .)


state 157

    (97) terminop -> oper termino .

    MENOS           reduce using rule 97 (terminop -> oper termino .)
    MAS             reduce using rule 97 (terminop -> oper termino .)
    MAYQ            reduce using rule 97 (terminop -> oper termino .)
    MENQ            reduce using rule 97 (terminop -> oper termino .)
    MAYI            reduce using rule 97 (terminop -> oper termino .)
    MENI            reduce using rule 97 (terminop -> oper termino .)
    IGUAL           reduce using rule 97 (terminop -> oper termino .)
    DIF             reduce using rule 97 (terminop -> oper termino .)
    AND             reduce using rule 97 (terminop -> oper termino .)
    OR              reduce using rule 97 (terminop -> oper termino .)
    RETURN          reduce using rule 97 (terminop -> oper termino .)
    READ            reduce using rule 97 (terminop -> oper termino .)
    WRITE           reduce using rule 97 (terminop -> oper termino .)
    IF              reduce using rule 97 (terminop -> oper termino .)
    FOR             reduce using rule 97 (terminop -> oper termino .)
    ID              reduce using rule 97 (terminop -> oper termino .)
    WHILE           reduce using rule 97 (terminop -> oper termino .)
    APAR            reduce using rule 97 (terminop -> oper termino .)
    CTEC            reduce using rule 97 (terminop -> oper termino .)
    CTEI            reduce using rule 97 (terminop -> oper termino .)
    CTEF            reduce using rule 97 (terminop -> oper termino .)
    CLLA            reduce using rule 97 (terminop -> oper termino .)
    CPAR            reduce using rule 97 (terminop -> oper termino .)
    CCOR            reduce using rule 97 (terminop -> oper termino .)
    COMA            reduce using rule 97 (terminop -> oper termino .)
    PTCOMA          reduce using rule 97 (terminop -> oper termino .)
    TO              reduce using rule 97 (terminop -> oper termino .)
    DO              reduce using rule 97 (terminop -> oper termino .)


state 158

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss . ALLA addsize estatutos CLLA endfunction funcs

    ALLA            shift and go to state 178


state 159

    (35) params -> tipo DOSPNTS insertParams ididx paramsp .

    CPAR            reduce using rule 35 (params -> tipo DOSPNTS insertParams ididx paramsp .)


state 160

    (38) paramsp -> COMA . params
    (35) params -> . tipo DOSPNTS insertParams ididx paramsp
    (36) params -> . empty
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (114) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 114 (empty -> .)

    params                         shift and go to state 179
    tipo                           shift and go to state 36
    empty                          shift and go to state 37

state 161

    (39) paramsp -> empty .

    CPAR            reduce using rule 39 (paramsp -> empty .)


state 162

    (40) asig -> varAs ididx igualAs asigpp . PTCOMA

    PTCOMA          shift and go to state 180


state 163

    (47) asigpp -> exp .

    PTCOMA          reduce using rule 47 (asigpp -> exp .)


state 164

    (48) asigpp -> ACOR . asigp CCOR
    (43) asigp -> . exp asigppp
    (44) asigp -> . empty
    (75) exp -> . texp expp
    (114) empty -> .
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CCOR            reduce using rule 114 (empty -> .)
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    asigp                          shift and go to state 181
    exp                            shift and go to state 182
    empty                          shift and go to state 183
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 165

    (49) ididx -> ACOR exp CCOR .

    IGUAL           reduce using rule 49 (ididx -> ACOR exp CCOR .)
    COMA            reduce using rule 49 (ididx -> ACOR exp CCOR .)
    CPAR            reduce using rule 49 (ididx -> ACOR exp CCOR .)


state 166

    (51) return -> RETURN APAR exp CPAR . PTCOMA

    PTCOMA          shift and go to state 184


state 167

    (52) lectura -> READ APAR readId ididx . lecturapp CPAR PTCOMA
    (54) lecturapp -> . COMA readId ididx lecturapp
    (55) lecturapp -> . empty
    (114) empty -> .

    COMA            shift and go to state 186
    CPAR            reduce using rule 114 (empty -> .)

    lecturapp                      shift and go to state 185
    empty                          shift and go to state 187

state 168

    (56) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 188


state 169

    (61) escriturapp -> COMA . escriturap
    (57) escriturap -> . pushEsc
    (58) escriturap -> . exp
    (59) pushEsc -> . STRING
    (60) pushEsc -> . CTEC
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 143
    CTEC            shift and go to state 144
    APAR            shift and go to state 48
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    escriturap                     shift and go to state 189
    pushEsc                        shift and go to state 141
    exp                            shift and go to state 142
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 170

    (62) escriturapp -> empty .

    CPAR            reduce using rule 62 (escriturapp -> empty .)


state 171

    (63) cond -> IF APAR exp checkCond . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 190


state 172

    (67) checkCond -> CPAR .

    THEN            reduce using rule 67 (checkCond -> CPAR .)


state 173

    (68) while -> saveWhile APAR exp checkWhileCond . DO ALLA estatutos CLLA

    DO              shift and go to state 191


state 174

    (70) checkWhileCond -> CPAR .

    DO              reduce using rule 70 (checkWhileCond -> CPAR .)


state 175

    (71) for -> FOR varFor ididx IGUAL . exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 192
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 176

    (103) factorp -> APAR createEra . exp factorpp CPAR
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 193
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 177

    (104) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 194


state 178

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA . addsize estatutos CLLA endfunction funcs
    (19) addsize -> .

    RETURN          reduce using rule 19 (addsize -> .)
    READ            reduce using rule 19 (addsize -> .)
    WRITE           reduce using rule 19 (addsize -> .)
    IF              reduce using rule 19 (addsize -> .)
    FOR             reduce using rule 19 (addsize -> .)
    ID              reduce using rule 19 (addsize -> .)
    WHILE           reduce using rule 19 (addsize -> .)
    APAR            reduce using rule 19 (addsize -> .)
    CTEC            reduce using rule 19 (addsize -> .)
    CTEI            reduce using rule 19 (addsize -> .)
    CTEF            reduce using rule 19 (addsize -> .)

    addsize                        shift and go to state 195

state 179

    (38) paramsp -> COMA params .

    CPAR            reduce using rule 38 (paramsp -> COMA params .)


state 180

    (40) asig -> varAs ididx igualAs asigpp PTCOMA .

    RETURN          reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    READ            reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WRITE           reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    IF              reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    FOR             reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    ID              reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WHILE           reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    APAR            reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEC            reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEI            reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEF            reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CLLA            reduce using rule 40 (asig -> varAs ididx igualAs asigpp PTCOMA .)


state 181

    (48) asigpp -> ACOR asigp . CCOR

    CCOR            shift and go to state 196


state 182

    (43) asigp -> exp . asigppp
    (45) asigppp -> . COMA asigp
    (46) asigppp -> . empty
    (114) empty -> .

    COMA            shift and go to state 198
    CCOR            reduce using rule 114 (empty -> .)

    asigppp                        shift and go to state 197
    empty                          shift and go to state 199

state 183

    (44) asigp -> empty .

    CCOR            reduce using rule 44 (asigp -> empty .)


state 184

    (51) return -> RETURN APAR exp CPAR PTCOMA .

    RETURN          reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    READ            reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    WRITE           reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    IF              reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    FOR             reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    ID              reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    WHILE           reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    APAR            reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEC            reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEI            reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEF            reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)
    CLLA            reduce using rule 51 (return -> RETURN APAR exp CPAR PTCOMA .)


state 185

    (52) lectura -> READ APAR readId ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 200


state 186

    (54) lecturapp -> COMA . readId ididx lecturapp
    (53) readId -> . ID

    ID              shift and go to state 139

    readId                         shift and go to state 201

state 187

    (55) lecturapp -> empty .

    CPAR            reduce using rule 55 (lecturapp -> empty .)


state 188

    (56) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 202


state 189

    (61) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 61 (escriturapp -> COMA escriturap .)


state 190

    (63) cond -> IF APAR exp checkCond THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 203


state 191

    (68) while -> saveWhile APAR exp checkWhileCond DO . ALLA estatutos CLLA

    ALLA            shift and go to state 204


state 192

    (71) for -> FOR varFor ididx IGUAL exp . initFor exp beforeDo ALLA estatutos CLLA
    (73) initFor -> . TO

    TO              shift and go to state 206

    initFor                        shift and go to state 205

state 193

    (103) factorp -> APAR createEra exp . factorpp CPAR
    (107) factorpp -> . COMA exp factorpp
    (108) factorpp -> . empty
    (114) empty -> .

    COMA            shift and go to state 208
    CPAR            reduce using rule 114 (empty -> .)

    factorpp                       shift and go to state 207
    empty                          shift and go to state 209

state 194

    (104) factorp -> ACOR exp CCOR .

    DIV             reduce using rule 104 (factorp -> ACOR exp CCOR .)
    POR             reduce using rule 104 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 104 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 104 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    IGUAL           reduce using rule 104 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 104 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 104 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 104 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 104 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 104 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 104 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 104 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 104 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 104 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    CTEC            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 104 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 104 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 104 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 104 (factorp -> ACOR exp CCOR .)


state 195

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize . estatutos CLLA endfunction funcs
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    estatutos                      shift and go to state 210
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 196

    (48) asigpp -> ACOR asigp CCOR .

    PTCOMA          reduce using rule 48 (asigpp -> ACOR asigp CCOR .)


state 197

    (43) asigp -> exp asigppp .

    CCOR            reduce using rule 43 (asigp -> exp asigppp .)


state 198

    (45) asigppp -> COMA . asigp
    (43) asigp -> . exp asigppp
    (44) asigp -> . empty
    (75) exp -> . texp expp
    (114) empty -> .
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    CCOR            reduce using rule 114 (empty -> .)
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    asigp                          shift and go to state 211
    exp                            shift and go to state 182
    empty                          shift and go to state 183
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 199

    (46) asigppp -> empty .

    CCOR            reduce using rule 46 (asigppp -> empty .)


state 200

    (52) lectura -> READ APAR readId ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 212


state 201

    (54) lecturapp -> COMA readId . ididx lecturapp
    (49) ididx -> . ACOR exp CCOR
    (50) ididx -> . empty
    (114) empty -> .

    ACOR            shift and go to state 94
    COMA            reduce using rule 114 (empty -> .)
    CPAR            reduce using rule 114 (empty -> .)

    ididx                          shift and go to state 213
    empty                          shift and go to state 95

state 202

    (56) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    RETURN          reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    ID              reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEC            reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 56 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 203

    (63) cond -> IF APAR exp checkCond THEN ALLA . estatutos CLLA condpp
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    exp                            shift and go to state 57
    estatutos                      shift and go to state 214
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 204

    (68) while -> saveWhile APAR exp checkWhileCond DO ALLA . estatutos CLLA
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    saveWhile                      shift and go to state 63
    exp                            shift and go to state 57
    estatutos                      shift and go to state 215
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 205

    (71) for -> FOR varFor ididx IGUAL exp initFor . exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 216
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 206

    (73) initFor -> TO .

    APAR            reduce using rule 73 (initFor -> TO .)
    CTEC            reduce using rule 73 (initFor -> TO .)
    CTEI            reduce using rule 73 (initFor -> TO .)
    CTEF            reduce using rule 73 (initFor -> TO .)
    ID              reduce using rule 73 (initFor -> TO .)


state 207

    (103) factorp -> APAR createEra exp factorpp . CPAR

    CPAR            shift and go to state 217


state 208

    (107) factorpp -> COMA . exp factorpp
    (75) exp -> . texp expp
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 81

    exp                            shift and go to state 218
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 209

    (108) factorpp -> empty .

    CPAR            reduce using rule 108 (factorpp -> empty .)


state 210

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos . CLLA endfunction funcs

    CLLA            shift and go to state 219


state 211

    (45) asigppp -> COMA asigp .

    CCOR            reduce using rule 45 (asigppp -> COMA asigp .)


state 212

    (52) lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .

    RETURN          reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    ID              reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEC            reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 52 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)


state 213

    (54) lecturapp -> COMA readId ididx . lecturapp
    (54) lecturapp -> . COMA readId ididx lecturapp
    (55) lecturapp -> . empty
    (114) empty -> .

    COMA            shift and go to state 186
    CPAR            reduce using rule 114 (empty -> .)

    lecturapp                      shift and go to state 220
    empty                          shift and go to state 187

state 214

    (63) cond -> IF APAR exp checkCond THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 221


state 215

    (68) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos . CLLA

    CLLA            shift and go to state 222


state 216

    (71) for -> FOR varFor ididx IGUAL exp initFor exp . beforeDo ALLA estatutos CLLA
    (74) beforeDo -> . DO

    DO              shift and go to state 224

    beforeDo                       shift and go to state 223

state 217

    (103) factorp -> APAR createEra exp factorpp CPAR .

    DIV             reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    POR             reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    MENOS           reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    MAS             reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    MAYQ            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    MENQ            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    MAYI            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    MENI            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    IGUAL           reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    DIF             reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    AND             reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    OR              reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    RETURN          reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    READ            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    WRITE           reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    IF              reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    FOR             reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    ID              reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    WHILE           reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    APAR            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    CTEC            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    CTEI            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    CTEF            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    CLLA            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    CPAR            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    CCOR            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    COMA            reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    PTCOMA          reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    TO              reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)
    DO              reduce using rule 103 (factorp -> APAR createEra exp factorpp CPAR .)


state 218

    (107) factorpp -> COMA exp . factorpp
    (107) factorpp -> . COMA exp factorpp
    (108) factorpp -> . empty
    (114) empty -> .

    COMA            shift and go to state 208
    CPAR            reduce using rule 114 (empty -> .)

    factorpp                       shift and go to state 225
    empty                          shift and go to state 209

state 219

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA . endfunction funcs
    (18) endfunction -> .

    FUNCTION        reduce using rule 18 (endfunction -> .)
    MAIN            reduce using rule 18 (endfunction -> .)

    endfunction                    shift and go to state 226

state 220

    (54) lecturapp -> COMA readId ididx lecturapp .

    CPAR            reduce using rule 54 (lecturapp -> COMA readId ididx lecturapp .)


state 221

    (63) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA . condpp
    (64) condpp -> . checkElse ALLA estatutos CLLA
    (65) condpp -> . empty
    (66) checkElse -> . ELSE
    (114) empty -> .

    ELSE            shift and go to state 230
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    WRITE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    APAR            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CLLA            reduce using rule 114 (empty -> .)

    condpp                         shift and go to state 227
    checkElse                      shift and go to state 228
    empty                          shift and go to state 229

state 222

    (68) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .

    RETURN          reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    READ            reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    IF              reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    FOR             reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    ID              reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    APAR            reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEC            reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 68 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)


state 223

    (71) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo . ALLA estatutos CLLA

    ALLA            shift and go to state 231


state 224

    (74) beforeDo -> DO .

    ALLA            reduce using rule 74 (beforeDo -> DO .)


state 225

    (107) factorpp -> COMA exp factorpp .

    CPAR            reduce using rule 107 (factorpp -> COMA exp factorpp .)


state 226

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction . funcs
    (13) funcs -> . FUNCTION funcsp insertFunc funcspp
    (14) funcs -> . empty
    (114) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 114 (empty -> .)

    funcs                          shift and go to state 232
    empty                          shift and go to state 11

state 227

    (63) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .

    RETURN          reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    ID              reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEC            reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 63 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)


state 228

    (64) condpp -> checkElse . ALLA estatutos CLLA

    ALLA            shift and go to state 233


state 229

    (65) condpp -> empty .

    RETURN          reduce using rule 65 (condpp -> empty .)
    READ            reduce using rule 65 (condpp -> empty .)
    WRITE           reduce using rule 65 (condpp -> empty .)
    IF              reduce using rule 65 (condpp -> empty .)
    FOR             reduce using rule 65 (condpp -> empty .)
    ID              reduce using rule 65 (condpp -> empty .)
    WHILE           reduce using rule 65 (condpp -> empty .)
    APAR            reduce using rule 65 (condpp -> empty .)
    CTEC            reduce using rule 65 (condpp -> empty .)
    CTEI            reduce using rule 65 (condpp -> empty .)
    CTEF            reduce using rule 65 (condpp -> empty .)
    CLLA            reduce using rule 65 (condpp -> empty .)


state 230

    (66) checkElse -> ELSE .

    ALLA            reduce using rule 66 (checkElse -> ELSE .)


state 231

    (71) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA . estatutos CLLA
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    exp                            shift and go to state 57
    estatutos                      shift and go to state 234
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 232

    (16) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .

    MAIN            reduce using rule 16 (funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs .)


state 233

    (64) condpp -> checkElse ALLA . estatutos CLLA
    (22) estatutos -> . asig estatutop
    (23) estatutos -> . return estatutop
    (24) estatutos -> . lectura estatutop
    (25) estatutos -> . escritura estatutop
    (26) estatutos -> . cond estatutop
    (27) estatutos -> . while estatutop
    (28) estatutos -> . for estatutop
    (29) estatutos -> . exp estatutop
    (40) asig -> . varAs ididx igualAs asigpp PTCOMA
    (51) return -> . RETURN APAR exp CPAR PTCOMA
    (52) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (56) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (63) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (68) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (71) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (75) exp -> . texp expp
    (41) varAs -> . ID
    (69) saveWhile -> . WHILE
    (78) texp -> . gexp texpp
    (82) gexp -> . mexp gexpp
    (91) mexp -> . termino mexpp
    (96) termino -> . factor terminop
    (101) factor -> . APAR exp CPAR
    (102) factor -> . ctes
    (109) ctes -> . CTEC
    (110) ctes -> . CTEI
    (111) ctes -> . CTEF
    (112) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 59
    READ            shift and go to state 60
    WRITE           shift and go to state 61
    IF              shift and go to state 62
    FOR             shift and go to state 64
    ID              shift and go to state 66
    WHILE           shift and go to state 67
    APAR            shift and go to state 48
    CTEC            shift and go to state 73
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75

    estatutos                      shift and go to state 235
    asig                           shift and go to state 50
    return                         shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    cond                           shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    exp                            shift and go to state 57
    varAs                          shift and go to state 58
    saveWhile                      shift and go to state 63
    texp                           shift and go to state 65
    gexp                           shift and go to state 68
    mexp                           shift and go to state 69
    termino                        shift and go to state 70
    factor                         shift and go to state 71
    ctes                           shift and go to state 72

state 234

    (71) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos . CLLA

    CLLA            shift and go to state 236


state 235

    (64) condpp -> checkElse ALLA estatutos . CLLA

    CLLA            shift and go to state 237


state 236

    (71) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .

    RETURN          reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    READ            reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WRITE           reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    IF              reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    FOR             reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    ID              reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WHILE           reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    APAR            reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEC            reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEI            reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEF            reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CLLA            reduce using rule 71 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)


state 237

    (64) condpp -> checkElse ALLA estatutos CLLA .

    RETURN          reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    READ            reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    WRITE           reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    IF              reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    FOR             reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    ID              reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    WHILE           reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    APAR            reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEC            reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEI            reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEF            reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)
    CLLA            reduce using rule 64 (condpp -> checkElse ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 106 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (varAs -> ID)
WARNING: rejected rule (validateExistance -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 144 resolved using rule (pushEsc -> CTEC)
WARNING: rejected rule (ctes -> CTEC) in state 144
