Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    STR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
Rule 2     agregarTablaFunciones -> ID PTCOMA
Rule 3     poptomain -> <empty>
Rule 4     varss -> VARS vars
Rule 5     varss -> empty
Rule 6     vars -> tipo DOSPNTS insertVar varsppp varspp vars
Rule 7     vars -> empty
Rule 8     insertVar -> ID
Rule 9     varsppp -> initDim CTEI setDim
Rule 10    varsppp -> empty
Rule 11    setDim -> CCOR
Rule 12    initDim -> ACOR
Rule 13    varspp -> PTCOMA
Rule 14    varspp -> COMA insertVar varsppp varspp
Rule 15    funcs -> FUNCTION funcsp insertFunc funcspp
Rule 16    funcs -> empty
Rule 17    insertFunc -> ID
Rule 18    funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs
Rule 19    updateParamTable -> <empty>
Rule 20    endfunction -> <empty>
Rule 21    addsize -> <empty>
Rule 22    addinit -> <empty>
Rule 23    funcsp -> VOID
Rule 24    funcsp -> tipo
Rule 25    estatutos -> asig estatutop
Rule 26    estatutos -> return estatutop
Rule 27    estatutos -> lectura estatutop
Rule 28    estatutos -> escritura estatutop
Rule 29    estatutos -> cond estatutop
Rule 30    estatutos -> while estatutop
Rule 31    estatutos -> for estatutop
Rule 32    estatutos -> exp estatutop
Rule 33    estatutop -> estatutos
Rule 34    estatutop -> empty
Rule 35    tipo -> INT
Rule 36    tipo -> FLOAT
Rule 37    tipo -> CHAR
Rule 38    params -> tipo DOSPNTS insertParams ididx paramsp
Rule 39    params -> empty
Rule 40    insertParams -> ID
Rule 41    paramsp -> COMA params
Rule 42    paramsp -> empty
Rule 43    asig -> varAs ididx igualAs asigpp PTCOMA
Rule 44    varAs -> ID
Rule 45    igualAs -> IGUAL
Rule 46    asigp -> exp asigppp
Rule 47    asigp -> empty
Rule 48    asigppp -> COMA asigp
Rule 49    asigppp -> empty
Rule 50    asigpp -> exp
Rule 51    ididx -> corArr exp ver CCOR
Rule 52    ididx -> empty
Rule 53    corArr -> ACOR
Rule 54    ver -> <empty>
Rule 55    return -> RETURN APAR exp CPAR PTCOMA
Rule 56    lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA
Rule 57    readId -> ID
Rule 58    lecturapp -> COMA readId ididx lecturapp
Rule 59    lecturapp -> empty
Rule 60    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 61    escriturap -> pushEsc
Rule 62    escriturap -> exp
Rule 63    pushEsc -> STRING
Rule 64    pushEsc -> CTEC
Rule 65    escriturapp -> COMA escriturap escriturapp
Rule 66    escriturapp -> empty
Rule 67    cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
Rule 68    condpp -> checkElse ALLA estatutos CLLA
Rule 69    condpp -> empty
Rule 70    checkElse -> ELSE
Rule 71    checkCond -> CPAR
Rule 72    while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
Rule 73    saveWhile -> WHILE
Rule 74    checkWhileCond -> CPAR
Rule 75    for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
Rule 76    varFor -> ID
Rule 77    initFor -> TO
Rule 78    beforeDo -> DO
Rule 79    exp -> texp expp
Rule 80    expp -> OR exp
Rule 81    expp -> empty
Rule 82    texp -> gexp texpp
Rule 83    texpp -> andCheck texp
Rule 84    texpp -> empty
Rule 85    andCheck -> AND
Rule 86    gexp -> mexp gexpp
Rule 87    gexpp -> addPO mexp
Rule 88    gexpp -> empty
Rule 89    addPO -> MAYQ
Rule 90    addPO -> MENQ
Rule 91    addPO -> MAYI
Rule 92    addPO -> MENI
Rule 93    addPO -> IGUALIGUAL
Rule 94    addPO -> DIF
Rule 95    addPO -> NOT
Rule 96    mexp -> termino mexpp
Rule 97    mexpp -> operSR mexp
Rule 98    mexpp -> empty
Rule 99    operSR -> MENOS
Rule 100   operSR -> MAS
Rule 101   termino -> factor terminop
Rule 102   terminop -> oper termino
Rule 103   terminop -> empty
Rule 104   oper -> DIV
Rule 105   oper -> POR
Rule 106   meteFondo -> APAR
Rule 107   sacaFondo -> CPAR
Rule 108   factor -> meteFondo exp sacaFondo
Rule 109   factor -> ctes
Rule 110   factorp -> APAR createEra factorParams cparParams
Rule 111   factorp -> ididx
Rule 112   factorParams -> exp valParams factorpp
Rule 113   factorParams -> empty
Rule 114   cparParams -> CPAR
Rule 115   createEra -> <empty>
Rule 116   valParams -> <empty>
Rule 117   factorpp -> COMA exp valParams factorpp
Rule 118   factorpp -> empty
Rule 119   ctes -> CTEC
Rule 120   ctes -> CTEI
Rule 121   ctes -> CTEF
Rule 122   ctes -> ID validateExistance factorp
Rule 123   validateExistance -> <empty>
Rule 124   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 12 53
ALLA                 : 1 18 67 68 72 75
AND                  : 85
APAR                 : 1 18 55 56 60 67 72 106 110
BOOL                 : 
CCOR                 : 11 51
CHAR                 : 37
CLLA                 : 1 18 67 68 72 75
COMA                 : 14 41 48 58 65 117
CPAR                 : 1 18 55 56 60 71 74 107 114
CTEC                 : 64 119
CTEF                 : 121
CTEI                 : 9 120
DIF                  : 94
DIV                  : 104
DO                   : 72 78
DOSPNTS              : 6 38
ELSE                 : 70
FALSE                : 
FLOAT                : 36
FOR                  : 75
FUNCTION             : 15
ID                   : 2 8 17 40 44 57 76 122
IF                   : 67
IGUAL                : 45 75
IGUALIGUAL           : 93
INT                  : 35
MAIN                 : 1
MAS                  : 100
MAYI                 : 91
MAYQ                 : 89
MENI                 : 92
MENOS                : 99
MENQ                 : 90
NOT                  : 95
OR                   : 80
POR                  : 105
PROGRAM              : 1
PTCOMA               : 2 13 18 43 55 56 60
READ                 : 56
RETURN               : 55
STR                  : 
STRING               : 63
THEN                 : 67
TO                   : 77
TRUE                 : 
VARS                 : 4
VOID                 : 23
WHILE                : 73
WRITE                : 60
error                : 

Nonterminals, with rules where they appear

addPO                : 87
addinit              : 18
addsize              : 18
agregarTablaFunciones : 1
andCheck             : 83
asig                 : 25
asigp                : 48
asigpp               : 43
asigppp              : 46
beforeDo             : 75
checkCond            : 67
checkElse            : 68
checkWhileCond       : 72
cond                 : 29
condpp               : 67
corArr               : 51
cparParams           : 110
createEra            : 110
ctes                 : 109
empty                : 5 7 10 16 34 39 42 47 49 52 59 66 69 81 84 88 98 103 113 118
endfunction          : 18
escritura            : 28
escriturap           : 60 65
escriturapp          : 60 65
estatutop            : 25 26 27 28 29 30 31 32
estatutos            : 1 18 33 67 68 72 75
exp                  : 32 46 50 51 55 62 67 72 75 75 80 108 112 117
expp                 : 79
factor               : 101
factorParams         : 110
factorp              : 122
factorpp             : 112 117
for                  : 31
funcs                : 1 18
funcsp               : 15
funcspp              : 15
gexp                 : 82
gexpp                : 86
ididx                : 38 43 56 58 75 111
igualAs              : 43
initDim              : 9
initFor              : 75
insertFunc           : 15
insertParams         : 38
insertVar            : 6 14
lectura              : 27
lecturapp            : 56 58
meteFondo            : 108
mexp                 : 86 87 97
mexpp                : 96
oper                 : 102
operSR               : 97
params               : 18 41
paramsp              : 38
poptomain            : 1
program              : 0
pushEsc              : 61
readId               : 56 58
return               : 26
sacaFondo            : 108
saveWhile            : 72
setDim               : 9
termino              : 96 102
terminop             : 101
texp                 : 79 83
texpp                : 82
tipo                 : 6 24 38
updateParamTable     : 18
valParams            : 112 117
validateExistance    : 122
varAs                : 43
varFor               : 75
vars                 : 4 6
varspp               : 6 14
varsppp              : 6 14
varss                : 1 18
ver                  : 51
while                : 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (2) agregarTablaFunciones -> . ID PTCOMA

    ID              shift and go to state 4

    agregarTablaFunciones          shift and go to state 3

state 3

    (1) program -> PROGRAM agregarTablaFunciones . varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (124) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 124 (empty -> .)
    MAIN            reduce using rule 124 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) agregarTablaFunciones -> ID . PTCOMA

    PTCOMA          shift and go to state 8


state 5

    (1) program -> PROGRAM agregarTablaFunciones varss . funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA
    (15) funcs -> . FUNCTION funcsp insertFunc funcspp
    (16) funcs -> . empty
    (124) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 124 (empty -> .)

    funcs                          shift and go to state 9
    empty                          shift and go to state 11

state 6

    (4) varss -> VARS . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (124) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 124 (empty -> .)
    MAIN            reduce using rule 124 (empty -> .)
    ALLA            reduce using rule 124 (empty -> .)

    vars                           shift and go to state 12
    tipo                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) varss -> empty .

    FUNCTION        reduce using rule 5 (varss -> empty .)
    MAIN            reduce using rule 5 (varss -> empty .)
    ALLA            reduce using rule 5 (varss -> empty .)


state 8

    (2) agregarTablaFunciones -> ID PTCOMA .

    VARS            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    FUNCTION        reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)
    MAIN            reduce using rule 2 (agregarTablaFunciones -> ID PTCOMA .)


state 9

    (1) program -> PROGRAM agregarTablaFunciones varss funcs . MAIN APAR CPAR ALLA poptomain estatutos CLLA

    MAIN            shift and go to state 18


state 10

    (15) funcs -> FUNCTION . funcsp insertFunc funcspp
    (23) funcsp -> . VOID
    (24) funcsp -> . tipo
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    funcsp                         shift and go to state 19
    tipo                           shift and go to state 21

state 11

    (16) funcs -> empty .

    MAIN            reduce using rule 16 (funcs -> empty .)


state 12

    (4) varss -> VARS vars .

    FUNCTION        reduce using rule 4 (varss -> VARS vars .)
    MAIN            reduce using rule 4 (varss -> VARS vars .)
    ALLA            reduce using rule 4 (varss -> VARS vars .)


state 13

    (6) vars -> tipo . DOSPNTS insertVar varsppp varspp vars

    DOSPNTS         shift and go to state 22


state 14

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    ALLA            reduce using rule 7 (vars -> empty .)


state 15

    (35) tipo -> INT .

    DOSPNTS         reduce using rule 35 (tipo -> INT .)
    ID              reduce using rule 35 (tipo -> INT .)


state 16

    (36) tipo -> FLOAT .

    DOSPNTS         reduce using rule 36 (tipo -> FLOAT .)
    ID              reduce using rule 36 (tipo -> FLOAT .)


state 17

    (37) tipo -> CHAR .

    DOSPNTS         reduce using rule 37 (tipo -> CHAR .)
    ID              reduce using rule 37 (tipo -> CHAR .)


state 18

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN . APAR CPAR ALLA poptomain estatutos CLLA

    APAR            shift and go to state 23


state 19

    (15) funcs -> FUNCTION funcsp . insertFunc funcspp
    (17) insertFunc -> . ID

    ID              shift and go to state 25

    insertFunc                     shift and go to state 24

state 20

    (23) funcsp -> VOID .

    ID              reduce using rule 23 (funcsp -> VOID .)


state 21

    (24) funcsp -> tipo .

    ID              reduce using rule 24 (funcsp -> tipo .)


state 22

    (6) vars -> tipo DOSPNTS . insertVar varsppp varspp vars
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 26

state 23

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR . CPAR ALLA poptomain estatutos CLLA

    CPAR            shift and go to state 28


state 24

    (15) funcs -> FUNCTION funcsp insertFunc . funcspp
    (18) funcspp -> . APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs

    APAR            shift and go to state 30

    funcspp                        shift and go to state 29

state 25

    (17) insertFunc -> ID .

    APAR            reduce using rule 17 (insertFunc -> ID .)


state 26

    (6) vars -> tipo DOSPNTS insertVar . varsppp varspp vars
    (9) varsppp -> . initDim CTEI setDim
    (10) varsppp -> . empty
    (12) initDim -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)

    varsppp                        shift and go to state 31
    initDim                        shift and go to state 32
    empty                          shift and go to state 33

state 27

    (8) insertVar -> ID .

    ACOR            reduce using rule 8 (insertVar -> ID .)
    PTCOMA          reduce using rule 8 (insertVar -> ID .)
    COMA            reduce using rule 8 (insertVar -> ID .)


state 28

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR . ALLA poptomain estatutos CLLA

    ALLA            shift and go to state 35


state 29

    (15) funcs -> FUNCTION funcsp insertFunc funcspp .

    MAIN            reduce using rule 15 (funcs -> FUNCTION funcsp insertFunc funcspp .)


state 30

    (18) funcspp -> APAR . params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs
    (38) params -> . tipo DOSPNTS insertParams ididx paramsp
    (39) params -> . empty
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (124) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 124 (empty -> .)

    params                         shift and go to state 36
    tipo                           shift and go to state 37
    empty                          shift and go to state 38

state 31

    (6) vars -> tipo DOSPNTS insertVar varsppp . varspp vars
    (13) varspp -> . PTCOMA
    (14) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 40
    COMA            shift and go to state 41

    varspp                         shift and go to state 39

state 32

    (9) varsppp -> initDim . CTEI setDim

    CTEI            shift and go to state 42


state 33

    (10) varsppp -> empty .

    PTCOMA          reduce using rule 10 (varsppp -> empty .)
    COMA            reduce using rule 10 (varsppp -> empty .)


state 34

    (12) initDim -> ACOR .

    CTEI            reduce using rule 12 (initDim -> ACOR .)


state 35

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA . poptomain estatutos CLLA
    (3) poptomain -> .

    RETURN          reduce using rule 3 (poptomain -> .)
    READ            reduce using rule 3 (poptomain -> .)
    WRITE           reduce using rule 3 (poptomain -> .)
    IF              reduce using rule 3 (poptomain -> .)
    FOR             reduce using rule 3 (poptomain -> .)
    ID              reduce using rule 3 (poptomain -> .)
    WHILE           reduce using rule 3 (poptomain -> .)
    APAR            reduce using rule 3 (poptomain -> .)
    CTEC            reduce using rule 3 (poptomain -> .)
    CTEI            reduce using rule 3 (poptomain -> .)
    CTEF            reduce using rule 3 (poptomain -> .)

    poptomain                      shift and go to state 43

state 36

    (18) funcspp -> APAR params . CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs

    CPAR            shift and go to state 44


state 37

    (38) params -> tipo . DOSPNTS insertParams ididx paramsp

    DOSPNTS         shift and go to state 45


state 38

    (39) params -> empty .

    CPAR            reduce using rule 39 (params -> empty .)


state 39

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp . vars
    (6) vars -> . tipo DOSPNTS insertVar varsppp varspp vars
    (7) vars -> . empty
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (124) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 124 (empty -> .)
    MAIN            reduce using rule 124 (empty -> .)
    ALLA            reduce using rule 124 (empty -> .)

    tipo                           shift and go to state 13
    vars                           shift and go to state 46
    empty                          shift and go to state 14

state 40

    (13) varspp -> PTCOMA .

    INT             reduce using rule 13 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 13 (varspp -> PTCOMA .)
    CHAR            reduce using rule 13 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 13 (varspp -> PTCOMA .)
    MAIN            reduce using rule 13 (varspp -> PTCOMA .)
    ALLA            reduce using rule 13 (varspp -> PTCOMA .)


state 41

    (14) varspp -> COMA . insertVar varsppp varspp
    (8) insertVar -> . ID

    ID              shift and go to state 27

    insertVar                      shift and go to state 47

state 42

    (9) varsppp -> initDim CTEI . setDim
    (11) setDim -> . CCOR

    CCOR            shift and go to state 49

    setDim                         shift and go to state 48

state 43

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain . estatutos CLLA
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    estatutos                      shift and go to state 51
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 44

    (18) funcspp -> APAR params CPAR . updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs
    (19) updateParamTable -> .

    PTCOMA          reduce using rule 19 (updateParamTable -> .)

    updateParamTable               shift and go to state 79

state 45

    (38) params -> tipo DOSPNTS . insertParams ididx paramsp
    (40) insertParams -> . ID

    ID              shift and go to state 81

    insertParams                   shift and go to state 80

state 46

    (6) vars -> tipo DOSPNTS insertVar varsppp varspp vars .

    FUNCTION        reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    MAIN            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)
    ALLA            reduce using rule 6 (vars -> tipo DOSPNTS insertVar varsppp varspp vars .)


state 47

    (14) varspp -> COMA insertVar . varsppp varspp
    (9) varsppp -> . initDim CTEI setDim
    (10) varsppp -> . empty
    (12) initDim -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)

    varsppp                        shift and go to state 82
    initDim                        shift and go to state 32
    empty                          shift and go to state 33

state 48

    (9) varsppp -> initDim CTEI setDim .

    PTCOMA          reduce using rule 9 (varsppp -> initDim CTEI setDim .)
    COMA            reduce using rule 9 (varsppp -> initDim CTEI setDim .)


state 49

    (11) setDim -> CCOR .

    PTCOMA          reduce using rule 11 (setDim -> CCOR .)
    COMA            reduce using rule 11 (setDim -> CCOR .)


state 50

    (106) meteFondo -> APAR .

    APAR            reduce using rule 106 (meteFondo -> APAR .)
    CTEC            reduce using rule 106 (meteFondo -> APAR .)
    CTEI            reduce using rule 106 (meteFondo -> APAR .)
    CTEF            reduce using rule 106 (meteFondo -> APAR .)
    ID              reduce using rule 106 (meteFondo -> APAR .)


state 51

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos . CLLA

    CLLA            shift and go to state 83


state 52

    (25) estatutos -> asig . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    asig                           shift and go to state 52
    estatutop                      shift and go to state 84
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 53

    (26) estatutos -> return . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    return                         shift and go to state 53
    estatutop                      shift and go to state 87
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 54

    (27) estatutos -> lectura . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    lectura                        shift and go to state 54
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    return                         shift and go to state 53
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 55

    (28) estatutos -> escritura . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    escritura                      shift and go to state 55
    estatutop                      shift and go to state 89
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 56

    (29) estatutos -> cond . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    cond                           shift and go to state 56
    estatutop                      shift and go to state 90
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 57

    (30) estatutos -> while . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    while                          shift and go to state 57
    estatutop                      shift and go to state 91
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 58

    (31) estatutos -> for . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    for                            shift and go to state 58
    estatutop                      shift and go to state 92
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 59

    (32) estatutos -> exp . estatutop
    (33) estatutop -> . estatutos
    (34) estatutop -> . empty
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (124) empty -> .
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CLLA            reduce using rule 124 (empty -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    exp                            shift and go to state 59
    estatutop                      shift and go to state 93
    estatutos                      shift and go to state 85
    empty                          shift and go to state 86
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 60

    (43) asig -> varAs . ididx igualAs asigpp PTCOMA
    (51) ididx -> . corArr exp ver CCOR
    (52) ididx -> . empty
    (53) corArr -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 97
    IGUAL           reduce using rule 124 (empty -> .)

    ididx                          shift and go to state 94
    corArr                         shift and go to state 95
    empty                          shift and go to state 96

state 61

    (55) return -> RETURN . APAR exp CPAR PTCOMA

    APAR            shift and go to state 98


state 62

    (56) lectura -> READ . APAR readId ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 99


state 63

    (60) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 100


state 64

    (67) cond -> IF . APAR exp checkCond THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 101


state 65

    (72) while -> saveWhile . APAR exp checkWhileCond DO ALLA estatutos CLLA

    APAR            shift and go to state 102


state 66

    (75) for -> FOR . varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (76) varFor -> . ID

    ID              shift and go to state 104

    varFor                         shift and go to state 103

state 67

    (79) exp -> texp . expp
    (80) expp -> . OR exp
    (81) expp -> . empty
    (124) empty -> .

    OR              shift and go to state 106
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    APAR            reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)
    CCOR            reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)
    PTCOMA          reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    DO              reduce using rule 124 (empty -> .)

    expp                           shift and go to state 105
    empty                          shift and go to state 107

state 68

    (44) varAs -> ID .
    (122) ctes -> ID . validateExistance factorp
    (123) validateExistance -> .

  ! reduce/reduce conflict for ACOR resolved using rule 44 (varAs -> ID .)
    ACOR            reduce using rule 44 (varAs -> ID .)
    IGUAL           reduce using rule 44 (varAs -> ID .)
    APAR            reduce using rule 123 (validateExistance -> .)
    DIV             reduce using rule 123 (validateExistance -> .)
    POR             reduce using rule 123 (validateExistance -> .)
    MENOS           reduce using rule 123 (validateExistance -> .)
    MAS             reduce using rule 123 (validateExistance -> .)
    MAYQ            reduce using rule 123 (validateExistance -> .)
    MENQ            reduce using rule 123 (validateExistance -> .)
    MAYI            reduce using rule 123 (validateExistance -> .)
    MENI            reduce using rule 123 (validateExistance -> .)
    IGUALIGUAL      reduce using rule 123 (validateExistance -> .)
    DIF             reduce using rule 123 (validateExistance -> .)
    NOT             reduce using rule 123 (validateExistance -> .)
    AND             reduce using rule 123 (validateExistance -> .)
    OR              reduce using rule 123 (validateExistance -> .)
    RETURN          reduce using rule 123 (validateExistance -> .)
    READ            reduce using rule 123 (validateExistance -> .)
    WRITE           reduce using rule 123 (validateExistance -> .)
    IF              reduce using rule 123 (validateExistance -> .)
    FOR             reduce using rule 123 (validateExistance -> .)
    ID              reduce using rule 123 (validateExistance -> .)
    WHILE           reduce using rule 123 (validateExistance -> .)
    CTEC            reduce using rule 123 (validateExistance -> .)
    CTEI            reduce using rule 123 (validateExistance -> .)
    CTEF            reduce using rule 123 (validateExistance -> .)
    CLLA            reduce using rule 123 (validateExistance -> .)

  ! ACOR            [ reduce using rule 123 (validateExistance -> .) ]

    validateExistance              shift and go to state 108

state 69

    (73) saveWhile -> WHILE .

    APAR            reduce using rule 73 (saveWhile -> WHILE .)


state 70

    (82) texp -> gexp . texpp
    (83) texpp -> . andCheck texp
    (84) texpp -> . empty
    (85) andCheck -> . AND
    (124) empty -> .

    AND             shift and go to state 112
    OR              reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    APAR            reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)
    CCOR            reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)
    PTCOMA          reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    DO              reduce using rule 124 (empty -> .)

    texpp                          shift and go to state 109
    andCheck                       shift and go to state 110
    empty                          shift and go to state 111

state 71

    (86) gexp -> mexp . gexpp
    (87) gexpp -> . addPO mexp
    (88) gexpp -> . empty
    (89) addPO -> . MAYQ
    (90) addPO -> . MENQ
    (91) addPO -> . MAYI
    (92) addPO -> . MENI
    (93) addPO -> . IGUALIGUAL
    (94) addPO -> . DIF
    (95) addPO -> . NOT
    (124) empty -> .

    MAYQ            shift and go to state 116
    MENQ            shift and go to state 117
    MAYI            shift and go to state 118
    MENI            shift and go to state 119
    IGUALIGUAL      shift and go to state 120
    DIF             shift and go to state 121
    NOT             shift and go to state 122
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    APAR            reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)
    CCOR            reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)
    PTCOMA          reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    DO              reduce using rule 124 (empty -> .)

    gexpp                          shift and go to state 113
    addPO                          shift and go to state 114
    empty                          shift and go to state 115

state 72

    (96) mexp -> termino . mexpp
    (97) mexpp -> . operSR mexp
    (98) mexpp -> . empty
    (99) operSR -> . MENOS
    (100) operSR -> . MAS
    (124) empty -> .

    MENOS           shift and go to state 126
    MAS             shift and go to state 127
    MAYQ            reduce using rule 124 (empty -> .)
    MENQ            reduce using rule 124 (empty -> .)
    MAYI            reduce using rule 124 (empty -> .)
    MENI            reduce using rule 124 (empty -> .)
    IGUALIGUAL      reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    NOT             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    APAR            reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)
    CCOR            reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)
    PTCOMA          reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    DO              reduce using rule 124 (empty -> .)

    mexpp                          shift and go to state 123
    operSR                         shift and go to state 124
    empty                          shift and go to state 125

state 73

    (101) termino -> factor . terminop
    (102) terminop -> . oper termino
    (103) terminop -> . empty
    (104) oper -> . DIV
    (105) oper -> . POR
    (124) empty -> .

    DIV             shift and go to state 131
    POR             shift and go to state 132
    MENOS           reduce using rule 124 (empty -> .)
    MAS             reduce using rule 124 (empty -> .)
    MAYQ            reduce using rule 124 (empty -> .)
    MENQ            reduce using rule 124 (empty -> .)
    MAYI            reduce using rule 124 (empty -> .)
    MENI            reduce using rule 124 (empty -> .)
    IGUALIGUAL      reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    NOT             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    APAR            reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)
    CCOR            reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)
    PTCOMA          reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    DO              reduce using rule 124 (empty -> .)

    terminop                       shift and go to state 128
    oper                           shift and go to state 129
    empty                          shift and go to state 130

state 74

    (108) factor -> meteFondo . exp sacaFondo
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    meteFondo                      shift and go to state 74
    exp                            shift and go to state 133
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    ctes                           shift and go to state 75

state 75

    (109) factor -> ctes .

    DIV             reduce using rule 109 (factor -> ctes .)
    POR             reduce using rule 109 (factor -> ctes .)
    MENOS           reduce using rule 109 (factor -> ctes .)
    MAS             reduce using rule 109 (factor -> ctes .)
    MAYQ            reduce using rule 109 (factor -> ctes .)
    MENQ            reduce using rule 109 (factor -> ctes .)
    MAYI            reduce using rule 109 (factor -> ctes .)
    MENI            reduce using rule 109 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 109 (factor -> ctes .)
    DIF             reduce using rule 109 (factor -> ctes .)
    NOT             reduce using rule 109 (factor -> ctes .)
    AND             reduce using rule 109 (factor -> ctes .)
    OR              reduce using rule 109 (factor -> ctes .)
    RETURN          reduce using rule 109 (factor -> ctes .)
    READ            reduce using rule 109 (factor -> ctes .)
    WRITE           reduce using rule 109 (factor -> ctes .)
    IF              reduce using rule 109 (factor -> ctes .)
    FOR             reduce using rule 109 (factor -> ctes .)
    ID              reduce using rule 109 (factor -> ctes .)
    WHILE           reduce using rule 109 (factor -> ctes .)
    APAR            reduce using rule 109 (factor -> ctes .)
    CTEC            reduce using rule 109 (factor -> ctes .)
    CTEI            reduce using rule 109 (factor -> ctes .)
    CTEF            reduce using rule 109 (factor -> ctes .)
    CLLA            reduce using rule 109 (factor -> ctes .)
    CPAR            reduce using rule 109 (factor -> ctes .)
    CCOR            reduce using rule 109 (factor -> ctes .)
    COMA            reduce using rule 109 (factor -> ctes .)
    PTCOMA          reduce using rule 109 (factor -> ctes .)
    TO              reduce using rule 109 (factor -> ctes .)
    DO              reduce using rule 109 (factor -> ctes .)


state 76

    (119) ctes -> CTEC .

    DIV             reduce using rule 119 (ctes -> CTEC .)
    POR             reduce using rule 119 (ctes -> CTEC .)
    MENOS           reduce using rule 119 (ctes -> CTEC .)
    MAS             reduce using rule 119 (ctes -> CTEC .)
    MAYQ            reduce using rule 119 (ctes -> CTEC .)
    MENQ            reduce using rule 119 (ctes -> CTEC .)
    MAYI            reduce using rule 119 (ctes -> CTEC .)
    MENI            reduce using rule 119 (ctes -> CTEC .)
    IGUALIGUAL      reduce using rule 119 (ctes -> CTEC .)
    DIF             reduce using rule 119 (ctes -> CTEC .)
    NOT             reduce using rule 119 (ctes -> CTEC .)
    AND             reduce using rule 119 (ctes -> CTEC .)
    OR              reduce using rule 119 (ctes -> CTEC .)
    RETURN          reduce using rule 119 (ctes -> CTEC .)
    READ            reduce using rule 119 (ctes -> CTEC .)
    WRITE           reduce using rule 119 (ctes -> CTEC .)
    IF              reduce using rule 119 (ctes -> CTEC .)
    FOR             reduce using rule 119 (ctes -> CTEC .)
    ID              reduce using rule 119 (ctes -> CTEC .)
    WHILE           reduce using rule 119 (ctes -> CTEC .)
    APAR            reduce using rule 119 (ctes -> CTEC .)
    CTEC            reduce using rule 119 (ctes -> CTEC .)
    CTEI            reduce using rule 119 (ctes -> CTEC .)
    CTEF            reduce using rule 119 (ctes -> CTEC .)
    CLLA            reduce using rule 119 (ctes -> CTEC .)
    CPAR            reduce using rule 119 (ctes -> CTEC .)
    CCOR            reduce using rule 119 (ctes -> CTEC .)
    COMA            reduce using rule 119 (ctes -> CTEC .)
    PTCOMA          reduce using rule 119 (ctes -> CTEC .)
    TO              reduce using rule 119 (ctes -> CTEC .)
    DO              reduce using rule 119 (ctes -> CTEC .)


state 77

    (120) ctes -> CTEI .

    DIV             reduce using rule 120 (ctes -> CTEI .)
    POR             reduce using rule 120 (ctes -> CTEI .)
    MENOS           reduce using rule 120 (ctes -> CTEI .)
    MAS             reduce using rule 120 (ctes -> CTEI .)
    MAYQ            reduce using rule 120 (ctes -> CTEI .)
    MENQ            reduce using rule 120 (ctes -> CTEI .)
    MAYI            reduce using rule 120 (ctes -> CTEI .)
    MENI            reduce using rule 120 (ctes -> CTEI .)
    IGUALIGUAL      reduce using rule 120 (ctes -> CTEI .)
    DIF             reduce using rule 120 (ctes -> CTEI .)
    NOT             reduce using rule 120 (ctes -> CTEI .)
    AND             reduce using rule 120 (ctes -> CTEI .)
    OR              reduce using rule 120 (ctes -> CTEI .)
    RETURN          reduce using rule 120 (ctes -> CTEI .)
    READ            reduce using rule 120 (ctes -> CTEI .)
    WRITE           reduce using rule 120 (ctes -> CTEI .)
    IF              reduce using rule 120 (ctes -> CTEI .)
    FOR             reduce using rule 120 (ctes -> CTEI .)
    ID              reduce using rule 120 (ctes -> CTEI .)
    WHILE           reduce using rule 120 (ctes -> CTEI .)
    APAR            reduce using rule 120 (ctes -> CTEI .)
    CTEC            reduce using rule 120 (ctes -> CTEI .)
    CTEI            reduce using rule 120 (ctes -> CTEI .)
    CTEF            reduce using rule 120 (ctes -> CTEI .)
    CLLA            reduce using rule 120 (ctes -> CTEI .)
    CPAR            reduce using rule 120 (ctes -> CTEI .)
    CCOR            reduce using rule 120 (ctes -> CTEI .)
    COMA            reduce using rule 120 (ctes -> CTEI .)
    PTCOMA          reduce using rule 120 (ctes -> CTEI .)
    TO              reduce using rule 120 (ctes -> CTEI .)
    DO              reduce using rule 120 (ctes -> CTEI .)


state 78

    (121) ctes -> CTEF .

    DIV             reduce using rule 121 (ctes -> CTEF .)
    POR             reduce using rule 121 (ctes -> CTEF .)
    MENOS           reduce using rule 121 (ctes -> CTEF .)
    MAS             reduce using rule 121 (ctes -> CTEF .)
    MAYQ            reduce using rule 121 (ctes -> CTEF .)
    MENQ            reduce using rule 121 (ctes -> CTEF .)
    MAYI            reduce using rule 121 (ctes -> CTEF .)
    MENI            reduce using rule 121 (ctes -> CTEF .)
    IGUALIGUAL      reduce using rule 121 (ctes -> CTEF .)
    DIF             reduce using rule 121 (ctes -> CTEF .)
    NOT             reduce using rule 121 (ctes -> CTEF .)
    AND             reduce using rule 121 (ctes -> CTEF .)
    OR              reduce using rule 121 (ctes -> CTEF .)
    RETURN          reduce using rule 121 (ctes -> CTEF .)
    READ            reduce using rule 121 (ctes -> CTEF .)
    WRITE           reduce using rule 121 (ctes -> CTEF .)
    IF              reduce using rule 121 (ctes -> CTEF .)
    FOR             reduce using rule 121 (ctes -> CTEF .)
    ID              reduce using rule 121 (ctes -> CTEF .)
    WHILE           reduce using rule 121 (ctes -> CTEF .)
    APAR            reduce using rule 121 (ctes -> CTEF .)
    CTEC            reduce using rule 121 (ctes -> CTEF .)
    CTEI            reduce using rule 121 (ctes -> CTEF .)
    CTEF            reduce using rule 121 (ctes -> CTEF .)
    CLLA            reduce using rule 121 (ctes -> CTEF .)
    CPAR            reduce using rule 121 (ctes -> CTEF .)
    CCOR            reduce using rule 121 (ctes -> CTEF .)
    COMA            reduce using rule 121 (ctes -> CTEF .)
    PTCOMA          reduce using rule 121 (ctes -> CTEF .)
    TO              reduce using rule 121 (ctes -> CTEF .)
    DO              reduce using rule 121 (ctes -> CTEF .)


state 79

    (18) funcspp -> APAR params CPAR updateParamTable . PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs

    PTCOMA          shift and go to state 135


state 80

    (38) params -> tipo DOSPNTS insertParams . ididx paramsp
    (51) ididx -> . corArr exp ver CCOR
    (52) ididx -> . empty
    (53) corArr -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 97
    COMA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)

    ididx                          shift and go to state 136
    corArr                         shift and go to state 95
    empty                          shift and go to state 96

state 81

    (40) insertParams -> ID .

    ACOR            reduce using rule 40 (insertParams -> ID .)
    COMA            reduce using rule 40 (insertParams -> ID .)
    CPAR            reduce using rule 40 (insertParams -> ID .)


state 82

    (14) varspp -> COMA insertVar varsppp . varspp
    (13) varspp -> . PTCOMA
    (14) varspp -> . COMA insertVar varsppp varspp

    PTCOMA          shift and go to state 40
    COMA            shift and go to state 41

    varspp                         shift and go to state 137

state 83

    (1) program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA .)


state 84

    (25) estatutos -> asig estatutop .

    CLLA            reduce using rule 25 (estatutos -> asig estatutop .)


state 85

    (33) estatutop -> estatutos .

    CLLA            reduce using rule 33 (estatutop -> estatutos .)


state 86

    (34) estatutop -> empty .

    CLLA            reduce using rule 34 (estatutop -> empty .)


state 87

    (26) estatutos -> return estatutop .

    CLLA            reduce using rule 26 (estatutos -> return estatutop .)


state 88

    (27) estatutos -> lectura estatutop .

    CLLA            reduce using rule 27 (estatutos -> lectura estatutop .)


state 89

    (28) estatutos -> escritura estatutop .

    CLLA            reduce using rule 28 (estatutos -> escritura estatutop .)


state 90

    (29) estatutos -> cond estatutop .

    CLLA            reduce using rule 29 (estatutos -> cond estatutop .)


state 91

    (30) estatutos -> while estatutop .

    CLLA            reduce using rule 30 (estatutos -> while estatutop .)


state 92

    (31) estatutos -> for estatutop .

    CLLA            reduce using rule 31 (estatutos -> for estatutop .)


state 93

    (32) estatutos -> exp estatutop .

    CLLA            reduce using rule 32 (estatutos -> exp estatutop .)


state 94

    (43) asig -> varAs ididx . igualAs asigpp PTCOMA
    (45) igualAs -> . IGUAL

    IGUAL           shift and go to state 139

    igualAs                        shift and go to state 138

state 95

    (51) ididx -> corArr . exp ver CCOR
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 140
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 96

    (52) ididx -> empty .

    IGUAL           reduce using rule 52 (ididx -> empty .)
    COMA            reduce using rule 52 (ididx -> empty .)
    CPAR            reduce using rule 52 (ididx -> empty .)
    DIV             reduce using rule 52 (ididx -> empty .)
    POR             reduce using rule 52 (ididx -> empty .)
    MENOS           reduce using rule 52 (ididx -> empty .)
    MAS             reduce using rule 52 (ididx -> empty .)
    MAYQ            reduce using rule 52 (ididx -> empty .)
    MENQ            reduce using rule 52 (ididx -> empty .)
    MAYI            reduce using rule 52 (ididx -> empty .)
    MENI            reduce using rule 52 (ididx -> empty .)
    IGUALIGUAL      reduce using rule 52 (ididx -> empty .)
    DIF             reduce using rule 52 (ididx -> empty .)
    NOT             reduce using rule 52 (ididx -> empty .)
    AND             reduce using rule 52 (ididx -> empty .)
    OR              reduce using rule 52 (ididx -> empty .)
    RETURN          reduce using rule 52 (ididx -> empty .)
    READ            reduce using rule 52 (ididx -> empty .)
    WRITE           reduce using rule 52 (ididx -> empty .)
    IF              reduce using rule 52 (ididx -> empty .)
    FOR             reduce using rule 52 (ididx -> empty .)
    ID              reduce using rule 52 (ididx -> empty .)
    WHILE           reduce using rule 52 (ididx -> empty .)
    APAR            reduce using rule 52 (ididx -> empty .)
    CTEC            reduce using rule 52 (ididx -> empty .)
    CTEI            reduce using rule 52 (ididx -> empty .)
    CTEF            reduce using rule 52 (ididx -> empty .)
    CLLA            reduce using rule 52 (ididx -> empty .)
    CCOR            reduce using rule 52 (ididx -> empty .)
    PTCOMA          reduce using rule 52 (ididx -> empty .)
    TO              reduce using rule 52 (ididx -> empty .)
    DO              reduce using rule 52 (ididx -> empty .)


state 97

    (53) corArr -> ACOR .

    APAR            reduce using rule 53 (corArr -> ACOR .)
    CTEC            reduce using rule 53 (corArr -> ACOR .)
    CTEI            reduce using rule 53 (corArr -> ACOR .)
    CTEF            reduce using rule 53 (corArr -> ACOR .)
    ID              reduce using rule 53 (corArr -> ACOR .)


state 98

    (55) return -> RETURN APAR . exp CPAR PTCOMA
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 141
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 99

    (56) lectura -> READ APAR . readId ididx lecturapp CPAR PTCOMA
    (57) readId -> . ID

    ID              shift and go to state 143

    readId                         shift and go to state 142

state 100

    (60) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (61) escriturap -> . pushEsc
    (62) escriturap -> . exp
    (63) pushEsc -> . STRING
    (64) pushEsc -> . CTEC
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 147
    CTEC            shift and go to state 148
    APAR            shift and go to state 50
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    escriturap                     shift and go to state 144
    pushEsc                        shift and go to state 145
    exp                            shift and go to state 146
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 101

    (67) cond -> IF APAR . exp checkCond THEN ALLA estatutos CLLA condpp
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 149
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 102

    (72) while -> saveWhile APAR . exp checkWhileCond DO ALLA estatutos CLLA
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 150
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 103

    (75) for -> FOR varFor . ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (51) ididx -> . corArr exp ver CCOR
    (52) ididx -> . empty
    (53) corArr -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 97
    IGUAL           reduce using rule 124 (empty -> .)

    ididx                          shift and go to state 151
    corArr                         shift and go to state 95
    empty                          shift and go to state 96

state 104

    (76) varFor -> ID .

    ACOR            reduce using rule 76 (varFor -> ID .)
    IGUAL           reduce using rule 76 (varFor -> ID .)


state 105

    (79) exp -> texp expp .

    RETURN          reduce using rule 79 (exp -> texp expp .)
    READ            reduce using rule 79 (exp -> texp expp .)
    WRITE           reduce using rule 79 (exp -> texp expp .)
    IF              reduce using rule 79 (exp -> texp expp .)
    FOR             reduce using rule 79 (exp -> texp expp .)
    ID              reduce using rule 79 (exp -> texp expp .)
    WHILE           reduce using rule 79 (exp -> texp expp .)
    APAR            reduce using rule 79 (exp -> texp expp .)
    CTEC            reduce using rule 79 (exp -> texp expp .)
    CTEI            reduce using rule 79 (exp -> texp expp .)
    CTEF            reduce using rule 79 (exp -> texp expp .)
    CLLA            reduce using rule 79 (exp -> texp expp .)
    CPAR            reduce using rule 79 (exp -> texp expp .)
    CCOR            reduce using rule 79 (exp -> texp expp .)
    COMA            reduce using rule 79 (exp -> texp expp .)
    PTCOMA          reduce using rule 79 (exp -> texp expp .)
    TO              reduce using rule 79 (exp -> texp expp .)
    DO              reduce using rule 79 (exp -> texp expp .)


state 106

    (80) expp -> OR . exp
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 152
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 107

    (81) expp -> empty .

    RETURN          reduce using rule 81 (expp -> empty .)
    READ            reduce using rule 81 (expp -> empty .)
    WRITE           reduce using rule 81 (expp -> empty .)
    IF              reduce using rule 81 (expp -> empty .)
    FOR             reduce using rule 81 (expp -> empty .)
    ID              reduce using rule 81 (expp -> empty .)
    WHILE           reduce using rule 81 (expp -> empty .)
    APAR            reduce using rule 81 (expp -> empty .)
    CTEC            reduce using rule 81 (expp -> empty .)
    CTEI            reduce using rule 81 (expp -> empty .)
    CTEF            reduce using rule 81 (expp -> empty .)
    CLLA            reduce using rule 81 (expp -> empty .)
    CPAR            reduce using rule 81 (expp -> empty .)
    CCOR            reduce using rule 81 (expp -> empty .)
    COMA            reduce using rule 81 (expp -> empty .)
    PTCOMA          reduce using rule 81 (expp -> empty .)
    TO              reduce using rule 81 (expp -> empty .)
    DO              reduce using rule 81 (expp -> empty .)


state 108

    (122) ctes -> ID validateExistance . factorp
    (110) factorp -> . APAR createEra factorParams cparParams
    (111) factorp -> . ididx
    (51) ididx -> . corArr exp ver CCOR
    (52) ididx -> . empty
    (53) corArr -> . ACOR
    (124) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
    APAR            shift and go to state 154
    ACOR            shift and go to state 97
    DIV             reduce using rule 124 (empty -> .)
    POR             reduce using rule 124 (empty -> .)
    MENOS           reduce using rule 124 (empty -> .)
    MAS             reduce using rule 124 (empty -> .)
    MAYQ            reduce using rule 124 (empty -> .)
    MENQ            reduce using rule 124 (empty -> .)
    MAYI            reduce using rule 124 (empty -> .)
    MENI            reduce using rule 124 (empty -> .)
    IGUALIGUAL      reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    NOT             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)
    CCOR            reduce using rule 124 (empty -> .)
    COMA            reduce using rule 124 (empty -> .)
    PTCOMA          reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    DO              reduce using rule 124 (empty -> .)

  ! APAR            [ reduce using rule 124 (empty -> .) ]

    factorp                        shift and go to state 153
    ididx                          shift and go to state 155
    corArr                         shift and go to state 95
    empty                          shift and go to state 96

state 109

    (82) texp -> gexp texpp .

    OR              reduce using rule 82 (texp -> gexp texpp .)
    RETURN          reduce using rule 82 (texp -> gexp texpp .)
    READ            reduce using rule 82 (texp -> gexp texpp .)
    WRITE           reduce using rule 82 (texp -> gexp texpp .)
    IF              reduce using rule 82 (texp -> gexp texpp .)
    FOR             reduce using rule 82 (texp -> gexp texpp .)
    ID              reduce using rule 82 (texp -> gexp texpp .)
    WHILE           reduce using rule 82 (texp -> gexp texpp .)
    APAR            reduce using rule 82 (texp -> gexp texpp .)
    CTEC            reduce using rule 82 (texp -> gexp texpp .)
    CTEI            reduce using rule 82 (texp -> gexp texpp .)
    CTEF            reduce using rule 82 (texp -> gexp texpp .)
    CLLA            reduce using rule 82 (texp -> gexp texpp .)
    CPAR            reduce using rule 82 (texp -> gexp texpp .)
    CCOR            reduce using rule 82 (texp -> gexp texpp .)
    COMA            reduce using rule 82 (texp -> gexp texpp .)
    PTCOMA          reduce using rule 82 (texp -> gexp texpp .)
    TO              reduce using rule 82 (texp -> gexp texpp .)
    DO              reduce using rule 82 (texp -> gexp texpp .)


state 110

    (83) texpp -> andCheck . texp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    texp                           shift and go to state 156
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 111

    (84) texpp -> empty .

    OR              reduce using rule 84 (texpp -> empty .)
    RETURN          reduce using rule 84 (texpp -> empty .)
    READ            reduce using rule 84 (texpp -> empty .)
    WRITE           reduce using rule 84 (texpp -> empty .)
    IF              reduce using rule 84 (texpp -> empty .)
    FOR             reduce using rule 84 (texpp -> empty .)
    ID              reduce using rule 84 (texpp -> empty .)
    WHILE           reduce using rule 84 (texpp -> empty .)
    APAR            reduce using rule 84 (texpp -> empty .)
    CTEC            reduce using rule 84 (texpp -> empty .)
    CTEI            reduce using rule 84 (texpp -> empty .)
    CTEF            reduce using rule 84 (texpp -> empty .)
    CLLA            reduce using rule 84 (texpp -> empty .)
    CPAR            reduce using rule 84 (texpp -> empty .)
    CCOR            reduce using rule 84 (texpp -> empty .)
    COMA            reduce using rule 84 (texpp -> empty .)
    PTCOMA          reduce using rule 84 (texpp -> empty .)
    TO              reduce using rule 84 (texpp -> empty .)
    DO              reduce using rule 84 (texpp -> empty .)


state 112

    (85) andCheck -> AND .

    APAR            reduce using rule 85 (andCheck -> AND .)
    CTEC            reduce using rule 85 (andCheck -> AND .)
    CTEI            reduce using rule 85 (andCheck -> AND .)
    CTEF            reduce using rule 85 (andCheck -> AND .)
    ID              reduce using rule 85 (andCheck -> AND .)


state 113

    (86) gexp -> mexp gexpp .

    AND             reduce using rule 86 (gexp -> mexp gexpp .)
    OR              reduce using rule 86 (gexp -> mexp gexpp .)
    RETURN          reduce using rule 86 (gexp -> mexp gexpp .)
    READ            reduce using rule 86 (gexp -> mexp gexpp .)
    WRITE           reduce using rule 86 (gexp -> mexp gexpp .)
    IF              reduce using rule 86 (gexp -> mexp gexpp .)
    FOR             reduce using rule 86 (gexp -> mexp gexpp .)
    ID              reduce using rule 86 (gexp -> mexp gexpp .)
    WHILE           reduce using rule 86 (gexp -> mexp gexpp .)
    APAR            reduce using rule 86 (gexp -> mexp gexpp .)
    CTEC            reduce using rule 86 (gexp -> mexp gexpp .)
    CTEI            reduce using rule 86 (gexp -> mexp gexpp .)
    CTEF            reduce using rule 86 (gexp -> mexp gexpp .)
    CLLA            reduce using rule 86 (gexp -> mexp gexpp .)
    CPAR            reduce using rule 86 (gexp -> mexp gexpp .)
    CCOR            reduce using rule 86 (gexp -> mexp gexpp .)
    COMA            reduce using rule 86 (gexp -> mexp gexpp .)
    PTCOMA          reduce using rule 86 (gexp -> mexp gexpp .)
    TO              reduce using rule 86 (gexp -> mexp gexpp .)
    DO              reduce using rule 86 (gexp -> mexp gexpp .)


state 114

    (87) gexpp -> addPO . mexp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    mexp                           shift and go to state 157
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 115

    (88) gexpp -> empty .

    AND             reduce using rule 88 (gexpp -> empty .)
    OR              reduce using rule 88 (gexpp -> empty .)
    RETURN          reduce using rule 88 (gexpp -> empty .)
    READ            reduce using rule 88 (gexpp -> empty .)
    WRITE           reduce using rule 88 (gexpp -> empty .)
    IF              reduce using rule 88 (gexpp -> empty .)
    FOR             reduce using rule 88 (gexpp -> empty .)
    ID              reduce using rule 88 (gexpp -> empty .)
    WHILE           reduce using rule 88 (gexpp -> empty .)
    APAR            reduce using rule 88 (gexpp -> empty .)
    CTEC            reduce using rule 88 (gexpp -> empty .)
    CTEI            reduce using rule 88 (gexpp -> empty .)
    CTEF            reduce using rule 88 (gexpp -> empty .)
    CLLA            reduce using rule 88 (gexpp -> empty .)
    CPAR            reduce using rule 88 (gexpp -> empty .)
    CCOR            reduce using rule 88 (gexpp -> empty .)
    COMA            reduce using rule 88 (gexpp -> empty .)
    PTCOMA          reduce using rule 88 (gexpp -> empty .)
    TO              reduce using rule 88 (gexpp -> empty .)
    DO              reduce using rule 88 (gexpp -> empty .)


state 116

    (89) addPO -> MAYQ .

    APAR            reduce using rule 89 (addPO -> MAYQ .)
    CTEC            reduce using rule 89 (addPO -> MAYQ .)
    CTEI            reduce using rule 89 (addPO -> MAYQ .)
    CTEF            reduce using rule 89 (addPO -> MAYQ .)
    ID              reduce using rule 89 (addPO -> MAYQ .)


state 117

    (90) addPO -> MENQ .

    APAR            reduce using rule 90 (addPO -> MENQ .)
    CTEC            reduce using rule 90 (addPO -> MENQ .)
    CTEI            reduce using rule 90 (addPO -> MENQ .)
    CTEF            reduce using rule 90 (addPO -> MENQ .)
    ID              reduce using rule 90 (addPO -> MENQ .)


state 118

    (91) addPO -> MAYI .

    APAR            reduce using rule 91 (addPO -> MAYI .)
    CTEC            reduce using rule 91 (addPO -> MAYI .)
    CTEI            reduce using rule 91 (addPO -> MAYI .)
    CTEF            reduce using rule 91 (addPO -> MAYI .)
    ID              reduce using rule 91 (addPO -> MAYI .)


state 119

    (92) addPO -> MENI .

    APAR            reduce using rule 92 (addPO -> MENI .)
    CTEC            reduce using rule 92 (addPO -> MENI .)
    CTEI            reduce using rule 92 (addPO -> MENI .)
    CTEF            reduce using rule 92 (addPO -> MENI .)
    ID              reduce using rule 92 (addPO -> MENI .)


state 120

    (93) addPO -> IGUALIGUAL .

    APAR            reduce using rule 93 (addPO -> IGUALIGUAL .)
    CTEC            reduce using rule 93 (addPO -> IGUALIGUAL .)
    CTEI            reduce using rule 93 (addPO -> IGUALIGUAL .)
    CTEF            reduce using rule 93 (addPO -> IGUALIGUAL .)
    ID              reduce using rule 93 (addPO -> IGUALIGUAL .)


state 121

    (94) addPO -> DIF .

    APAR            reduce using rule 94 (addPO -> DIF .)
    CTEC            reduce using rule 94 (addPO -> DIF .)
    CTEI            reduce using rule 94 (addPO -> DIF .)
    CTEF            reduce using rule 94 (addPO -> DIF .)
    ID              reduce using rule 94 (addPO -> DIF .)


state 122

    (95) addPO -> NOT .

    APAR            reduce using rule 95 (addPO -> NOT .)
    CTEC            reduce using rule 95 (addPO -> NOT .)
    CTEI            reduce using rule 95 (addPO -> NOT .)
    CTEF            reduce using rule 95 (addPO -> NOT .)
    ID              reduce using rule 95 (addPO -> NOT .)


state 123

    (96) mexp -> termino mexpp .

    MAYQ            reduce using rule 96 (mexp -> termino mexpp .)
    MENQ            reduce using rule 96 (mexp -> termino mexpp .)
    MAYI            reduce using rule 96 (mexp -> termino mexpp .)
    MENI            reduce using rule 96 (mexp -> termino mexpp .)
    IGUALIGUAL      reduce using rule 96 (mexp -> termino mexpp .)
    DIF             reduce using rule 96 (mexp -> termino mexpp .)
    NOT             reduce using rule 96 (mexp -> termino mexpp .)
    AND             reduce using rule 96 (mexp -> termino mexpp .)
    OR              reduce using rule 96 (mexp -> termino mexpp .)
    RETURN          reduce using rule 96 (mexp -> termino mexpp .)
    READ            reduce using rule 96 (mexp -> termino mexpp .)
    WRITE           reduce using rule 96 (mexp -> termino mexpp .)
    IF              reduce using rule 96 (mexp -> termino mexpp .)
    FOR             reduce using rule 96 (mexp -> termino mexpp .)
    ID              reduce using rule 96 (mexp -> termino mexpp .)
    WHILE           reduce using rule 96 (mexp -> termino mexpp .)
    APAR            reduce using rule 96 (mexp -> termino mexpp .)
    CTEC            reduce using rule 96 (mexp -> termino mexpp .)
    CTEI            reduce using rule 96 (mexp -> termino mexpp .)
    CTEF            reduce using rule 96 (mexp -> termino mexpp .)
    CLLA            reduce using rule 96 (mexp -> termino mexpp .)
    CPAR            reduce using rule 96 (mexp -> termino mexpp .)
    CCOR            reduce using rule 96 (mexp -> termino mexpp .)
    COMA            reduce using rule 96 (mexp -> termino mexpp .)
    PTCOMA          reduce using rule 96 (mexp -> termino mexpp .)
    TO              reduce using rule 96 (mexp -> termino mexpp .)
    DO              reduce using rule 96 (mexp -> termino mexpp .)


state 124

    (97) mexpp -> operSR . mexp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    mexp                           shift and go to state 158
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 125

    (98) mexpp -> empty .

    MAYQ            reduce using rule 98 (mexpp -> empty .)
    MENQ            reduce using rule 98 (mexpp -> empty .)
    MAYI            reduce using rule 98 (mexpp -> empty .)
    MENI            reduce using rule 98 (mexpp -> empty .)
    IGUALIGUAL      reduce using rule 98 (mexpp -> empty .)
    DIF             reduce using rule 98 (mexpp -> empty .)
    NOT             reduce using rule 98 (mexpp -> empty .)
    AND             reduce using rule 98 (mexpp -> empty .)
    OR              reduce using rule 98 (mexpp -> empty .)
    RETURN          reduce using rule 98 (mexpp -> empty .)
    READ            reduce using rule 98 (mexpp -> empty .)
    WRITE           reduce using rule 98 (mexpp -> empty .)
    IF              reduce using rule 98 (mexpp -> empty .)
    FOR             reduce using rule 98 (mexpp -> empty .)
    ID              reduce using rule 98 (mexpp -> empty .)
    WHILE           reduce using rule 98 (mexpp -> empty .)
    APAR            reduce using rule 98 (mexpp -> empty .)
    CTEC            reduce using rule 98 (mexpp -> empty .)
    CTEI            reduce using rule 98 (mexpp -> empty .)
    CTEF            reduce using rule 98 (mexpp -> empty .)
    CLLA            reduce using rule 98 (mexpp -> empty .)
    CPAR            reduce using rule 98 (mexpp -> empty .)
    CCOR            reduce using rule 98 (mexpp -> empty .)
    COMA            reduce using rule 98 (mexpp -> empty .)
    PTCOMA          reduce using rule 98 (mexpp -> empty .)
    TO              reduce using rule 98 (mexpp -> empty .)
    DO              reduce using rule 98 (mexpp -> empty .)


state 126

    (99) operSR -> MENOS .

    APAR            reduce using rule 99 (operSR -> MENOS .)
    CTEC            reduce using rule 99 (operSR -> MENOS .)
    CTEI            reduce using rule 99 (operSR -> MENOS .)
    CTEF            reduce using rule 99 (operSR -> MENOS .)
    ID              reduce using rule 99 (operSR -> MENOS .)


state 127

    (100) operSR -> MAS .

    APAR            reduce using rule 100 (operSR -> MAS .)
    CTEC            reduce using rule 100 (operSR -> MAS .)
    CTEI            reduce using rule 100 (operSR -> MAS .)
    CTEF            reduce using rule 100 (operSR -> MAS .)
    ID              reduce using rule 100 (operSR -> MAS .)


state 128

    (101) termino -> factor terminop .

    MENOS           reduce using rule 101 (termino -> factor terminop .)
    MAS             reduce using rule 101 (termino -> factor terminop .)
    MAYQ            reduce using rule 101 (termino -> factor terminop .)
    MENQ            reduce using rule 101 (termino -> factor terminop .)
    MAYI            reduce using rule 101 (termino -> factor terminop .)
    MENI            reduce using rule 101 (termino -> factor terminop .)
    IGUALIGUAL      reduce using rule 101 (termino -> factor terminop .)
    DIF             reduce using rule 101 (termino -> factor terminop .)
    NOT             reduce using rule 101 (termino -> factor terminop .)
    AND             reduce using rule 101 (termino -> factor terminop .)
    OR              reduce using rule 101 (termino -> factor terminop .)
    RETURN          reduce using rule 101 (termino -> factor terminop .)
    READ            reduce using rule 101 (termino -> factor terminop .)
    WRITE           reduce using rule 101 (termino -> factor terminop .)
    IF              reduce using rule 101 (termino -> factor terminop .)
    FOR             reduce using rule 101 (termino -> factor terminop .)
    ID              reduce using rule 101 (termino -> factor terminop .)
    WHILE           reduce using rule 101 (termino -> factor terminop .)
    APAR            reduce using rule 101 (termino -> factor terminop .)
    CTEC            reduce using rule 101 (termino -> factor terminop .)
    CTEI            reduce using rule 101 (termino -> factor terminop .)
    CTEF            reduce using rule 101 (termino -> factor terminop .)
    CLLA            reduce using rule 101 (termino -> factor terminop .)
    CPAR            reduce using rule 101 (termino -> factor terminop .)
    CCOR            reduce using rule 101 (termino -> factor terminop .)
    COMA            reduce using rule 101 (termino -> factor terminop .)
    PTCOMA          reduce using rule 101 (termino -> factor terminop .)
    TO              reduce using rule 101 (termino -> factor terminop .)
    DO              reduce using rule 101 (termino -> factor terminop .)


state 129

    (102) terminop -> oper . termino
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    termino                        shift and go to state 159
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 130

    (103) terminop -> empty .

    MENOS           reduce using rule 103 (terminop -> empty .)
    MAS             reduce using rule 103 (terminop -> empty .)
    MAYQ            reduce using rule 103 (terminop -> empty .)
    MENQ            reduce using rule 103 (terminop -> empty .)
    MAYI            reduce using rule 103 (terminop -> empty .)
    MENI            reduce using rule 103 (terminop -> empty .)
    IGUALIGUAL      reduce using rule 103 (terminop -> empty .)
    DIF             reduce using rule 103 (terminop -> empty .)
    NOT             reduce using rule 103 (terminop -> empty .)
    AND             reduce using rule 103 (terminop -> empty .)
    OR              reduce using rule 103 (terminop -> empty .)
    RETURN          reduce using rule 103 (terminop -> empty .)
    READ            reduce using rule 103 (terminop -> empty .)
    WRITE           reduce using rule 103 (terminop -> empty .)
    IF              reduce using rule 103 (terminop -> empty .)
    FOR             reduce using rule 103 (terminop -> empty .)
    ID              reduce using rule 103 (terminop -> empty .)
    WHILE           reduce using rule 103 (terminop -> empty .)
    APAR            reduce using rule 103 (terminop -> empty .)
    CTEC            reduce using rule 103 (terminop -> empty .)
    CTEI            reduce using rule 103 (terminop -> empty .)
    CTEF            reduce using rule 103 (terminop -> empty .)
    CLLA            reduce using rule 103 (terminop -> empty .)
    CPAR            reduce using rule 103 (terminop -> empty .)
    CCOR            reduce using rule 103 (terminop -> empty .)
    COMA            reduce using rule 103 (terminop -> empty .)
    PTCOMA          reduce using rule 103 (terminop -> empty .)
    TO              reduce using rule 103 (terminop -> empty .)
    DO              reduce using rule 103 (terminop -> empty .)


state 131

    (104) oper -> DIV .

    APAR            reduce using rule 104 (oper -> DIV .)
    CTEC            reduce using rule 104 (oper -> DIV .)
    CTEI            reduce using rule 104 (oper -> DIV .)
    CTEF            reduce using rule 104 (oper -> DIV .)
    ID              reduce using rule 104 (oper -> DIV .)


state 132

    (105) oper -> POR .

    APAR            reduce using rule 105 (oper -> POR .)
    CTEC            reduce using rule 105 (oper -> POR .)
    CTEI            reduce using rule 105 (oper -> POR .)
    CTEF            reduce using rule 105 (oper -> POR .)
    ID              reduce using rule 105 (oper -> POR .)


state 133

    (108) factor -> meteFondo exp . sacaFondo
    (107) sacaFondo -> . CPAR

    CPAR            shift and go to state 161

    sacaFondo                      shift and go to state 160

state 134

    (122) ctes -> ID . validateExistance factorp
    (123) validateExistance -> .

    APAR            reduce using rule 123 (validateExistance -> .)
    ACOR            reduce using rule 123 (validateExistance -> .)
    DIV             reduce using rule 123 (validateExistance -> .)
    POR             reduce using rule 123 (validateExistance -> .)
    MENOS           reduce using rule 123 (validateExistance -> .)
    MAS             reduce using rule 123 (validateExistance -> .)
    MAYQ            reduce using rule 123 (validateExistance -> .)
    MENQ            reduce using rule 123 (validateExistance -> .)
    MAYI            reduce using rule 123 (validateExistance -> .)
    MENI            reduce using rule 123 (validateExistance -> .)
    IGUALIGUAL      reduce using rule 123 (validateExistance -> .)
    DIF             reduce using rule 123 (validateExistance -> .)
    NOT             reduce using rule 123 (validateExistance -> .)
    AND             reduce using rule 123 (validateExistance -> .)
    OR              reduce using rule 123 (validateExistance -> .)
    CPAR            reduce using rule 123 (validateExistance -> .)
    CCOR            reduce using rule 123 (validateExistance -> .)
    COMA            reduce using rule 123 (validateExistance -> .)
    RETURN          reduce using rule 123 (validateExistance -> .)
    READ            reduce using rule 123 (validateExistance -> .)
    WRITE           reduce using rule 123 (validateExistance -> .)
    IF              reduce using rule 123 (validateExistance -> .)
    FOR             reduce using rule 123 (validateExistance -> .)
    ID              reduce using rule 123 (validateExistance -> .)
    WHILE           reduce using rule 123 (validateExistance -> .)
    CTEC            reduce using rule 123 (validateExistance -> .)
    CTEI            reduce using rule 123 (validateExistance -> .)
    CTEF            reduce using rule 123 (validateExistance -> .)
    CLLA            reduce using rule 123 (validateExistance -> .)
    PTCOMA          reduce using rule 123 (validateExistance -> .)
    TO              reduce using rule 123 (validateExistance -> .)
    DO              reduce using rule 123 (validateExistance -> .)

    validateExistance              shift and go to state 108

state 135

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA . varss ALLA addinit estatutos CLLA addsize endfunction funcs
    (4) varss -> . VARS vars
    (5) varss -> . empty
    (124) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 124 (empty -> .)

    varss                          shift and go to state 162
    empty                          shift and go to state 7

state 136

    (38) params -> tipo DOSPNTS insertParams ididx . paramsp
    (41) paramsp -> . COMA params
    (42) paramsp -> . empty
    (124) empty -> .

    COMA            shift and go to state 164
    CPAR            reduce using rule 124 (empty -> .)

    paramsp                        shift and go to state 163
    empty                          shift and go to state 165

state 137

    (14) varspp -> COMA insertVar varsppp varspp .

    INT             reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    FLOAT           reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    CHAR            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    FUNCTION        reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    MAIN            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)
    ALLA            reduce using rule 14 (varspp -> COMA insertVar varsppp varspp .)


state 138

    (43) asig -> varAs ididx igualAs . asigpp PTCOMA
    (50) asigpp -> . exp
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    asigpp                         shift and go to state 166
    exp                            shift and go to state 167
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 139

    (45) igualAs -> IGUAL .

    APAR            reduce using rule 45 (igualAs -> IGUAL .)
    CTEC            reduce using rule 45 (igualAs -> IGUAL .)
    CTEI            reduce using rule 45 (igualAs -> IGUAL .)
    CTEF            reduce using rule 45 (igualAs -> IGUAL .)
    ID              reduce using rule 45 (igualAs -> IGUAL .)


state 140

    (51) ididx -> corArr exp . ver CCOR
    (54) ver -> .

    CCOR            reduce using rule 54 (ver -> .)

    ver                            shift and go to state 168

state 141

    (55) return -> RETURN APAR exp . CPAR PTCOMA

    CPAR            shift and go to state 169


state 142

    (56) lectura -> READ APAR readId . ididx lecturapp CPAR PTCOMA
    (51) ididx -> . corArr exp ver CCOR
    (52) ididx -> . empty
    (53) corArr -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 97
    COMA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)

    ididx                          shift and go to state 170
    corArr                         shift and go to state 95
    empty                          shift and go to state 96

state 143

    (57) readId -> ID .

    ACOR            reduce using rule 57 (readId -> ID .)
    COMA            reduce using rule 57 (readId -> ID .)
    CPAR            reduce using rule 57 (readId -> ID .)


state 144

    (60) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (65) escriturapp -> . COMA escriturap escriturapp
    (66) escriturapp -> . empty
    (124) empty -> .

    COMA            shift and go to state 172
    CPAR            reduce using rule 124 (empty -> .)

    escriturapp                    shift and go to state 171
    empty                          shift and go to state 173

state 145

    (61) escriturap -> pushEsc .

    COMA            reduce using rule 61 (escriturap -> pushEsc .)
    CPAR            reduce using rule 61 (escriturap -> pushEsc .)


state 146

    (62) escriturap -> exp .

    COMA            reduce using rule 62 (escriturap -> exp .)
    CPAR            reduce using rule 62 (escriturap -> exp .)


state 147

    (63) pushEsc -> STRING .

    COMA            reduce using rule 63 (pushEsc -> STRING .)
    CPAR            reduce using rule 63 (pushEsc -> STRING .)


state 148

    (64) pushEsc -> CTEC .
    (119) ctes -> CTEC .

  ! reduce/reduce conflict for COMA resolved using rule 64 (pushEsc -> CTEC .)
  ! reduce/reduce conflict for CPAR resolved using rule 64 (pushEsc -> CTEC .)
    COMA            reduce using rule 64 (pushEsc -> CTEC .)
    CPAR            reduce using rule 64 (pushEsc -> CTEC .)
    DIV             reduce using rule 119 (ctes -> CTEC .)
    POR             reduce using rule 119 (ctes -> CTEC .)
    MENOS           reduce using rule 119 (ctes -> CTEC .)
    MAS             reduce using rule 119 (ctes -> CTEC .)
    MAYQ            reduce using rule 119 (ctes -> CTEC .)
    MENQ            reduce using rule 119 (ctes -> CTEC .)
    MAYI            reduce using rule 119 (ctes -> CTEC .)
    MENI            reduce using rule 119 (ctes -> CTEC .)
    IGUALIGUAL      reduce using rule 119 (ctes -> CTEC .)
    DIF             reduce using rule 119 (ctes -> CTEC .)
    NOT             reduce using rule 119 (ctes -> CTEC .)
    AND             reduce using rule 119 (ctes -> CTEC .)
    OR              reduce using rule 119 (ctes -> CTEC .)

  ! COMA            [ reduce using rule 119 (ctes -> CTEC .) ]
  ! CPAR            [ reduce using rule 119 (ctes -> CTEC .) ]


state 149

    (67) cond -> IF APAR exp . checkCond THEN ALLA estatutos CLLA condpp
    (71) checkCond -> . CPAR

    CPAR            shift and go to state 175

    checkCond                      shift and go to state 174

state 150

    (72) while -> saveWhile APAR exp . checkWhileCond DO ALLA estatutos CLLA
    (74) checkWhileCond -> . CPAR

    CPAR            shift and go to state 177

    checkWhileCond                 shift and go to state 176

state 151

    (75) for -> FOR varFor ididx . IGUAL exp initFor exp beforeDo ALLA estatutos CLLA

    IGUAL           shift and go to state 178


state 152

    (80) expp -> OR exp .

    RETURN          reduce using rule 80 (expp -> OR exp .)
    READ            reduce using rule 80 (expp -> OR exp .)
    WRITE           reduce using rule 80 (expp -> OR exp .)
    IF              reduce using rule 80 (expp -> OR exp .)
    FOR             reduce using rule 80 (expp -> OR exp .)
    ID              reduce using rule 80 (expp -> OR exp .)
    WHILE           reduce using rule 80 (expp -> OR exp .)
    APAR            reduce using rule 80 (expp -> OR exp .)
    CTEC            reduce using rule 80 (expp -> OR exp .)
    CTEI            reduce using rule 80 (expp -> OR exp .)
    CTEF            reduce using rule 80 (expp -> OR exp .)
    CLLA            reduce using rule 80 (expp -> OR exp .)
    CPAR            reduce using rule 80 (expp -> OR exp .)
    CCOR            reduce using rule 80 (expp -> OR exp .)
    COMA            reduce using rule 80 (expp -> OR exp .)
    PTCOMA          reduce using rule 80 (expp -> OR exp .)
    TO              reduce using rule 80 (expp -> OR exp .)
    DO              reduce using rule 80 (expp -> OR exp .)


state 153

    (122) ctes -> ID validateExistance factorp .

    DIV             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    POR             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    MENOS           reduce using rule 122 (ctes -> ID validateExistance factorp .)
    MAS             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    MAYQ            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    MENQ            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    MAYI            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    MENI            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    IGUALIGUAL      reduce using rule 122 (ctes -> ID validateExistance factorp .)
    DIF             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    NOT             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    AND             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    OR              reduce using rule 122 (ctes -> ID validateExistance factorp .)
    RETURN          reduce using rule 122 (ctes -> ID validateExistance factorp .)
    READ            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    WRITE           reduce using rule 122 (ctes -> ID validateExistance factorp .)
    IF              reduce using rule 122 (ctes -> ID validateExistance factorp .)
    FOR             reduce using rule 122 (ctes -> ID validateExistance factorp .)
    ID              reduce using rule 122 (ctes -> ID validateExistance factorp .)
    WHILE           reduce using rule 122 (ctes -> ID validateExistance factorp .)
    APAR            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    CTEC            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    CTEI            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    CTEF            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    CLLA            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    CPAR            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    CCOR            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    COMA            reduce using rule 122 (ctes -> ID validateExistance factorp .)
    PTCOMA          reduce using rule 122 (ctes -> ID validateExistance factorp .)
    TO              reduce using rule 122 (ctes -> ID validateExistance factorp .)
    DO              reduce using rule 122 (ctes -> ID validateExistance factorp .)


state 154

    (110) factorp -> APAR . createEra factorParams cparParams
    (115) createEra -> .

    APAR            reduce using rule 115 (createEra -> .)
    CTEC            reduce using rule 115 (createEra -> .)
    CTEI            reduce using rule 115 (createEra -> .)
    CTEF            reduce using rule 115 (createEra -> .)
    ID              reduce using rule 115 (createEra -> .)
    CPAR            reduce using rule 115 (createEra -> .)

    createEra                      shift and go to state 179

state 155

    (111) factorp -> ididx .

    DIV             reduce using rule 111 (factorp -> ididx .)
    POR             reduce using rule 111 (factorp -> ididx .)
    MENOS           reduce using rule 111 (factorp -> ididx .)
    MAS             reduce using rule 111 (factorp -> ididx .)
    MAYQ            reduce using rule 111 (factorp -> ididx .)
    MENQ            reduce using rule 111 (factorp -> ididx .)
    MAYI            reduce using rule 111 (factorp -> ididx .)
    MENI            reduce using rule 111 (factorp -> ididx .)
    IGUALIGUAL      reduce using rule 111 (factorp -> ididx .)
    DIF             reduce using rule 111 (factorp -> ididx .)
    NOT             reduce using rule 111 (factorp -> ididx .)
    AND             reduce using rule 111 (factorp -> ididx .)
    OR              reduce using rule 111 (factorp -> ididx .)
    RETURN          reduce using rule 111 (factorp -> ididx .)
    READ            reduce using rule 111 (factorp -> ididx .)
    WRITE           reduce using rule 111 (factorp -> ididx .)
    IF              reduce using rule 111 (factorp -> ididx .)
    FOR             reduce using rule 111 (factorp -> ididx .)
    ID              reduce using rule 111 (factorp -> ididx .)
    WHILE           reduce using rule 111 (factorp -> ididx .)
    APAR            reduce using rule 111 (factorp -> ididx .)
    CTEC            reduce using rule 111 (factorp -> ididx .)
    CTEI            reduce using rule 111 (factorp -> ididx .)
    CTEF            reduce using rule 111 (factorp -> ididx .)
    CLLA            reduce using rule 111 (factorp -> ididx .)
    CPAR            reduce using rule 111 (factorp -> ididx .)
    CCOR            reduce using rule 111 (factorp -> ididx .)
    COMA            reduce using rule 111 (factorp -> ididx .)
    PTCOMA          reduce using rule 111 (factorp -> ididx .)
    TO              reduce using rule 111 (factorp -> ididx .)
    DO              reduce using rule 111 (factorp -> ididx .)


state 156

    (83) texpp -> andCheck texp .

    OR              reduce using rule 83 (texpp -> andCheck texp .)
    RETURN          reduce using rule 83 (texpp -> andCheck texp .)
    READ            reduce using rule 83 (texpp -> andCheck texp .)
    WRITE           reduce using rule 83 (texpp -> andCheck texp .)
    IF              reduce using rule 83 (texpp -> andCheck texp .)
    FOR             reduce using rule 83 (texpp -> andCheck texp .)
    ID              reduce using rule 83 (texpp -> andCheck texp .)
    WHILE           reduce using rule 83 (texpp -> andCheck texp .)
    APAR            reduce using rule 83 (texpp -> andCheck texp .)
    CTEC            reduce using rule 83 (texpp -> andCheck texp .)
    CTEI            reduce using rule 83 (texpp -> andCheck texp .)
    CTEF            reduce using rule 83 (texpp -> andCheck texp .)
    CLLA            reduce using rule 83 (texpp -> andCheck texp .)
    CPAR            reduce using rule 83 (texpp -> andCheck texp .)
    CCOR            reduce using rule 83 (texpp -> andCheck texp .)
    COMA            reduce using rule 83 (texpp -> andCheck texp .)
    PTCOMA          reduce using rule 83 (texpp -> andCheck texp .)
    TO              reduce using rule 83 (texpp -> andCheck texp .)
    DO              reduce using rule 83 (texpp -> andCheck texp .)


state 157

    (87) gexpp -> addPO mexp .

    AND             reduce using rule 87 (gexpp -> addPO mexp .)
    OR              reduce using rule 87 (gexpp -> addPO mexp .)
    RETURN          reduce using rule 87 (gexpp -> addPO mexp .)
    READ            reduce using rule 87 (gexpp -> addPO mexp .)
    WRITE           reduce using rule 87 (gexpp -> addPO mexp .)
    IF              reduce using rule 87 (gexpp -> addPO mexp .)
    FOR             reduce using rule 87 (gexpp -> addPO mexp .)
    ID              reduce using rule 87 (gexpp -> addPO mexp .)
    WHILE           reduce using rule 87 (gexpp -> addPO mexp .)
    APAR            reduce using rule 87 (gexpp -> addPO mexp .)
    CTEC            reduce using rule 87 (gexpp -> addPO mexp .)
    CTEI            reduce using rule 87 (gexpp -> addPO mexp .)
    CTEF            reduce using rule 87 (gexpp -> addPO mexp .)
    CLLA            reduce using rule 87 (gexpp -> addPO mexp .)
    CPAR            reduce using rule 87 (gexpp -> addPO mexp .)
    CCOR            reduce using rule 87 (gexpp -> addPO mexp .)
    COMA            reduce using rule 87 (gexpp -> addPO mexp .)
    PTCOMA          reduce using rule 87 (gexpp -> addPO mexp .)
    TO              reduce using rule 87 (gexpp -> addPO mexp .)
    DO              reduce using rule 87 (gexpp -> addPO mexp .)


state 158

    (97) mexpp -> operSR mexp .

    MAYQ            reduce using rule 97 (mexpp -> operSR mexp .)
    MENQ            reduce using rule 97 (mexpp -> operSR mexp .)
    MAYI            reduce using rule 97 (mexpp -> operSR mexp .)
    MENI            reduce using rule 97 (mexpp -> operSR mexp .)
    IGUALIGUAL      reduce using rule 97 (mexpp -> operSR mexp .)
    DIF             reduce using rule 97 (mexpp -> operSR mexp .)
    NOT             reduce using rule 97 (mexpp -> operSR mexp .)
    AND             reduce using rule 97 (mexpp -> operSR mexp .)
    OR              reduce using rule 97 (mexpp -> operSR mexp .)
    RETURN          reduce using rule 97 (mexpp -> operSR mexp .)
    READ            reduce using rule 97 (mexpp -> operSR mexp .)
    WRITE           reduce using rule 97 (mexpp -> operSR mexp .)
    IF              reduce using rule 97 (mexpp -> operSR mexp .)
    FOR             reduce using rule 97 (mexpp -> operSR mexp .)
    ID              reduce using rule 97 (mexpp -> operSR mexp .)
    WHILE           reduce using rule 97 (mexpp -> operSR mexp .)
    APAR            reduce using rule 97 (mexpp -> operSR mexp .)
    CTEC            reduce using rule 97 (mexpp -> operSR mexp .)
    CTEI            reduce using rule 97 (mexpp -> operSR mexp .)
    CTEF            reduce using rule 97 (mexpp -> operSR mexp .)
    CLLA            reduce using rule 97 (mexpp -> operSR mexp .)
    CPAR            reduce using rule 97 (mexpp -> operSR mexp .)
    CCOR            reduce using rule 97 (mexpp -> operSR mexp .)
    COMA            reduce using rule 97 (mexpp -> operSR mexp .)
    PTCOMA          reduce using rule 97 (mexpp -> operSR mexp .)
    TO              reduce using rule 97 (mexpp -> operSR mexp .)
    DO              reduce using rule 97 (mexpp -> operSR mexp .)


state 159

    (102) terminop -> oper termino .

    MENOS           reduce using rule 102 (terminop -> oper termino .)
    MAS             reduce using rule 102 (terminop -> oper termino .)
    MAYQ            reduce using rule 102 (terminop -> oper termino .)
    MENQ            reduce using rule 102 (terminop -> oper termino .)
    MAYI            reduce using rule 102 (terminop -> oper termino .)
    MENI            reduce using rule 102 (terminop -> oper termino .)
    IGUALIGUAL      reduce using rule 102 (terminop -> oper termino .)
    DIF             reduce using rule 102 (terminop -> oper termino .)
    NOT             reduce using rule 102 (terminop -> oper termino .)
    AND             reduce using rule 102 (terminop -> oper termino .)
    OR              reduce using rule 102 (terminop -> oper termino .)
    RETURN          reduce using rule 102 (terminop -> oper termino .)
    READ            reduce using rule 102 (terminop -> oper termino .)
    WRITE           reduce using rule 102 (terminop -> oper termino .)
    IF              reduce using rule 102 (terminop -> oper termino .)
    FOR             reduce using rule 102 (terminop -> oper termino .)
    ID              reduce using rule 102 (terminop -> oper termino .)
    WHILE           reduce using rule 102 (terminop -> oper termino .)
    APAR            reduce using rule 102 (terminop -> oper termino .)
    CTEC            reduce using rule 102 (terminop -> oper termino .)
    CTEI            reduce using rule 102 (terminop -> oper termino .)
    CTEF            reduce using rule 102 (terminop -> oper termino .)
    CLLA            reduce using rule 102 (terminop -> oper termino .)
    CPAR            reduce using rule 102 (terminop -> oper termino .)
    CCOR            reduce using rule 102 (terminop -> oper termino .)
    COMA            reduce using rule 102 (terminop -> oper termino .)
    PTCOMA          reduce using rule 102 (terminop -> oper termino .)
    TO              reduce using rule 102 (terminop -> oper termino .)
    DO              reduce using rule 102 (terminop -> oper termino .)


state 160

    (108) factor -> meteFondo exp sacaFondo .

    DIV             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    POR             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    MENOS           reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    MAS             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    MAYQ            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    MENQ            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    MAYI            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    MENI            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    IGUALIGUAL      reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    DIF             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    NOT             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    AND             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    OR              reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    RETURN          reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    READ            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    WRITE           reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    IF              reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    FOR             reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    ID              reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    WHILE           reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    APAR            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    CTEC            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    CTEI            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    CTEF            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    CLLA            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    CPAR            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    CCOR            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    COMA            reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    PTCOMA          reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    TO              reduce using rule 108 (factor -> meteFondo exp sacaFondo .)
    DO              reduce using rule 108 (factor -> meteFondo exp sacaFondo .)


state 161

    (107) sacaFondo -> CPAR .

    DIV             reduce using rule 107 (sacaFondo -> CPAR .)
    POR             reduce using rule 107 (sacaFondo -> CPAR .)
    MENOS           reduce using rule 107 (sacaFondo -> CPAR .)
    MAS             reduce using rule 107 (sacaFondo -> CPAR .)
    MAYQ            reduce using rule 107 (sacaFondo -> CPAR .)
    MENQ            reduce using rule 107 (sacaFondo -> CPAR .)
    MAYI            reduce using rule 107 (sacaFondo -> CPAR .)
    MENI            reduce using rule 107 (sacaFondo -> CPAR .)
    IGUALIGUAL      reduce using rule 107 (sacaFondo -> CPAR .)
    DIF             reduce using rule 107 (sacaFondo -> CPAR .)
    NOT             reduce using rule 107 (sacaFondo -> CPAR .)
    AND             reduce using rule 107 (sacaFondo -> CPAR .)
    OR              reduce using rule 107 (sacaFondo -> CPAR .)
    RETURN          reduce using rule 107 (sacaFondo -> CPAR .)
    READ            reduce using rule 107 (sacaFondo -> CPAR .)
    WRITE           reduce using rule 107 (sacaFondo -> CPAR .)
    IF              reduce using rule 107 (sacaFondo -> CPAR .)
    FOR             reduce using rule 107 (sacaFondo -> CPAR .)
    ID              reduce using rule 107 (sacaFondo -> CPAR .)
    WHILE           reduce using rule 107 (sacaFondo -> CPAR .)
    APAR            reduce using rule 107 (sacaFondo -> CPAR .)
    CTEC            reduce using rule 107 (sacaFondo -> CPAR .)
    CTEI            reduce using rule 107 (sacaFondo -> CPAR .)
    CTEF            reduce using rule 107 (sacaFondo -> CPAR .)
    CLLA            reduce using rule 107 (sacaFondo -> CPAR .)
    CPAR            reduce using rule 107 (sacaFondo -> CPAR .)
    CCOR            reduce using rule 107 (sacaFondo -> CPAR .)
    COMA            reduce using rule 107 (sacaFondo -> CPAR .)
    PTCOMA          reduce using rule 107 (sacaFondo -> CPAR .)
    TO              reduce using rule 107 (sacaFondo -> CPAR .)
    DO              reduce using rule 107 (sacaFondo -> CPAR .)


state 162

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss . ALLA addinit estatutos CLLA addsize endfunction funcs

    ALLA            shift and go to state 180


state 163

    (38) params -> tipo DOSPNTS insertParams ididx paramsp .

    CPAR            reduce using rule 38 (params -> tipo DOSPNTS insertParams ididx paramsp .)


state 164

    (41) paramsp -> COMA . params
    (38) params -> . tipo DOSPNTS insertParams ididx paramsp
    (39) params -> . empty
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (124) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    CPAR            reduce using rule 124 (empty -> .)

    params                         shift and go to state 181
    tipo                           shift and go to state 37
    empty                          shift and go to state 38

state 165

    (42) paramsp -> empty .

    CPAR            reduce using rule 42 (paramsp -> empty .)


state 166

    (43) asig -> varAs ididx igualAs asigpp . PTCOMA

    PTCOMA          shift and go to state 182


state 167

    (50) asigpp -> exp .

    PTCOMA          reduce using rule 50 (asigpp -> exp .)


state 168

    (51) ididx -> corArr exp ver . CCOR

    CCOR            shift and go to state 183


state 169

    (55) return -> RETURN APAR exp CPAR . PTCOMA

    PTCOMA          shift and go to state 184


state 170

    (56) lectura -> READ APAR readId ididx . lecturapp CPAR PTCOMA
    (58) lecturapp -> . COMA readId ididx lecturapp
    (59) lecturapp -> . empty
    (124) empty -> .

    COMA            shift and go to state 186
    CPAR            reduce using rule 124 (empty -> .)

    lecturapp                      shift and go to state 185
    empty                          shift and go to state 187

state 171

    (60) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 188


state 172

    (65) escriturapp -> COMA . escriturap escriturapp
    (61) escriturap -> . pushEsc
    (62) escriturap -> . exp
    (63) pushEsc -> . STRING
    (64) pushEsc -> . CTEC
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    STRING          shift and go to state 147
    CTEC            shift and go to state 148
    APAR            shift and go to state 50
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    escriturap                     shift and go to state 189
    pushEsc                        shift and go to state 145
    exp                            shift and go to state 146
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 173

    (66) escriturapp -> empty .

    CPAR            reduce using rule 66 (escriturapp -> empty .)


state 174

    (67) cond -> IF APAR exp checkCond . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 190


state 175

    (71) checkCond -> CPAR .

    THEN            reduce using rule 71 (checkCond -> CPAR .)


state 176

    (72) while -> saveWhile APAR exp checkWhileCond . DO ALLA estatutos CLLA

    DO              shift and go to state 191


state 177

    (74) checkWhileCond -> CPAR .

    DO              reduce using rule 74 (checkWhileCond -> CPAR .)


state 178

    (75) for -> FOR varFor ididx IGUAL . exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 192
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 179

    (110) factorp -> APAR createEra . factorParams cparParams
    (112) factorParams -> . exp valParams factorpp
    (113) factorParams -> . empty
    (79) exp -> . texp expp
    (124) empty -> .
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    CPAR            reduce using rule 124 (empty -> .)
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    factorParams                   shift and go to state 193
    exp                            shift and go to state 194
    empty                          shift and go to state 195
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 180

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA . addinit estatutos CLLA addsize endfunction funcs
    (22) addinit -> .

    RETURN          reduce using rule 22 (addinit -> .)
    READ            reduce using rule 22 (addinit -> .)
    WRITE           reduce using rule 22 (addinit -> .)
    IF              reduce using rule 22 (addinit -> .)
    FOR             reduce using rule 22 (addinit -> .)
    ID              reduce using rule 22 (addinit -> .)
    WHILE           reduce using rule 22 (addinit -> .)
    APAR            reduce using rule 22 (addinit -> .)
    CTEC            reduce using rule 22 (addinit -> .)
    CTEI            reduce using rule 22 (addinit -> .)
    CTEF            reduce using rule 22 (addinit -> .)

    addinit                        shift and go to state 196

state 181

    (41) paramsp -> COMA params .

    CPAR            reduce using rule 41 (paramsp -> COMA params .)


state 182

    (43) asig -> varAs ididx igualAs asigpp PTCOMA .

    RETURN          reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    READ            reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WRITE           reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    IF              reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    FOR             reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    ID              reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    WHILE           reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    APAR            reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEC            reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEI            reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CTEF            reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)
    CLLA            reduce using rule 43 (asig -> varAs ididx igualAs asigpp PTCOMA .)


state 183

    (51) ididx -> corArr exp ver CCOR .

    IGUAL           reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    COMA            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    CPAR            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    DIV             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    POR             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    MENOS           reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    MAS             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    MAYQ            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    MENQ            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    MAYI            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    MENI            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    IGUALIGUAL      reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    DIF             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    NOT             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    AND             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    OR              reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    RETURN          reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    READ            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    WRITE           reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    IF              reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    FOR             reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    ID              reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    WHILE           reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    APAR            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    CTEC            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    CTEI            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    CTEF            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    CLLA            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    CCOR            reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    PTCOMA          reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    TO              reduce using rule 51 (ididx -> corArr exp ver CCOR .)
    DO              reduce using rule 51 (ididx -> corArr exp ver CCOR .)


state 184

    (55) return -> RETURN APAR exp CPAR PTCOMA .

    RETURN          reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    READ            reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    WRITE           reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    IF              reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    FOR             reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    ID              reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    WHILE           reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    APAR            reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEC            reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEI            reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    CTEF            reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)
    CLLA            reduce using rule 55 (return -> RETURN APAR exp CPAR PTCOMA .)


state 185

    (56) lectura -> READ APAR readId ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 197


state 186

    (58) lecturapp -> COMA . readId ididx lecturapp
    (57) readId -> . ID

    ID              shift and go to state 143

    readId                         shift and go to state 198

state 187

    (59) lecturapp -> empty .

    CPAR            reduce using rule 59 (lecturapp -> empty .)


state 188

    (60) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 199


state 189

    (65) escriturapp -> COMA escriturap . escriturapp
    (65) escriturapp -> . COMA escriturap escriturapp
    (66) escriturapp -> . empty
    (124) empty -> .

    COMA            shift and go to state 172
    CPAR            reduce using rule 124 (empty -> .)

    escriturapp                    shift and go to state 200
    empty                          shift and go to state 173

state 190

    (67) cond -> IF APAR exp checkCond THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 201


state 191

    (72) while -> saveWhile APAR exp checkWhileCond DO . ALLA estatutos CLLA

    ALLA            shift and go to state 202


state 192

    (75) for -> FOR varFor ididx IGUAL exp . initFor exp beforeDo ALLA estatutos CLLA
    (77) initFor -> . TO

    TO              shift and go to state 204

    initFor                        shift and go to state 203

state 193

    (110) factorp -> APAR createEra factorParams . cparParams
    (114) cparParams -> . CPAR

    CPAR            shift and go to state 206

    cparParams                     shift and go to state 205

state 194

    (112) factorParams -> exp . valParams factorpp
    (116) valParams -> .

    COMA            reduce using rule 116 (valParams -> .)
    CPAR            reduce using rule 116 (valParams -> .)

    valParams                      shift and go to state 207

state 195

    (113) factorParams -> empty .

    CPAR            reduce using rule 113 (factorParams -> empty .)


state 196

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit . estatutos CLLA addsize endfunction funcs
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    estatutos                      shift and go to state 208
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 197

    (56) lectura -> READ APAR readId ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 209


state 198

    (58) lecturapp -> COMA readId . ididx lecturapp
    (51) ididx -> . corArr exp ver CCOR
    (52) ididx -> . empty
    (53) corArr -> . ACOR
    (124) empty -> .

    ACOR            shift and go to state 97
    COMA            reduce using rule 124 (empty -> .)
    CPAR            reduce using rule 124 (empty -> .)

    ididx                          shift and go to state 210
    corArr                         shift and go to state 95
    empty                          shift and go to state 96

state 199

    (60) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    RETURN          reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    ID              reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEC            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 60 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 200

    (65) escriturapp -> COMA escriturap escriturapp .

    CPAR            reduce using rule 65 (escriturapp -> COMA escriturap escriturapp .)


state 201

    (67) cond -> IF APAR exp checkCond THEN ALLA . estatutos CLLA condpp
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    exp                            shift and go to state 59
    estatutos                      shift and go to state 211
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 202

    (72) while -> saveWhile APAR exp checkWhileCond DO ALLA . estatutos CLLA
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    saveWhile                      shift and go to state 65
    exp                            shift and go to state 59
    estatutos                      shift and go to state 212
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 203

    (75) for -> FOR varFor ididx IGUAL exp initFor . exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 213
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 204

    (77) initFor -> TO .

    APAR            reduce using rule 77 (initFor -> TO .)
    CTEC            reduce using rule 77 (initFor -> TO .)
    CTEI            reduce using rule 77 (initFor -> TO .)
    CTEF            reduce using rule 77 (initFor -> TO .)
    ID              reduce using rule 77 (initFor -> TO .)


state 205

    (110) factorp -> APAR createEra factorParams cparParams .

    DIV             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    POR             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    MENOS           reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    MAS             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    MAYQ            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    MENQ            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    MAYI            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    MENI            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    IGUALIGUAL      reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    DIF             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    NOT             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    AND             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    OR              reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    RETURN          reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    READ            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    WRITE           reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    IF              reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    FOR             reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    ID              reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    WHILE           reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    APAR            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    CTEC            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    CTEI            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    CTEF            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    CLLA            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    CPAR            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    CCOR            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    COMA            reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    PTCOMA          reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    TO              reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)
    DO              reduce using rule 110 (factorp -> APAR createEra factorParams cparParams .)


state 206

    (114) cparParams -> CPAR .

    DIV             reduce using rule 114 (cparParams -> CPAR .)
    POR             reduce using rule 114 (cparParams -> CPAR .)
    MENOS           reduce using rule 114 (cparParams -> CPAR .)
    MAS             reduce using rule 114 (cparParams -> CPAR .)
    MAYQ            reduce using rule 114 (cparParams -> CPAR .)
    MENQ            reduce using rule 114 (cparParams -> CPAR .)
    MAYI            reduce using rule 114 (cparParams -> CPAR .)
    MENI            reduce using rule 114 (cparParams -> CPAR .)
    IGUALIGUAL      reduce using rule 114 (cparParams -> CPAR .)
    DIF             reduce using rule 114 (cparParams -> CPAR .)
    NOT             reduce using rule 114 (cparParams -> CPAR .)
    AND             reduce using rule 114 (cparParams -> CPAR .)
    OR              reduce using rule 114 (cparParams -> CPAR .)
    RETURN          reduce using rule 114 (cparParams -> CPAR .)
    READ            reduce using rule 114 (cparParams -> CPAR .)
    WRITE           reduce using rule 114 (cparParams -> CPAR .)
    IF              reduce using rule 114 (cparParams -> CPAR .)
    FOR             reduce using rule 114 (cparParams -> CPAR .)
    ID              reduce using rule 114 (cparParams -> CPAR .)
    WHILE           reduce using rule 114 (cparParams -> CPAR .)
    APAR            reduce using rule 114 (cparParams -> CPAR .)
    CTEC            reduce using rule 114 (cparParams -> CPAR .)
    CTEI            reduce using rule 114 (cparParams -> CPAR .)
    CTEF            reduce using rule 114 (cparParams -> CPAR .)
    CLLA            reduce using rule 114 (cparParams -> CPAR .)
    CPAR            reduce using rule 114 (cparParams -> CPAR .)
    CCOR            reduce using rule 114 (cparParams -> CPAR .)
    COMA            reduce using rule 114 (cparParams -> CPAR .)
    PTCOMA          reduce using rule 114 (cparParams -> CPAR .)
    TO              reduce using rule 114 (cparParams -> CPAR .)
    DO              reduce using rule 114 (cparParams -> CPAR .)


state 207

    (112) factorParams -> exp valParams . factorpp
    (117) factorpp -> . COMA exp valParams factorpp
    (118) factorpp -> . empty
    (124) empty -> .

    COMA            shift and go to state 215
    CPAR            reduce using rule 124 (empty -> .)

    factorpp                       shift and go to state 214
    empty                          shift and go to state 216

state 208

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos . CLLA addsize endfunction funcs

    CLLA            shift and go to state 217


state 209

    (56) lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .

    RETURN          reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    ID              reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEC            reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 56 (lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA .)


state 210

    (58) lecturapp -> COMA readId ididx . lecturapp
    (58) lecturapp -> . COMA readId ididx lecturapp
    (59) lecturapp -> . empty
    (124) empty -> .

    COMA            shift and go to state 186
    CPAR            reduce using rule 124 (empty -> .)

    lecturapp                      shift and go to state 218
    empty                          shift and go to state 187

state 211

    (67) cond -> IF APAR exp checkCond THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 219


state 212

    (72) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos . CLLA

    CLLA            shift and go to state 220


state 213

    (75) for -> FOR varFor ididx IGUAL exp initFor exp . beforeDo ALLA estatutos CLLA
    (78) beforeDo -> . DO

    DO              shift and go to state 222

    beforeDo                       shift and go to state 221

state 214

    (112) factorParams -> exp valParams factorpp .

    CPAR            reduce using rule 112 (factorParams -> exp valParams factorpp .)


state 215

    (117) factorpp -> COMA . exp valParams factorpp
    (79) exp -> . texp expp
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 134

    exp                            shift and go to state 223
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 216

    (118) factorpp -> empty .

    CPAR            reduce using rule 118 (factorpp -> empty .)


state 217

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA . addsize endfunction funcs
    (21) addsize -> .

    FUNCTION        reduce using rule 21 (addsize -> .)
    MAIN            reduce using rule 21 (addsize -> .)

    addsize                        shift and go to state 224

state 218

    (58) lecturapp -> COMA readId ididx lecturapp .

    CPAR            reduce using rule 58 (lecturapp -> COMA readId ididx lecturapp .)


state 219

    (67) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA . condpp
    (68) condpp -> . checkElse ALLA estatutos CLLA
    (69) condpp -> . empty
    (70) checkElse -> . ELSE
    (124) empty -> .

    ELSE            shift and go to state 228
    RETURN          reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WRITE           reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    APAR            reduce using rule 124 (empty -> .)
    CTEC            reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)
    CLLA            reduce using rule 124 (empty -> .)

    condpp                         shift and go to state 225
    checkElse                      shift and go to state 226
    empty                          shift and go to state 227

state 220

    (72) while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .

    RETURN          reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    READ            reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    IF              reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    FOR             reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    ID              reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    APAR            reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEC            reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 72 (while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA .)


state 221

    (75) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo . ALLA estatutos CLLA

    ALLA            shift and go to state 229


state 222

    (78) beforeDo -> DO .

    ALLA            reduce using rule 78 (beforeDo -> DO .)


state 223

    (117) factorpp -> COMA exp . valParams factorpp
    (116) valParams -> .

    COMA            reduce using rule 116 (valParams -> .)
    CPAR            reduce using rule 116 (valParams -> .)

    valParams                      shift and go to state 230

state 224

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize . endfunction funcs
    (20) endfunction -> .

    FUNCTION        reduce using rule 20 (endfunction -> .)
    MAIN            reduce using rule 20 (endfunction -> .)

    endfunction                    shift and go to state 231

state 225

    (67) cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .

    RETURN          reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    ID              reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEC            reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 67 (cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp .)


state 226

    (68) condpp -> checkElse . ALLA estatutos CLLA

    ALLA            shift and go to state 232


state 227

    (69) condpp -> empty .

    RETURN          reduce using rule 69 (condpp -> empty .)
    READ            reduce using rule 69 (condpp -> empty .)
    WRITE           reduce using rule 69 (condpp -> empty .)
    IF              reduce using rule 69 (condpp -> empty .)
    FOR             reduce using rule 69 (condpp -> empty .)
    ID              reduce using rule 69 (condpp -> empty .)
    WHILE           reduce using rule 69 (condpp -> empty .)
    APAR            reduce using rule 69 (condpp -> empty .)
    CTEC            reduce using rule 69 (condpp -> empty .)
    CTEI            reduce using rule 69 (condpp -> empty .)
    CTEF            reduce using rule 69 (condpp -> empty .)
    CLLA            reduce using rule 69 (condpp -> empty .)


state 228

    (70) checkElse -> ELSE .

    ALLA            reduce using rule 70 (checkElse -> ELSE .)


state 229

    (75) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA . estatutos CLLA
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    exp                            shift and go to state 59
    estatutos                      shift and go to state 233
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 230

    (117) factorpp -> COMA exp valParams . factorpp
    (117) factorpp -> . COMA exp valParams factorpp
    (118) factorpp -> . empty
    (124) empty -> .

    COMA            shift and go to state 215
    CPAR            reduce using rule 124 (empty -> .)

    factorpp                       shift and go to state 234
    empty                          shift and go to state 216

state 231

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction . funcs
    (15) funcs -> . FUNCTION funcsp insertFunc funcspp
    (16) funcs -> . empty
    (124) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 124 (empty -> .)

    funcs                          shift and go to state 235
    empty                          shift and go to state 11

state 232

    (68) condpp -> checkElse ALLA . estatutos CLLA
    (25) estatutos -> . asig estatutop
    (26) estatutos -> . return estatutop
    (27) estatutos -> . lectura estatutop
    (28) estatutos -> . escritura estatutop
    (29) estatutos -> . cond estatutop
    (30) estatutos -> . while estatutop
    (31) estatutos -> . for estatutop
    (32) estatutos -> . exp estatutop
    (43) asig -> . varAs ididx igualAs asigpp PTCOMA
    (55) return -> . RETURN APAR exp CPAR PTCOMA
    (56) lectura -> . READ APAR readId ididx lecturapp CPAR PTCOMA
    (60) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (67) cond -> . IF APAR exp checkCond THEN ALLA estatutos CLLA condpp
    (72) while -> . saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA
    (75) for -> . FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA
    (79) exp -> . texp expp
    (44) varAs -> . ID
    (73) saveWhile -> . WHILE
    (82) texp -> . gexp texpp
    (86) gexp -> . mexp gexpp
    (96) mexp -> . termino mexpp
    (101) termino -> . factor terminop
    (108) factor -> . meteFondo exp sacaFondo
    (109) factor -> . ctes
    (106) meteFondo -> . APAR
    (119) ctes -> . CTEC
    (120) ctes -> . CTEI
    (121) ctes -> . CTEF
    (122) ctes -> . ID validateExistance factorp

    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    FOR             shift and go to state 66
    ID              shift and go to state 68
    WHILE           shift and go to state 69
    APAR            shift and go to state 50
    CTEC            shift and go to state 76
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78

    estatutos                      shift and go to state 236
    asig                           shift and go to state 52
    return                         shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    cond                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 59
    varAs                          shift and go to state 60
    saveWhile                      shift and go to state 65
    texp                           shift and go to state 67
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    meteFondo                      shift and go to state 74
    ctes                           shift and go to state 75

state 233

    (75) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos . CLLA

    CLLA            shift and go to state 237


state 234

    (117) factorpp -> COMA exp valParams factorpp .

    CPAR            reduce using rule 117 (factorpp -> COMA exp valParams factorpp .)


state 235

    (18) funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs .

    MAIN            reduce using rule 18 (funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs .)


state 236

    (68) condpp -> checkElse ALLA estatutos . CLLA

    CLLA            shift and go to state 238


state 237

    (75) for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .

    RETURN          reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    READ            reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WRITE           reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    IF              reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    FOR             reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    ID              reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    WHILE           reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    APAR            reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEC            reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEI            reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CTEF            reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)
    CLLA            reduce using rule 75 (for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA .)


state 238

    (68) condpp -> checkElse ALLA estatutos CLLA .

    RETURN          reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    READ            reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    WRITE           reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    IF              reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    FOR             reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    ID              reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    WHILE           reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    APAR            reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEC            reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEI            reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    CTEF            reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)
    CLLA            reduce using rule 68 (condpp -> checkElse ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 108 resolved as shift
WARNING: reduce/reduce conflict in state 68 resolved using rule (varAs -> ID)
WARNING: rejected rule (validateExistance -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 148 resolved using rule (pushEsc -> CTEC)
WARNING: rejected rule (ctes -> CTEC) in state 148
