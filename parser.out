Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos CLLA
Rule 2     varss -> VARS vars
Rule 3     varss -> empty
Rule 4     vars -> tipo DOSPNTS varsp varspp vars
Rule 5     vars -> empty
Rule 6     varsp -> ID varsppp
Rule 7     varsppp -> ACOR CTEI CCOR
Rule 8     varsppp -> empty
Rule 9     varspp -> PTCOMA
Rule 10    varspp -> COMA varsp varspp
Rule 11    funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
Rule 12    funcs -> empty
Rule 13    funcsp -> VOID
Rule 14    funcsp -> tipo
Rule 15    estatutos -> asig estatutop
Rule 16    estatutos -> llamada estatutop
Rule 17    estatutos -> return estatutop
Rule 18    estatutos -> lectura estatutop
Rule 19    estatutos -> escritura estatutop
Rule 20    estatutos -> cond estatutop
Rule 21    estatutos -> while estatutop
Rule 22    estatutos -> for estatutop
Rule 23    estatutos -> exp estatutop
Rule 24    estatutop -> estatutos
Rule 25    estatutop -> empty
Rule 26    tipo -> INT
Rule 27    tipo -> FLOAT
Rule 28    tipo -> CHAR
Rule 29    tipo -> STR
Rule 30    tipo -> BOOL
Rule 31    params -> tipo DOSPNTS ID ididx paramsp
Rule 32    params -> empty
Rule 33    paramsp -> COMA params
Rule 34    paramsp -> empty
Rule 35    asig -> ID ididx IGUAL asigpp PTCOMA
Rule 36    asigp -> exp asigppp
Rule 37    asigp -> expbool asigppp
Rule 38    asigp -> CTEC asigppp
Rule 39    asigp -> STRING asigppp
Rule 40    asigp -> empty
Rule 41    asigppp -> COMA asigp
Rule 42    asigppp -> empty
Rule 43    asigpp -> exp
Rule 44    asigpp -> expbool
Rule 45    asigpp -> CTEC
Rule 46    asigpp -> STRING
Rule 47    asigpp -> ACOR asigp CCOR
Rule 48    ididx -> ACOR exp CCOR
Rule 49    ididx -> empty
Rule 50    llamada -> ID APAR args CPAR PTCOMA
Rule 51    args -> ctes argsp
Rule 52    args -> exp argsp
Rule 53    args -> expbool argsp
Rule 54    args -> STRING argsp
Rule 55    args -> CTEC argsp
Rule 56    argsp -> COMA args
Rule 57    argsp -> empty
Rule 58    return -> RETURN APAR asigpp CPAR PTCOMA
Rule 59    lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA
Rule 60    lecturapp -> COMA ID ididx lecturapp
Rule 61    lecturapp -> empty
Rule 62    escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA
Rule 63    escriturap -> STRING
Rule 64    escriturap -> exp
Rule 65    escriturap -> expbool
Rule 66    escriturap -> CTEC
Rule 67    escriturapp -> COMA escriturap
Rule 68    escriturapp -> empty
Rule 69    cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
Rule 70    condp -> expbool
Rule 71    condp -> TRUE
Rule 72    condp -> FALSE
Rule 73    condpp -> ELSE ALLA estatutos CLLA
Rule 74    condpp -> empty
Rule 75    while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA
Rule 76    for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
Rule 77    exp -> termino expp
Rule 78    expp -> MAS exp
Rule 79    expp -> MENOS exp
Rule 80    expp -> empty
Rule 81    termino -> factor terminop
Rule 82    terminop -> POR termino
Rule 83    terminop -> DIV termino
Rule 84    terminop -> empty
Rule 85    factor -> APAR exp CPAR
Rule 86    factor -> ID factorp
Rule 87    factor -> ctes
Rule 88    factorp -> <empty>
Rule 89    factorp -> APAR exp factorpp CPAR
Rule 90    factorp -> ACOR exp CCOR
Rule 91    factorp -> empty
Rule 92    factorpp -> COMA exp factorpp
Rule 93    factorpp -> empty
Rule 94    expbool -> exp expboolp exp expboolpp
Rule 95    expboolp -> MAYQ
Rule 96    expboolp -> MENQ
Rule 97    expboolp -> MAYI
Rule 98    expboolp -> MENI
Rule 99    expboolp -> IGUALIGUAL
Rule 100   expboolp -> DIF
Rule 101   expboolpp -> AND expbool
Rule 102   expboolpp -> OR expbool
Rule 103   expboolpp -> NOT expbool
Rule 104   expboolpp -> empty
Rule 105   ctes -> ID factorp
Rule 106   ctes -> CTEI
Rule 107   ctes -> CTEF
Rule 108   empty -> <empty>

Terminals, with rules where they appear

ACOR                 : 7 47 48 90
ALLA                 : 1 11 69 73 75 76
AND                  : 101
APAR                 : 1 11 50 58 59 62 69 75 85 89
BOOL                 : 30
CCOR                 : 7 47 48 90
CHAR                 : 28
CLLA                 : 1 11 69 73 75 76
COMA                 : 10 33 41 56 60 67 92
CPAR                 : 1 11 50 58 59 62 69 75 85 89
CTEC                 : 38 45 55 66
CTEF                 : 107
CTEI                 : 7 106
DIF                  : 100
DIV                  : 83
DO                   : 75 76
DOSPNTS              : 4 31
ELSE                 : 73
FALSE                : 72
FLOAT                : 27
FOR                  : 76
FUNCTION             : 11
ID                   : 1 6 11 31 35 50 59 60 76 86 105
IF                   : 69
IGUAL                : 35 76
IGUALIGUAL           : 99
INT                  : 26
MAIN                 : 1
MAS                  : 78
MAYI                 : 97
MAYQ                 : 95
MENI                 : 98
MENOS                : 79
MENQ                 : 96
NOT                  : 103
OR                   : 102
POR                  : 82
PROGRAM              : 1
PTCOMA               : 1 9 11 35 50 58 59 62
READ                 : 59
RETURN               : 58
STR                  : 29
STRING               : 39 46 54 63
THEN                 : 69
TO                   : 76
TRUE                 : 71
VARS                 : 2
VOID                 : 13
WHILE                : 75
WRITE                : 62
error                : 

Nonterminals, with rules where they appear

args                 : 50 56
argsp                : 51 52 53 54 55
asig                 : 15
asigp                : 41 47
asigpp               : 35 58
asigppp              : 36 37 38 39
cond                 : 20
condp                : 69 75
condpp               : 69
ctes                 : 51 87
empty                : 3 5 8 12 25 32 34 40 42 49 57 61 68 74 80 84 91 93 104
escritura            : 19
escriturap           : 62 67
escriturapp          : 62
estatutop            : 15 16 17 18 19 20 21 22 23
estatutos            : 1 11 24 69 73 75 76
exp                  : 23 36 43 48 52 64 76 76 78 79 85 89 90 92 94 94
expbool              : 37 44 53 65 70 101 102 103
expboolp             : 94
expboolpp            : 94
expp                 : 77
factor               : 81
factorp              : 86 105
factorpp             : 89 92
for                  : 22
funcs                : 1 11
funcsp               : 11
ididx                : 31 35 59 60 76
lectura              : 18
lecturapp            : 59 60
llamada              : 16
params               : 11 33
paramsp              : 31
program              : 0
return               : 17
termino              : 77 82 83
terminop             : 81
tipo                 : 4 14 31
vars                 : 2 4
varsp                : 4 10
varspp               : 4 10
varsppp              : 6
varss                : 1 11
while                : 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos CLLA

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos CLLA

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos CLLA

    PTCOMA          shift and go to state 4


state 4

    (1) program -> PROGRAM ID PTCOMA . varss funcs MAIN APAR CPAR ALLA estatutos CLLA
    (2) varss -> . VARS vars
    (3) varss -> . empty
    (108) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 108 (empty -> .)
    MAIN            reduce using rule 108 (empty -> .)

    varss                          shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID PTCOMA varss . funcs MAIN APAR CPAR ALLA estatutos CLLA
    (11) funcs -> . FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (12) funcs -> . empty
    (108) empty -> .

    FUNCTION        shift and go to state 9
    MAIN            reduce using rule 108 (empty -> .)

    funcs                          shift and go to state 8
    empty                          shift and go to state 10

state 6

    (2) varss -> VARS . vars
    (4) vars -> . tipo DOSPNTS varsp varspp vars
    (5) vars -> . empty
    (26) tipo -> . INT
    (27) tipo -> . FLOAT
    (28) tipo -> . CHAR
    (29) tipo -> . STR
    (30) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    STR             shift and go to state 17
    BOOL            shift and go to state 18
    FUNCTION        reduce using rule 108 (empty -> .)
    MAIN            reduce using rule 108 (empty -> .)
    ALLA            reduce using rule 108 (empty -> .)

    vars                           shift and go to state 11
    tipo                           shift and go to state 12
    empty                          shift and go to state 13

state 7

    (3) varss -> empty .

    FUNCTION        reduce using rule 3 (varss -> empty .)
    MAIN            reduce using rule 3 (varss -> empty .)
    ALLA            reduce using rule 3 (varss -> empty .)


state 8

    (1) program -> PROGRAM ID PTCOMA varss funcs . MAIN APAR CPAR ALLA estatutos CLLA

    MAIN            shift and go to state 19


state 9

    (11) funcs -> FUNCTION . funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (13) funcsp -> . VOID
    (14) funcsp -> . tipo
    (26) tipo -> . INT
    (27) tipo -> . FLOAT
    (28) tipo -> . CHAR
    (29) tipo -> . STR
    (30) tipo -> . BOOL

    VOID            shift and go to state 21
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    STR             shift and go to state 17
    BOOL            shift and go to state 18

    funcsp                         shift and go to state 20
    tipo                           shift and go to state 22

state 10

    (12) funcs -> empty .

    MAIN            reduce using rule 12 (funcs -> empty .)


state 11

    (2) varss -> VARS vars .

    FUNCTION        reduce using rule 2 (varss -> VARS vars .)
    MAIN            reduce using rule 2 (varss -> VARS vars .)
    ALLA            reduce using rule 2 (varss -> VARS vars .)


state 12

    (4) vars -> tipo . DOSPNTS varsp varspp vars

    DOSPNTS         shift and go to state 23


state 13

    (5) vars -> empty .

    FUNCTION        reduce using rule 5 (vars -> empty .)
    MAIN            reduce using rule 5 (vars -> empty .)
    ALLA            reduce using rule 5 (vars -> empty .)


state 14

    (26) tipo -> INT .

    DOSPNTS         reduce using rule 26 (tipo -> INT .)
    ID              reduce using rule 26 (tipo -> INT .)


state 15

    (27) tipo -> FLOAT .

    DOSPNTS         reduce using rule 27 (tipo -> FLOAT .)
    ID              reduce using rule 27 (tipo -> FLOAT .)


state 16

    (28) tipo -> CHAR .

    DOSPNTS         reduce using rule 28 (tipo -> CHAR .)
    ID              reduce using rule 28 (tipo -> CHAR .)


state 17

    (29) tipo -> STR .

    DOSPNTS         reduce using rule 29 (tipo -> STR .)
    ID              reduce using rule 29 (tipo -> STR .)


state 18

    (30) tipo -> BOOL .

    DOSPNTS         reduce using rule 30 (tipo -> BOOL .)
    ID              reduce using rule 30 (tipo -> BOOL .)


state 19

    (1) program -> PROGRAM ID PTCOMA varss funcs MAIN . APAR CPAR ALLA estatutos CLLA

    APAR            shift and go to state 24


state 20

    (11) funcs -> FUNCTION funcsp . ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs

    ID              shift and go to state 25


state 21

    (13) funcsp -> VOID .

    ID              reduce using rule 13 (funcsp -> VOID .)


state 22

    (14) funcsp -> tipo .

    ID              reduce using rule 14 (funcsp -> tipo .)


state 23

    (4) vars -> tipo DOSPNTS . varsp varspp vars
    (6) varsp -> . ID varsppp

    ID              shift and go to state 27

    varsp                          shift and go to state 26

state 24

    (1) program -> PROGRAM ID PTCOMA varss funcs MAIN APAR . CPAR ALLA estatutos CLLA

    CPAR            shift and go to state 28


state 25

    (11) funcs -> FUNCTION funcsp ID . APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs

    APAR            shift and go to state 29


state 26

    (4) vars -> tipo DOSPNTS varsp . varspp vars
    (9) varspp -> . PTCOMA
    (10) varspp -> . COMA varsp varspp

    PTCOMA          shift and go to state 31
    COMA            shift and go to state 32

    varspp                         shift and go to state 30

state 27

    (6) varsp -> ID . varsppp
    (7) varsppp -> . ACOR CTEI CCOR
    (8) varsppp -> . empty
    (108) empty -> .

    ACOR            shift and go to state 34
    PTCOMA          reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)

    varsppp                        shift and go to state 33
    empty                          shift and go to state 35

state 28

    (1) program -> PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR . ALLA estatutos CLLA

    ALLA            shift and go to state 36


state 29

    (11) funcs -> FUNCTION funcsp ID APAR . params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (31) params -> . tipo DOSPNTS ID ididx paramsp
    (32) params -> . empty
    (26) tipo -> . INT
    (27) tipo -> . FLOAT
    (28) tipo -> . CHAR
    (29) tipo -> . STR
    (30) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    STR             shift and go to state 17
    BOOL            shift and go to state 18
    CPAR            reduce using rule 108 (empty -> .)

    params                         shift and go to state 37
    tipo                           shift and go to state 38
    empty                          shift and go to state 39

state 30

    (4) vars -> tipo DOSPNTS varsp varspp . vars
    (4) vars -> . tipo DOSPNTS varsp varspp vars
    (5) vars -> . empty
    (26) tipo -> . INT
    (27) tipo -> . FLOAT
    (28) tipo -> . CHAR
    (29) tipo -> . STR
    (30) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    STR             shift and go to state 17
    BOOL            shift and go to state 18
    FUNCTION        reduce using rule 108 (empty -> .)
    MAIN            reduce using rule 108 (empty -> .)
    ALLA            reduce using rule 108 (empty -> .)

    tipo                           shift and go to state 12
    vars                           shift and go to state 40
    empty                          shift and go to state 13

state 31

    (9) varspp -> PTCOMA .

    INT             reduce using rule 9 (varspp -> PTCOMA .)
    FLOAT           reduce using rule 9 (varspp -> PTCOMA .)
    CHAR            reduce using rule 9 (varspp -> PTCOMA .)
    STR             reduce using rule 9 (varspp -> PTCOMA .)
    BOOL            reduce using rule 9 (varspp -> PTCOMA .)
    FUNCTION        reduce using rule 9 (varspp -> PTCOMA .)
    MAIN            reduce using rule 9 (varspp -> PTCOMA .)
    ALLA            reduce using rule 9 (varspp -> PTCOMA .)


state 32

    (10) varspp -> COMA . varsp varspp
    (6) varsp -> . ID varsppp

    ID              shift and go to state 27

    varsp                          shift and go to state 41

state 33

    (6) varsp -> ID varsppp .

    PTCOMA          reduce using rule 6 (varsp -> ID varsppp .)
    COMA            reduce using rule 6 (varsp -> ID varsppp .)


state 34

    (7) varsppp -> ACOR . CTEI CCOR

    CTEI            shift and go to state 42


state 35

    (8) varsppp -> empty .

    PTCOMA          reduce using rule 8 (varsppp -> empty .)
    COMA            reduce using rule 8 (varsppp -> empty .)


state 36

    (1) program -> PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR ALLA . estatutos CLLA
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 45
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 37

    (11) funcs -> FUNCTION funcsp ID APAR params . CPAR PTCOMA varss ALLA estatutos CLLA funcs

    CPAR            shift and go to state 66


state 38

    (31) params -> tipo . DOSPNTS ID ididx paramsp

    DOSPNTS         shift and go to state 67


state 39

    (32) params -> empty .

    CPAR            reduce using rule 32 (params -> empty .)


state 40

    (4) vars -> tipo DOSPNTS varsp varspp vars .

    FUNCTION        reduce using rule 4 (vars -> tipo DOSPNTS varsp varspp vars .)
    MAIN            reduce using rule 4 (vars -> tipo DOSPNTS varsp varspp vars .)
    ALLA            reduce using rule 4 (vars -> tipo DOSPNTS varsp varspp vars .)


state 41

    (10) varspp -> COMA varsp . varspp
    (9) varspp -> . PTCOMA
    (10) varspp -> . COMA varsp varspp

    PTCOMA          shift and go to state 31
    COMA            shift and go to state 32

    varspp                         shift and go to state 68

state 42

    (7) varsppp -> ACOR CTEI . CCOR

    CCOR            shift and go to state 69


state 43

    (35) asig -> ID . ididx IGUAL asigpp PTCOMA
    (50) llamada -> ID . APAR args CPAR PTCOMA
    (86) factor -> ID . factorp
    (105) ctes -> ID . factorp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (88) factorp -> .
    (89) factorp -> . APAR exp factorpp CPAR
    (90) factorp -> . ACOR exp CCOR
    (91) factorp -> . empty
    (108) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for POR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for DIV resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAS resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENOS resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for ID resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for READ resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for WRITE resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for IF resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for FOR resolved using rule 88 (factorp -> .)
  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for CTEI resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CTEF resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CLLA resolved using rule 88 (factorp -> .)
    APAR            shift and go to state 71
    ACOR            shift and go to state 73
    POR             reduce using rule 88 (factorp -> .)
    DIV             reduce using rule 88 (factorp -> .)
    MAS             reduce using rule 88 (factorp -> .)
    MENOS           reduce using rule 88 (factorp -> .)
    ID              reduce using rule 88 (factorp -> .)
    RETURN          reduce using rule 88 (factorp -> .)
    READ            reduce using rule 88 (factorp -> .)
    WRITE           reduce using rule 88 (factorp -> .)
    IF              reduce using rule 88 (factorp -> .)
    WHILE           reduce using rule 88 (factorp -> .)
    FOR             reduce using rule 88 (factorp -> .)
    CTEI            reduce using rule 88 (factorp -> .)
    CTEF            reduce using rule 88 (factorp -> .)
    CLLA            reduce using rule 88 (factorp -> .)
    IGUAL           reduce using rule 108 (empty -> .)

  ! APAR            [ reduce using rule 88 (factorp -> .) ]
  ! POR             [ reduce using rule 108 (empty -> .) ]
  ! DIV             [ reduce using rule 108 (empty -> .) ]
  ! MAS             [ reduce using rule 108 (empty -> .) ]
  ! MENOS           [ reduce using rule 108 (empty -> .) ]
  ! ID              [ reduce using rule 108 (empty -> .) ]
  ! RETURN          [ reduce using rule 108 (empty -> .) ]
  ! READ            [ reduce using rule 108 (empty -> .) ]
  ! WRITE           [ reduce using rule 108 (empty -> .) ]
  ! IF              [ reduce using rule 108 (empty -> .) ]
  ! WHILE           [ reduce using rule 108 (empty -> .) ]
  ! FOR             [ reduce using rule 108 (empty -> .) ]
  ! APAR            [ reduce using rule 108 (empty -> .) ]
  ! CTEI            [ reduce using rule 108 (empty -> .) ]
  ! CTEF            [ reduce using rule 108 (empty -> .) ]
  ! CLLA            [ reduce using rule 108 (empty -> .) ]

    ididx                          shift and go to state 70
    factorp                        shift and go to state 72
    empty                          shift and go to state 74

state 44

    (85) factor -> APAR . exp CPAR
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 75
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 45

    (1) program -> PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos . CLLA

    CLLA            shift and go to state 77


state 46

    (15) estatutos -> asig . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asig                           shift and go to state 46
    estatutop                      shift and go to state 78
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 47

    (16) estatutos -> llamada . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    llamada                        shift and go to state 47
    estatutop                      shift and go to state 81
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 48

    (17) estatutos -> return . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    return                         shift and go to state 48
    estatutop                      shift and go to state 82
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 49

    (18) estatutos -> lectura . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    lectura                        shift and go to state 49
    estatutop                      shift and go to state 83
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 50

    (19) estatutos -> escritura . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    escritura                      shift and go to state 50
    estatutop                      shift and go to state 84
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 51

    (20) estatutos -> cond . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    cond                           shift and go to state 51
    estatutop                      shift and go to state 85
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 52

    (21) estatutos -> while . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    while                          shift and go to state 52
    estatutop                      shift and go to state 86
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 53

    (22) estatutos -> for . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    for                            shift and go to state 53
    estatutop                      shift and go to state 87
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 54

    (23) estatutos -> exp . estatutop
    (24) estatutop -> . estatutos
    (25) estatutop -> . empty
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (108) empty -> .
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CLLA            reduce using rule 108 (empty -> .)
    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 54
    estatutop                      shift and go to state 88
    estatutos                      shift and go to state 79
    empty                          shift and go to state 80
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 55

    (58) return -> RETURN . APAR asigpp CPAR PTCOMA

    APAR            shift and go to state 89


state 56

    (59) lectura -> READ . APAR ID ididx lecturapp CPAR PTCOMA

    APAR            shift and go to state 90


state 57

    (62) escritura -> WRITE . APAR escriturap escriturapp CPAR PTCOMA

    APAR            shift and go to state 91


state 58

    (69) cond -> IF . APAR condp CPAR THEN ALLA estatutos CLLA condpp

    APAR            shift and go to state 92


state 59

    (75) while -> WHILE . APAR condp CPAR DO ALLA estatutos CLLA

    APAR            shift and go to state 93


state 60

    (76) for -> FOR . ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA

    ID              shift and go to state 94


state 61

    (77) exp -> termino . expp
    (78) expp -> . MAS exp
    (79) expp -> . MENOS exp
    (80) expp -> . empty
    (108) empty -> .

    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    MAYQ            reduce using rule 108 (empty -> .)
    MENQ            reduce using rule 108 (empty -> .)
    MAYI            reduce using rule 108 (empty -> .)
    MENI            reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIF             reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    NOT             reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    expp                           shift and go to state 95
    empty                          shift and go to state 98

state 62

    (81) termino -> factor . terminop
    (82) terminop -> . POR termino
    (83) terminop -> . DIV termino
    (84) terminop -> . empty
    (108) empty -> .

    POR             shift and go to state 100
    DIV             shift and go to state 101
    MAS             reduce using rule 108 (empty -> .)
    MENOS           reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    COMA            reduce using rule 108 (empty -> .)
    MAYQ            reduce using rule 108 (empty -> .)
    MENQ            reduce using rule 108 (empty -> .)
    MAYI            reduce using rule 108 (empty -> .)
    MENI            reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIF             reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    NOT             reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO              reduce using rule 108 (empty -> .)

    terminop                       shift and go to state 99
    empty                          shift and go to state 102

state 63

    (87) factor -> ctes .

    POR             reduce using rule 87 (factor -> ctes .)
    DIV             reduce using rule 87 (factor -> ctes .)
    MAS             reduce using rule 87 (factor -> ctes .)
    MENOS           reduce using rule 87 (factor -> ctes .)
    ID              reduce using rule 87 (factor -> ctes .)
    RETURN          reduce using rule 87 (factor -> ctes .)
    READ            reduce using rule 87 (factor -> ctes .)
    WRITE           reduce using rule 87 (factor -> ctes .)
    IF              reduce using rule 87 (factor -> ctes .)
    WHILE           reduce using rule 87 (factor -> ctes .)
    FOR             reduce using rule 87 (factor -> ctes .)
    APAR            reduce using rule 87 (factor -> ctes .)
    CTEI            reduce using rule 87 (factor -> ctes .)
    CTEF            reduce using rule 87 (factor -> ctes .)
    CLLA            reduce using rule 87 (factor -> ctes .)
    CPAR            reduce using rule 87 (factor -> ctes .)
    CCOR            reduce using rule 87 (factor -> ctes .)
    MAYQ            reduce using rule 87 (factor -> ctes .)
    MENQ            reduce using rule 87 (factor -> ctes .)
    MAYI            reduce using rule 87 (factor -> ctes .)
    MENI            reduce using rule 87 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 87 (factor -> ctes .)
    DIF             reduce using rule 87 (factor -> ctes .)
    COMA            reduce using rule 87 (factor -> ctes .)
    PTCOMA          reduce using rule 87 (factor -> ctes .)
    AND             reduce using rule 87 (factor -> ctes .)
    OR              reduce using rule 87 (factor -> ctes .)
    NOT             reduce using rule 87 (factor -> ctes .)
    TO              reduce using rule 87 (factor -> ctes .)
    DO              reduce using rule 87 (factor -> ctes .)


state 64

    (106) ctes -> CTEI .

    POR             reduce using rule 106 (ctes -> CTEI .)
    DIV             reduce using rule 106 (ctes -> CTEI .)
    MAS             reduce using rule 106 (ctes -> CTEI .)
    MENOS           reduce using rule 106 (ctes -> CTEI .)
    ID              reduce using rule 106 (ctes -> CTEI .)
    RETURN          reduce using rule 106 (ctes -> CTEI .)
    READ            reduce using rule 106 (ctes -> CTEI .)
    WRITE           reduce using rule 106 (ctes -> CTEI .)
    IF              reduce using rule 106 (ctes -> CTEI .)
    WHILE           reduce using rule 106 (ctes -> CTEI .)
    FOR             reduce using rule 106 (ctes -> CTEI .)
    APAR            reduce using rule 106 (ctes -> CTEI .)
    CTEI            reduce using rule 106 (ctes -> CTEI .)
    CTEF            reduce using rule 106 (ctes -> CTEI .)
    CLLA            reduce using rule 106 (ctes -> CTEI .)
    CPAR            reduce using rule 106 (ctes -> CTEI .)
    COMA            reduce using rule 106 (ctes -> CTEI .)
    MAYQ            reduce using rule 106 (ctes -> CTEI .)
    MENQ            reduce using rule 106 (ctes -> CTEI .)
    MAYI            reduce using rule 106 (ctes -> CTEI .)
    MENI            reduce using rule 106 (ctes -> CTEI .)
    IGUALIGUAL      reduce using rule 106 (ctes -> CTEI .)
    DIF             reduce using rule 106 (ctes -> CTEI .)
    CCOR            reduce using rule 106 (ctes -> CTEI .)
    PTCOMA          reduce using rule 106 (ctes -> CTEI .)
    AND             reduce using rule 106 (ctes -> CTEI .)
    OR              reduce using rule 106 (ctes -> CTEI .)
    NOT             reduce using rule 106 (ctes -> CTEI .)
    TO              reduce using rule 106 (ctes -> CTEI .)
    DO              reduce using rule 106 (ctes -> CTEI .)


state 65

    (107) ctes -> CTEF .

    POR             reduce using rule 107 (ctes -> CTEF .)
    DIV             reduce using rule 107 (ctes -> CTEF .)
    MAS             reduce using rule 107 (ctes -> CTEF .)
    MENOS           reduce using rule 107 (ctes -> CTEF .)
    ID              reduce using rule 107 (ctes -> CTEF .)
    RETURN          reduce using rule 107 (ctes -> CTEF .)
    READ            reduce using rule 107 (ctes -> CTEF .)
    WRITE           reduce using rule 107 (ctes -> CTEF .)
    IF              reduce using rule 107 (ctes -> CTEF .)
    WHILE           reduce using rule 107 (ctes -> CTEF .)
    FOR             reduce using rule 107 (ctes -> CTEF .)
    APAR            reduce using rule 107 (ctes -> CTEF .)
    CTEI            reduce using rule 107 (ctes -> CTEF .)
    CTEF            reduce using rule 107 (ctes -> CTEF .)
    CLLA            reduce using rule 107 (ctes -> CTEF .)
    CPAR            reduce using rule 107 (ctes -> CTEF .)
    COMA            reduce using rule 107 (ctes -> CTEF .)
    MAYQ            reduce using rule 107 (ctes -> CTEF .)
    MENQ            reduce using rule 107 (ctes -> CTEF .)
    MAYI            reduce using rule 107 (ctes -> CTEF .)
    MENI            reduce using rule 107 (ctes -> CTEF .)
    IGUALIGUAL      reduce using rule 107 (ctes -> CTEF .)
    DIF             reduce using rule 107 (ctes -> CTEF .)
    CCOR            reduce using rule 107 (ctes -> CTEF .)
    PTCOMA          reduce using rule 107 (ctes -> CTEF .)
    AND             reduce using rule 107 (ctes -> CTEF .)
    OR              reduce using rule 107 (ctes -> CTEF .)
    NOT             reduce using rule 107 (ctes -> CTEF .)
    TO              reduce using rule 107 (ctes -> CTEF .)
    DO              reduce using rule 107 (ctes -> CTEF .)


state 66

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR . PTCOMA varss ALLA estatutos CLLA funcs

    PTCOMA          shift and go to state 103


state 67

    (31) params -> tipo DOSPNTS . ID ididx paramsp

    ID              shift and go to state 104


state 68

    (10) varspp -> COMA varsp varspp .

    INT             reduce using rule 10 (varspp -> COMA varsp varspp .)
    FLOAT           reduce using rule 10 (varspp -> COMA varsp varspp .)
    CHAR            reduce using rule 10 (varspp -> COMA varsp varspp .)
    STR             reduce using rule 10 (varspp -> COMA varsp varspp .)
    BOOL            reduce using rule 10 (varspp -> COMA varsp varspp .)
    FUNCTION        reduce using rule 10 (varspp -> COMA varsp varspp .)
    MAIN            reduce using rule 10 (varspp -> COMA varsp varspp .)
    ALLA            reduce using rule 10 (varspp -> COMA varsp varspp .)


state 69

    (7) varsppp -> ACOR CTEI CCOR .

    PTCOMA          reduce using rule 7 (varsppp -> ACOR CTEI CCOR .)
    COMA            reduce using rule 7 (varsppp -> ACOR CTEI CCOR .)


state 70

    (35) asig -> ID ididx . IGUAL asigpp PTCOMA

    IGUAL           shift and go to state 105


state 71

    (50) llamada -> ID APAR . args CPAR PTCOMA
    (89) factorp -> APAR . exp factorpp CPAR
    (51) args -> . ctes argsp
    (52) args -> . exp argsp
    (53) args -> . expbool argsp
    (54) args -> . STRING argsp
    (55) args -> . CTEC argsp
    (77) exp -> . termino expp
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF
    (94) expbool -> . exp expboolp exp expboolpp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes

    STRING          shift and go to state 111
    CTEC            shift and go to state 112
    ID              shift and go to state 106
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65
    APAR            shift and go to state 44

    args                           shift and go to state 107
    exp                            shift and go to state 108
    ctes                           shift and go to state 109
    expbool                        shift and go to state 110
    termino                        shift and go to state 61
    factor                         shift and go to state 62

state 72

    (86) factor -> ID factorp .
    (105) ctes -> ID factorp .

  ! reduce/reduce conflict for POR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIV resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for ID resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for RETURN resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for READ resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for WRITE resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for IF resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for WHILE resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for FOR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for APAR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEI resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for CTEF resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for CLLA resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for CCOR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for AND resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for OR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for NOT resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for TO resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for DO resolved using rule 86 (factor -> ID factorp .)
    POR             reduce using rule 86 (factor -> ID factorp .)
    DIV             reduce using rule 86 (factor -> ID factorp .)
    MAS             reduce using rule 86 (factor -> ID factorp .)
    MENOS           reduce using rule 86 (factor -> ID factorp .)
    ID              reduce using rule 86 (factor -> ID factorp .)
    RETURN          reduce using rule 86 (factor -> ID factorp .)
    READ            reduce using rule 86 (factor -> ID factorp .)
    WRITE           reduce using rule 86 (factor -> ID factorp .)
    IF              reduce using rule 86 (factor -> ID factorp .)
    WHILE           reduce using rule 86 (factor -> ID factorp .)
    FOR             reduce using rule 86 (factor -> ID factorp .)
    APAR            reduce using rule 86 (factor -> ID factorp .)
    CTEI            reduce using rule 86 (factor -> ID factorp .)
    CTEF            reduce using rule 86 (factor -> ID factorp .)
    CLLA            reduce using rule 86 (factor -> ID factorp .)
    CPAR            reduce using rule 86 (factor -> ID factorp .)
    CCOR            reduce using rule 86 (factor -> ID factorp .)
    MAYQ            reduce using rule 86 (factor -> ID factorp .)
    MENQ            reduce using rule 86 (factor -> ID factorp .)
    MAYI            reduce using rule 86 (factor -> ID factorp .)
    MENI            reduce using rule 86 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 86 (factor -> ID factorp .)
    DIF             reduce using rule 86 (factor -> ID factorp .)
    COMA            reduce using rule 86 (factor -> ID factorp .)
    PTCOMA          reduce using rule 86 (factor -> ID factorp .)
    AND             reduce using rule 86 (factor -> ID factorp .)
    OR              reduce using rule 86 (factor -> ID factorp .)
    NOT             reduce using rule 86 (factor -> ID factorp .)
    TO              reduce using rule 86 (factor -> ID factorp .)
    DO              reduce using rule 86 (factor -> ID factorp .)

  ! POR             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! ID              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! RETURN          [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! READ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! WRITE           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! IF              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! WHILE           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! FOR             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! APAR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CTEI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CTEF            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CLLA            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CCOR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! COMA            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! PTCOMA          [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! AND             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! OR              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! NOT             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! TO              [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DO              [ reduce using rule 105 (ctes -> ID factorp .) ]


state 73

    (48) ididx -> ACOR . exp CCOR
    (90) factorp -> ACOR . exp CCOR
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 113
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 74

    (49) ididx -> empty .
    (91) factorp -> empty .

    IGUAL           reduce using rule 49 (ididx -> empty .)
    POR             reduce using rule 91 (factorp -> empty .)
    DIV             reduce using rule 91 (factorp -> empty .)
    MAS             reduce using rule 91 (factorp -> empty .)
    MENOS           reduce using rule 91 (factorp -> empty .)
    ID              reduce using rule 91 (factorp -> empty .)
    RETURN          reduce using rule 91 (factorp -> empty .)
    READ            reduce using rule 91 (factorp -> empty .)
    WRITE           reduce using rule 91 (factorp -> empty .)
    IF              reduce using rule 91 (factorp -> empty .)
    WHILE           reduce using rule 91 (factorp -> empty .)
    FOR             reduce using rule 91 (factorp -> empty .)
    APAR            reduce using rule 91 (factorp -> empty .)
    CTEI            reduce using rule 91 (factorp -> empty .)
    CTEF            reduce using rule 91 (factorp -> empty .)
    CLLA            reduce using rule 91 (factorp -> empty .)


state 75

    (85) factor -> APAR exp . CPAR

    CPAR            shift and go to state 114


state 76

    (86) factor -> ID . factorp
    (105) ctes -> ID . factorp
    (88) factorp -> .
    (89) factorp -> . APAR exp factorpp CPAR
    (90) factorp -> . ACOR exp CCOR
    (91) factorp -> . empty
    (108) empty -> .

  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for POR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for DIV resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAS resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENOS resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CPAR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CCOR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAYQ resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENQ resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAYI resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENI resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for DIF resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for COMA resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for ID resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for READ resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for WRITE resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for IF resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for FOR resolved using rule 88 (factorp -> .)
  ! shift/reduce conflict for APAR resolved as shift
  ! reduce/reduce conflict for CTEI resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CTEF resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CLLA resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for AND resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for OR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for NOT resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for TO resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for DO resolved using rule 88 (factorp -> .)
    POR             reduce using rule 88 (factorp -> .)
    DIV             reduce using rule 88 (factorp -> .)
    MAS             reduce using rule 88 (factorp -> .)
    MENOS           reduce using rule 88 (factorp -> .)
    CPAR            reduce using rule 88 (factorp -> .)
    CCOR            reduce using rule 88 (factorp -> .)
    MAYQ            reduce using rule 88 (factorp -> .)
    MENQ            reduce using rule 88 (factorp -> .)
    MAYI            reduce using rule 88 (factorp -> .)
    MENI            reduce using rule 88 (factorp -> .)
    IGUALIGUAL      reduce using rule 88 (factorp -> .)
    DIF             reduce using rule 88 (factorp -> .)
    COMA            reduce using rule 88 (factorp -> .)
    ID              reduce using rule 88 (factorp -> .)
    RETURN          reduce using rule 88 (factorp -> .)
    READ            reduce using rule 88 (factorp -> .)
    WRITE           reduce using rule 88 (factorp -> .)
    IF              reduce using rule 88 (factorp -> .)
    WHILE           reduce using rule 88 (factorp -> .)
    FOR             reduce using rule 88 (factorp -> .)
    CTEI            reduce using rule 88 (factorp -> .)
    CTEF            reduce using rule 88 (factorp -> .)
    CLLA            reduce using rule 88 (factorp -> .)
    PTCOMA          reduce using rule 88 (factorp -> .)
    AND             reduce using rule 88 (factorp -> .)
    OR              reduce using rule 88 (factorp -> .)
    NOT             reduce using rule 88 (factorp -> .)
    TO              reduce using rule 88 (factorp -> .)
    DO              reduce using rule 88 (factorp -> .)
    APAR            shift and go to state 115
    ACOR            shift and go to state 116

  ! APAR            [ reduce using rule 88 (factorp -> .) ]
  ! POR             [ reduce using rule 108 (empty -> .) ]
  ! DIV             [ reduce using rule 108 (empty -> .) ]
  ! MAS             [ reduce using rule 108 (empty -> .) ]
  ! MENOS           [ reduce using rule 108 (empty -> .) ]
  ! CPAR            [ reduce using rule 108 (empty -> .) ]
  ! CCOR            [ reduce using rule 108 (empty -> .) ]
  ! MAYQ            [ reduce using rule 108 (empty -> .) ]
  ! MENQ            [ reduce using rule 108 (empty -> .) ]
  ! MAYI            [ reduce using rule 108 (empty -> .) ]
  ! MENI            [ reduce using rule 108 (empty -> .) ]
  ! IGUALIGUAL      [ reduce using rule 108 (empty -> .) ]
  ! DIF             [ reduce using rule 108 (empty -> .) ]
  ! COMA            [ reduce using rule 108 (empty -> .) ]
  ! ID              [ reduce using rule 108 (empty -> .) ]
  ! RETURN          [ reduce using rule 108 (empty -> .) ]
  ! READ            [ reduce using rule 108 (empty -> .) ]
  ! WRITE           [ reduce using rule 108 (empty -> .) ]
  ! IF              [ reduce using rule 108 (empty -> .) ]
  ! WHILE           [ reduce using rule 108 (empty -> .) ]
  ! FOR             [ reduce using rule 108 (empty -> .) ]
  ! APAR            [ reduce using rule 108 (empty -> .) ]
  ! CTEI            [ reduce using rule 108 (empty -> .) ]
  ! CTEF            [ reduce using rule 108 (empty -> .) ]
  ! CLLA            [ reduce using rule 108 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 108 (empty -> .) ]
  ! AND             [ reduce using rule 108 (empty -> .) ]
  ! OR              [ reduce using rule 108 (empty -> .) ]
  ! NOT             [ reduce using rule 108 (empty -> .) ]
  ! TO              [ reduce using rule 108 (empty -> .) ]
  ! DO              [ reduce using rule 108 (empty -> .) ]

    factorp                        shift and go to state 72
    empty                          shift and go to state 117

state 77

    (1) program -> PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos CLLA .

    $end            reduce using rule 1 (program -> PROGRAM ID PTCOMA varss funcs MAIN APAR CPAR ALLA estatutos CLLA .)


state 78

    (15) estatutos -> asig estatutop .

    CLLA            reduce using rule 15 (estatutos -> asig estatutop .)


state 79

    (24) estatutop -> estatutos .

    CLLA            reduce using rule 24 (estatutop -> estatutos .)


state 80

    (25) estatutop -> empty .

    CLLA            reduce using rule 25 (estatutop -> empty .)


state 81

    (16) estatutos -> llamada estatutop .

    CLLA            reduce using rule 16 (estatutos -> llamada estatutop .)


state 82

    (17) estatutos -> return estatutop .

    CLLA            reduce using rule 17 (estatutos -> return estatutop .)


state 83

    (18) estatutos -> lectura estatutop .

    CLLA            reduce using rule 18 (estatutos -> lectura estatutop .)


state 84

    (19) estatutos -> escritura estatutop .

    CLLA            reduce using rule 19 (estatutos -> escritura estatutop .)


state 85

    (20) estatutos -> cond estatutop .

    CLLA            reduce using rule 20 (estatutos -> cond estatutop .)


state 86

    (21) estatutos -> while estatutop .

    CLLA            reduce using rule 21 (estatutos -> while estatutop .)


state 87

    (22) estatutos -> for estatutop .

    CLLA            reduce using rule 22 (estatutos -> for estatutop .)


state 88

    (23) estatutos -> exp estatutop .

    CLLA            reduce using rule 23 (estatutos -> exp estatutop .)


state 89

    (58) return -> RETURN APAR . asigpp CPAR PTCOMA
    (43) asigpp -> . exp
    (44) asigpp -> . expbool
    (45) asigpp -> . CTEC
    (46) asigpp -> . STRING
    (47) asigpp -> . ACOR asigp CCOR
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 121
    STRING          shift and go to state 122
    ACOR            shift and go to state 123
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigpp                         shift and go to state 118
    exp                            shift and go to state 119
    expbool                        shift and go to state 120
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 90

    (59) lectura -> READ APAR . ID ididx lecturapp CPAR PTCOMA

    ID              shift and go to state 124


state 91

    (62) escritura -> WRITE APAR . escriturap escriturapp CPAR PTCOMA
    (63) escriturap -> . STRING
    (64) escriturap -> . exp
    (65) escriturap -> . expbool
    (66) escriturap -> . CTEC
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    STRING          shift and go to state 126
    CTEC            shift and go to state 129
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    escriturap                     shift and go to state 125
    exp                            shift and go to state 127
    expbool                        shift and go to state 128
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 92

    (69) cond -> IF APAR . condp CPAR THEN ALLA estatutos CLLA condpp
    (70) condp -> . expbool
    (71) condp -> . TRUE
    (72) condp -> . FALSE
    (94) expbool -> . exp expboolp exp expboolpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    TRUE            shift and go to state 132
    FALSE           shift and go to state 133
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    condp                          shift and go to state 130
    expbool                        shift and go to state 131
    exp                            shift and go to state 134
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 93

    (75) while -> WHILE APAR . condp CPAR DO ALLA estatutos CLLA
    (70) condp -> . expbool
    (71) condp -> . TRUE
    (72) condp -> . FALSE
    (94) expbool -> . exp expboolp exp expboolpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    TRUE            shift and go to state 132
    FALSE           shift and go to state 133
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    condp                          shift and go to state 135
    expbool                        shift and go to state 131
    exp                            shift and go to state 134
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 94

    (76) for -> FOR ID . ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 137
    IGUAL           reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 136
    empty                          shift and go to state 138

state 95

    (77) exp -> termino expp .

    ID              reduce using rule 77 (exp -> termino expp .)
    RETURN          reduce using rule 77 (exp -> termino expp .)
    READ            reduce using rule 77 (exp -> termino expp .)
    WRITE           reduce using rule 77 (exp -> termino expp .)
    IF              reduce using rule 77 (exp -> termino expp .)
    WHILE           reduce using rule 77 (exp -> termino expp .)
    FOR             reduce using rule 77 (exp -> termino expp .)
    APAR            reduce using rule 77 (exp -> termino expp .)
    CTEI            reduce using rule 77 (exp -> termino expp .)
    CTEF            reduce using rule 77 (exp -> termino expp .)
    CLLA            reduce using rule 77 (exp -> termino expp .)
    CPAR            reduce using rule 77 (exp -> termino expp .)
    COMA            reduce using rule 77 (exp -> termino expp .)
    MAYQ            reduce using rule 77 (exp -> termino expp .)
    MENQ            reduce using rule 77 (exp -> termino expp .)
    MAYI            reduce using rule 77 (exp -> termino expp .)
    MENI            reduce using rule 77 (exp -> termino expp .)
    IGUALIGUAL      reduce using rule 77 (exp -> termino expp .)
    DIF             reduce using rule 77 (exp -> termino expp .)
    CCOR            reduce using rule 77 (exp -> termino expp .)
    PTCOMA          reduce using rule 77 (exp -> termino expp .)
    AND             reduce using rule 77 (exp -> termino expp .)
    OR              reduce using rule 77 (exp -> termino expp .)
    NOT             reduce using rule 77 (exp -> termino expp .)
    TO              reduce using rule 77 (exp -> termino expp .)
    DO              reduce using rule 77 (exp -> termino expp .)


state 96

    (78) expp -> MAS . exp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 139
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 97

    (79) expp -> MENOS . exp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 140
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 98

    (80) expp -> empty .

    ID              reduce using rule 80 (expp -> empty .)
    RETURN          reduce using rule 80 (expp -> empty .)
    READ            reduce using rule 80 (expp -> empty .)
    WRITE           reduce using rule 80 (expp -> empty .)
    IF              reduce using rule 80 (expp -> empty .)
    WHILE           reduce using rule 80 (expp -> empty .)
    FOR             reduce using rule 80 (expp -> empty .)
    APAR            reduce using rule 80 (expp -> empty .)
    CTEI            reduce using rule 80 (expp -> empty .)
    CTEF            reduce using rule 80 (expp -> empty .)
    CLLA            reduce using rule 80 (expp -> empty .)
    CPAR            reduce using rule 80 (expp -> empty .)
    COMA            reduce using rule 80 (expp -> empty .)
    MAYQ            reduce using rule 80 (expp -> empty .)
    MENQ            reduce using rule 80 (expp -> empty .)
    MAYI            reduce using rule 80 (expp -> empty .)
    MENI            reduce using rule 80 (expp -> empty .)
    IGUALIGUAL      reduce using rule 80 (expp -> empty .)
    DIF             reduce using rule 80 (expp -> empty .)
    CCOR            reduce using rule 80 (expp -> empty .)
    PTCOMA          reduce using rule 80 (expp -> empty .)
    AND             reduce using rule 80 (expp -> empty .)
    OR              reduce using rule 80 (expp -> empty .)
    NOT             reduce using rule 80 (expp -> empty .)
    TO              reduce using rule 80 (expp -> empty .)
    DO              reduce using rule 80 (expp -> empty .)


state 99

    (81) termino -> factor terminop .

    MAS             reduce using rule 81 (termino -> factor terminop .)
    MENOS           reduce using rule 81 (termino -> factor terminop .)
    ID              reduce using rule 81 (termino -> factor terminop .)
    RETURN          reduce using rule 81 (termino -> factor terminop .)
    READ            reduce using rule 81 (termino -> factor terminop .)
    WRITE           reduce using rule 81 (termino -> factor terminop .)
    IF              reduce using rule 81 (termino -> factor terminop .)
    WHILE           reduce using rule 81 (termino -> factor terminop .)
    FOR             reduce using rule 81 (termino -> factor terminop .)
    APAR            reduce using rule 81 (termino -> factor terminop .)
    CTEI            reduce using rule 81 (termino -> factor terminop .)
    CTEF            reduce using rule 81 (termino -> factor terminop .)
    CLLA            reduce using rule 81 (termino -> factor terminop .)
    CPAR            reduce using rule 81 (termino -> factor terminop .)
    COMA            reduce using rule 81 (termino -> factor terminop .)
    MAYQ            reduce using rule 81 (termino -> factor terminop .)
    MENQ            reduce using rule 81 (termino -> factor terminop .)
    MAYI            reduce using rule 81 (termino -> factor terminop .)
    MENI            reduce using rule 81 (termino -> factor terminop .)
    IGUALIGUAL      reduce using rule 81 (termino -> factor terminop .)
    DIF             reduce using rule 81 (termino -> factor terminop .)
    CCOR            reduce using rule 81 (termino -> factor terminop .)
    PTCOMA          reduce using rule 81 (termino -> factor terminop .)
    AND             reduce using rule 81 (termino -> factor terminop .)
    OR              reduce using rule 81 (termino -> factor terminop .)
    NOT             reduce using rule 81 (termino -> factor terminop .)
    TO              reduce using rule 81 (termino -> factor terminop .)
    DO              reduce using rule 81 (termino -> factor terminop .)


state 100

    (82) terminop -> POR . termino
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    termino                        shift and go to state 141
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 101

    (83) terminop -> DIV . termino
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    termino                        shift and go to state 142
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 102

    (84) terminop -> empty .

    MAS             reduce using rule 84 (terminop -> empty .)
    MENOS           reduce using rule 84 (terminop -> empty .)
    ID              reduce using rule 84 (terminop -> empty .)
    RETURN          reduce using rule 84 (terminop -> empty .)
    READ            reduce using rule 84 (terminop -> empty .)
    WRITE           reduce using rule 84 (terminop -> empty .)
    IF              reduce using rule 84 (terminop -> empty .)
    WHILE           reduce using rule 84 (terminop -> empty .)
    FOR             reduce using rule 84 (terminop -> empty .)
    APAR            reduce using rule 84 (terminop -> empty .)
    CTEI            reduce using rule 84 (terminop -> empty .)
    CTEF            reduce using rule 84 (terminop -> empty .)
    CLLA            reduce using rule 84 (terminop -> empty .)
    CPAR            reduce using rule 84 (terminop -> empty .)
    COMA            reduce using rule 84 (terminop -> empty .)
    MAYQ            reduce using rule 84 (terminop -> empty .)
    MENQ            reduce using rule 84 (terminop -> empty .)
    MAYI            reduce using rule 84 (terminop -> empty .)
    MENI            reduce using rule 84 (terminop -> empty .)
    IGUALIGUAL      reduce using rule 84 (terminop -> empty .)
    DIF             reduce using rule 84 (terminop -> empty .)
    CCOR            reduce using rule 84 (terminop -> empty .)
    PTCOMA          reduce using rule 84 (terminop -> empty .)
    AND             reduce using rule 84 (terminop -> empty .)
    OR              reduce using rule 84 (terminop -> empty .)
    NOT             reduce using rule 84 (terminop -> empty .)
    TO              reduce using rule 84 (terminop -> empty .)
    DO              reduce using rule 84 (terminop -> empty .)


state 103

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA . varss ALLA estatutos CLLA funcs
    (2) varss -> . VARS vars
    (3) varss -> . empty
    (108) empty -> .

    VARS            shift and go to state 6
    ALLA            reduce using rule 108 (empty -> .)

    varss                          shift and go to state 143
    empty                          shift and go to state 7

state 104

    (31) params -> tipo DOSPNTS ID . ididx paramsp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 137
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 144
    empty                          shift and go to state 138

state 105

    (35) asig -> ID ididx IGUAL . asigpp PTCOMA
    (43) asigpp -> . exp
    (44) asigpp -> . expbool
    (45) asigpp -> . CTEC
    (46) asigpp -> . STRING
    (47) asigpp -> . ACOR asigp CCOR
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 121
    STRING          shift and go to state 122
    ACOR            shift and go to state 123
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigpp                         shift and go to state 145
    exp                            shift and go to state 119
    expbool                        shift and go to state 120
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 106

    (105) ctes -> ID . factorp
    (86) factor -> ID . factorp
    (88) factorp -> .
    (89) factorp -> . APAR exp factorpp CPAR
    (90) factorp -> . ACOR exp CCOR
    (91) factorp -> . empty
    (108) empty -> .

  ! reduce/reduce conflict for COMA resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for CPAR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for POR resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for DIV resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAS resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENOS resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAYQ resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENQ resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MAYI resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for MENI resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 88 (factorp -> .)
  ! reduce/reduce conflict for DIF resolved using rule 88 (factorp -> .)
    COMA            reduce using rule 88 (factorp -> .)
    CPAR            reduce using rule 88 (factorp -> .)
    POR             reduce using rule 88 (factorp -> .)
    DIV             reduce using rule 88 (factorp -> .)
    MAS             reduce using rule 88 (factorp -> .)
    MENOS           reduce using rule 88 (factorp -> .)
    MAYQ            reduce using rule 88 (factorp -> .)
    MENQ            reduce using rule 88 (factorp -> .)
    MAYI            reduce using rule 88 (factorp -> .)
    MENI            reduce using rule 88 (factorp -> .)
    IGUALIGUAL      reduce using rule 88 (factorp -> .)
    DIF             reduce using rule 88 (factorp -> .)
    APAR            shift and go to state 115
    ACOR            shift and go to state 116

  ! COMA            [ reduce using rule 108 (empty -> .) ]
  ! CPAR            [ reduce using rule 108 (empty -> .) ]
  ! POR             [ reduce using rule 108 (empty -> .) ]
  ! DIV             [ reduce using rule 108 (empty -> .) ]
  ! MAS             [ reduce using rule 108 (empty -> .) ]
  ! MENOS           [ reduce using rule 108 (empty -> .) ]
  ! MAYQ            [ reduce using rule 108 (empty -> .) ]
  ! MENQ            [ reduce using rule 108 (empty -> .) ]
  ! MAYI            [ reduce using rule 108 (empty -> .) ]
  ! MENI            [ reduce using rule 108 (empty -> .) ]
  ! IGUALIGUAL      [ reduce using rule 108 (empty -> .) ]
  ! DIF             [ reduce using rule 108 (empty -> .) ]

    factorp                        shift and go to state 146
    empty                          shift and go to state 117

state 107

    (50) llamada -> ID APAR args . CPAR PTCOMA

    CPAR            shift and go to state 147


state 108

    (89) factorp -> APAR exp . factorpp CPAR
    (52) args -> exp . argsp
    (94) expbool -> exp . expboolp exp expboolpp
    (92) factorpp -> . COMA exp factorpp
    (93) factorpp -> . empty
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF
    (108) empty -> .

    COMA            shift and go to state 151
    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 148
    argsp                          shift and go to state 149
    expboolp                       shift and go to state 150
    empty                          shift and go to state 152

state 109

    (51) args -> ctes . argsp
    (87) factor -> ctes .
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (108) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for CPAR resolved using rule 87 (factor -> ctes .)
    POR             reduce using rule 87 (factor -> ctes .)
    DIV             reduce using rule 87 (factor -> ctes .)
    MAS             reduce using rule 87 (factor -> ctes .)
    MENOS           reduce using rule 87 (factor -> ctes .)
    MAYQ            reduce using rule 87 (factor -> ctes .)
    MENQ            reduce using rule 87 (factor -> ctes .)
    MAYI            reduce using rule 87 (factor -> ctes .)
    MENI            reduce using rule 87 (factor -> ctes .)
    IGUALIGUAL      reduce using rule 87 (factor -> ctes .)
    DIF             reduce using rule 87 (factor -> ctes .)
    CPAR            reduce using rule 87 (factor -> ctes .)
    COMA            shift and go to state 160

  ! COMA            [ reduce using rule 87 (factor -> ctes .) ]
  ! CPAR            [ reduce using rule 108 (empty -> .) ]

    argsp                          shift and go to state 159
    empty                          shift and go to state 161

state 110

    (53) args -> expbool . argsp
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 160
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 162
    empty                          shift and go to state 161

state 111

    (54) args -> STRING . argsp
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 160
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 163
    empty                          shift and go to state 161

state 112

    (55) args -> CTEC . argsp
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 160
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 164
    empty                          shift and go to state 161

state 113

    (48) ididx -> ACOR exp . CCOR
    (90) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 165


state 114

    (85) factor -> APAR exp CPAR .

    POR             reduce using rule 85 (factor -> APAR exp CPAR .)
    DIV             reduce using rule 85 (factor -> APAR exp CPAR .)
    MAS             reduce using rule 85 (factor -> APAR exp CPAR .)
    MENOS           reduce using rule 85 (factor -> APAR exp CPAR .)
    ID              reduce using rule 85 (factor -> APAR exp CPAR .)
    RETURN          reduce using rule 85 (factor -> APAR exp CPAR .)
    READ            reduce using rule 85 (factor -> APAR exp CPAR .)
    WRITE           reduce using rule 85 (factor -> APAR exp CPAR .)
    IF              reduce using rule 85 (factor -> APAR exp CPAR .)
    WHILE           reduce using rule 85 (factor -> APAR exp CPAR .)
    FOR             reduce using rule 85 (factor -> APAR exp CPAR .)
    APAR            reduce using rule 85 (factor -> APAR exp CPAR .)
    CTEI            reduce using rule 85 (factor -> APAR exp CPAR .)
    CTEF            reduce using rule 85 (factor -> APAR exp CPAR .)
    CLLA            reduce using rule 85 (factor -> APAR exp CPAR .)
    CPAR            reduce using rule 85 (factor -> APAR exp CPAR .)
    COMA            reduce using rule 85 (factor -> APAR exp CPAR .)
    MAYQ            reduce using rule 85 (factor -> APAR exp CPAR .)
    MENQ            reduce using rule 85 (factor -> APAR exp CPAR .)
    MAYI            reduce using rule 85 (factor -> APAR exp CPAR .)
    MENI            reduce using rule 85 (factor -> APAR exp CPAR .)
    IGUALIGUAL      reduce using rule 85 (factor -> APAR exp CPAR .)
    DIF             reduce using rule 85 (factor -> APAR exp CPAR .)
    CCOR            reduce using rule 85 (factor -> APAR exp CPAR .)
    PTCOMA          reduce using rule 85 (factor -> APAR exp CPAR .)
    AND             reduce using rule 85 (factor -> APAR exp CPAR .)
    OR              reduce using rule 85 (factor -> APAR exp CPAR .)
    NOT             reduce using rule 85 (factor -> APAR exp CPAR .)
    TO              reduce using rule 85 (factor -> APAR exp CPAR .)
    DO              reduce using rule 85 (factor -> APAR exp CPAR .)


state 115

    (89) factorp -> APAR . exp factorpp CPAR
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 166
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 116

    (90) factorp -> ACOR . exp CCOR
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 167
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 117

    (91) factorp -> empty .

    POR             reduce using rule 91 (factorp -> empty .)
    DIV             reduce using rule 91 (factorp -> empty .)
    MAS             reduce using rule 91 (factorp -> empty .)
    MENOS           reduce using rule 91 (factorp -> empty .)
    CPAR            reduce using rule 91 (factorp -> empty .)
    CCOR            reduce using rule 91 (factorp -> empty .)
    MAYQ            reduce using rule 91 (factorp -> empty .)
    MENQ            reduce using rule 91 (factorp -> empty .)
    MAYI            reduce using rule 91 (factorp -> empty .)
    MENI            reduce using rule 91 (factorp -> empty .)
    IGUALIGUAL      reduce using rule 91 (factorp -> empty .)
    DIF             reduce using rule 91 (factorp -> empty .)
    COMA            reduce using rule 91 (factorp -> empty .)
    ID              reduce using rule 91 (factorp -> empty .)
    RETURN          reduce using rule 91 (factorp -> empty .)
    READ            reduce using rule 91 (factorp -> empty .)
    WRITE           reduce using rule 91 (factorp -> empty .)
    IF              reduce using rule 91 (factorp -> empty .)
    WHILE           reduce using rule 91 (factorp -> empty .)
    FOR             reduce using rule 91 (factorp -> empty .)
    APAR            reduce using rule 91 (factorp -> empty .)
    CTEI            reduce using rule 91 (factorp -> empty .)
    CTEF            reduce using rule 91 (factorp -> empty .)
    CLLA            reduce using rule 91 (factorp -> empty .)
    PTCOMA          reduce using rule 91 (factorp -> empty .)
    AND             reduce using rule 91 (factorp -> empty .)
    OR              reduce using rule 91 (factorp -> empty .)
    NOT             reduce using rule 91 (factorp -> empty .)
    TO              reduce using rule 91 (factorp -> empty .)
    DO              reduce using rule 91 (factorp -> empty .)


state 118

    (58) return -> RETURN APAR asigpp . CPAR PTCOMA

    CPAR            shift and go to state 168


state 119

    (43) asigpp -> exp .
    (94) expbool -> exp . expboolp exp expboolpp
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF

    CPAR            reduce using rule 43 (asigpp -> exp .)
    PTCOMA          reduce using rule 43 (asigpp -> exp .)
    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158

    expboolp                       shift and go to state 150

state 120

    (44) asigpp -> expbool .

    CPAR            reduce using rule 44 (asigpp -> expbool .)
    PTCOMA          reduce using rule 44 (asigpp -> expbool .)


state 121

    (45) asigpp -> CTEC .

    CPAR            reduce using rule 45 (asigpp -> CTEC .)
    PTCOMA          reduce using rule 45 (asigpp -> CTEC .)


state 122

    (46) asigpp -> STRING .

    CPAR            reduce using rule 46 (asigpp -> STRING .)
    PTCOMA          reduce using rule 46 (asigpp -> STRING .)


state 123

    (47) asigpp -> ACOR . asigp CCOR
    (36) asigp -> . exp asigppp
    (37) asigp -> . expbool asigppp
    (38) asigp -> . CTEC asigppp
    (39) asigp -> . STRING asigppp
    (40) asigp -> . empty
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (108) empty -> .
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 172
    STRING          shift and go to state 173
    CCOR            reduce using rule 108 (empty -> .)
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigp                          shift and go to state 169
    exp                            shift and go to state 170
    expbool                        shift and go to state 171
    empty                          shift and go to state 174
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 124

    (59) lectura -> READ APAR ID . ididx lecturapp CPAR PTCOMA
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 137
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 175
    empty                          shift and go to state 138

state 125

    (62) escritura -> WRITE APAR escriturap . escriturapp CPAR PTCOMA
    (67) escriturapp -> . COMA escriturap
    (68) escriturapp -> . empty
    (108) empty -> .

    COMA            shift and go to state 177
    CPAR            reduce using rule 108 (empty -> .)

    escriturapp                    shift and go to state 176
    empty                          shift and go to state 178

state 126

    (63) escriturap -> STRING .

    COMA            reduce using rule 63 (escriturap -> STRING .)
    CPAR            reduce using rule 63 (escriturap -> STRING .)


state 127

    (64) escriturap -> exp .
    (94) expbool -> exp . expboolp exp expboolpp
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF

    COMA            reduce using rule 64 (escriturap -> exp .)
    CPAR            reduce using rule 64 (escriturap -> exp .)
    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158

    expboolp                       shift and go to state 150

state 128

    (65) escriturap -> expbool .

    COMA            reduce using rule 65 (escriturap -> expbool .)
    CPAR            reduce using rule 65 (escriturap -> expbool .)


state 129

    (66) escriturap -> CTEC .

    COMA            reduce using rule 66 (escriturap -> CTEC .)
    CPAR            reduce using rule 66 (escriturap -> CTEC .)


state 130

    (69) cond -> IF APAR condp . CPAR THEN ALLA estatutos CLLA condpp

    CPAR            shift and go to state 179


state 131

    (70) condp -> expbool .

    CPAR            reduce using rule 70 (condp -> expbool .)


state 132

    (71) condp -> TRUE .

    CPAR            reduce using rule 71 (condp -> TRUE .)


state 133

    (72) condp -> FALSE .

    CPAR            reduce using rule 72 (condp -> FALSE .)


state 134

    (94) expbool -> exp . expboolp exp expboolpp
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF

    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158

    expboolp                       shift and go to state 150

state 135

    (75) while -> WHILE APAR condp . CPAR DO ALLA estatutos CLLA

    CPAR            shift and go to state 180


state 136

    (76) for -> FOR ID ididx . IGUAL exp TO exp DO ALLA estatutos CLLA

    IGUAL           shift and go to state 181


state 137

    (48) ididx -> ACOR . exp CCOR
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 182
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 138

    (49) ididx -> empty .

    IGUAL           reduce using rule 49 (ididx -> empty .)
    COMA            reduce using rule 49 (ididx -> empty .)
    CPAR            reduce using rule 49 (ididx -> empty .)


state 139

    (78) expp -> MAS exp .

    ID              reduce using rule 78 (expp -> MAS exp .)
    RETURN          reduce using rule 78 (expp -> MAS exp .)
    READ            reduce using rule 78 (expp -> MAS exp .)
    WRITE           reduce using rule 78 (expp -> MAS exp .)
    IF              reduce using rule 78 (expp -> MAS exp .)
    WHILE           reduce using rule 78 (expp -> MAS exp .)
    FOR             reduce using rule 78 (expp -> MAS exp .)
    APAR            reduce using rule 78 (expp -> MAS exp .)
    CTEI            reduce using rule 78 (expp -> MAS exp .)
    CTEF            reduce using rule 78 (expp -> MAS exp .)
    CLLA            reduce using rule 78 (expp -> MAS exp .)
    CPAR            reduce using rule 78 (expp -> MAS exp .)
    COMA            reduce using rule 78 (expp -> MAS exp .)
    MAYQ            reduce using rule 78 (expp -> MAS exp .)
    MENQ            reduce using rule 78 (expp -> MAS exp .)
    MAYI            reduce using rule 78 (expp -> MAS exp .)
    MENI            reduce using rule 78 (expp -> MAS exp .)
    IGUALIGUAL      reduce using rule 78 (expp -> MAS exp .)
    DIF             reduce using rule 78 (expp -> MAS exp .)
    CCOR            reduce using rule 78 (expp -> MAS exp .)
    PTCOMA          reduce using rule 78 (expp -> MAS exp .)
    AND             reduce using rule 78 (expp -> MAS exp .)
    OR              reduce using rule 78 (expp -> MAS exp .)
    NOT             reduce using rule 78 (expp -> MAS exp .)
    TO              reduce using rule 78 (expp -> MAS exp .)
    DO              reduce using rule 78 (expp -> MAS exp .)


state 140

    (79) expp -> MENOS exp .

    ID              reduce using rule 79 (expp -> MENOS exp .)
    RETURN          reduce using rule 79 (expp -> MENOS exp .)
    READ            reduce using rule 79 (expp -> MENOS exp .)
    WRITE           reduce using rule 79 (expp -> MENOS exp .)
    IF              reduce using rule 79 (expp -> MENOS exp .)
    WHILE           reduce using rule 79 (expp -> MENOS exp .)
    FOR             reduce using rule 79 (expp -> MENOS exp .)
    APAR            reduce using rule 79 (expp -> MENOS exp .)
    CTEI            reduce using rule 79 (expp -> MENOS exp .)
    CTEF            reduce using rule 79 (expp -> MENOS exp .)
    CLLA            reduce using rule 79 (expp -> MENOS exp .)
    CPAR            reduce using rule 79 (expp -> MENOS exp .)
    COMA            reduce using rule 79 (expp -> MENOS exp .)
    MAYQ            reduce using rule 79 (expp -> MENOS exp .)
    MENQ            reduce using rule 79 (expp -> MENOS exp .)
    MAYI            reduce using rule 79 (expp -> MENOS exp .)
    MENI            reduce using rule 79 (expp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 79 (expp -> MENOS exp .)
    DIF             reduce using rule 79 (expp -> MENOS exp .)
    CCOR            reduce using rule 79 (expp -> MENOS exp .)
    PTCOMA          reduce using rule 79 (expp -> MENOS exp .)
    AND             reduce using rule 79 (expp -> MENOS exp .)
    OR              reduce using rule 79 (expp -> MENOS exp .)
    NOT             reduce using rule 79 (expp -> MENOS exp .)
    TO              reduce using rule 79 (expp -> MENOS exp .)
    DO              reduce using rule 79 (expp -> MENOS exp .)


state 141

    (82) terminop -> POR termino .

    MAS             reduce using rule 82 (terminop -> POR termino .)
    MENOS           reduce using rule 82 (terminop -> POR termino .)
    ID              reduce using rule 82 (terminop -> POR termino .)
    RETURN          reduce using rule 82 (terminop -> POR termino .)
    READ            reduce using rule 82 (terminop -> POR termino .)
    WRITE           reduce using rule 82 (terminop -> POR termino .)
    IF              reduce using rule 82 (terminop -> POR termino .)
    WHILE           reduce using rule 82 (terminop -> POR termino .)
    FOR             reduce using rule 82 (terminop -> POR termino .)
    APAR            reduce using rule 82 (terminop -> POR termino .)
    CTEI            reduce using rule 82 (terminop -> POR termino .)
    CTEF            reduce using rule 82 (terminop -> POR termino .)
    CLLA            reduce using rule 82 (terminop -> POR termino .)
    CPAR            reduce using rule 82 (terminop -> POR termino .)
    COMA            reduce using rule 82 (terminop -> POR termino .)
    MAYQ            reduce using rule 82 (terminop -> POR termino .)
    MENQ            reduce using rule 82 (terminop -> POR termino .)
    MAYI            reduce using rule 82 (terminop -> POR termino .)
    MENI            reduce using rule 82 (terminop -> POR termino .)
    IGUALIGUAL      reduce using rule 82 (terminop -> POR termino .)
    DIF             reduce using rule 82 (terminop -> POR termino .)
    CCOR            reduce using rule 82 (terminop -> POR termino .)
    PTCOMA          reduce using rule 82 (terminop -> POR termino .)
    AND             reduce using rule 82 (terminop -> POR termino .)
    OR              reduce using rule 82 (terminop -> POR termino .)
    NOT             reduce using rule 82 (terminop -> POR termino .)
    TO              reduce using rule 82 (terminop -> POR termino .)
    DO              reduce using rule 82 (terminop -> POR termino .)


state 142

    (83) terminop -> DIV termino .

    MAS             reduce using rule 83 (terminop -> DIV termino .)
    MENOS           reduce using rule 83 (terminop -> DIV termino .)
    ID              reduce using rule 83 (terminop -> DIV termino .)
    RETURN          reduce using rule 83 (terminop -> DIV termino .)
    READ            reduce using rule 83 (terminop -> DIV termino .)
    WRITE           reduce using rule 83 (terminop -> DIV termino .)
    IF              reduce using rule 83 (terminop -> DIV termino .)
    WHILE           reduce using rule 83 (terminop -> DIV termino .)
    FOR             reduce using rule 83 (terminop -> DIV termino .)
    APAR            reduce using rule 83 (terminop -> DIV termino .)
    CTEI            reduce using rule 83 (terminop -> DIV termino .)
    CTEF            reduce using rule 83 (terminop -> DIV termino .)
    CLLA            reduce using rule 83 (terminop -> DIV termino .)
    CPAR            reduce using rule 83 (terminop -> DIV termino .)
    COMA            reduce using rule 83 (terminop -> DIV termino .)
    MAYQ            reduce using rule 83 (terminop -> DIV termino .)
    MENQ            reduce using rule 83 (terminop -> DIV termino .)
    MAYI            reduce using rule 83 (terminop -> DIV termino .)
    MENI            reduce using rule 83 (terminop -> DIV termino .)
    IGUALIGUAL      reduce using rule 83 (terminop -> DIV termino .)
    DIF             reduce using rule 83 (terminop -> DIV termino .)
    CCOR            reduce using rule 83 (terminop -> DIV termino .)
    PTCOMA          reduce using rule 83 (terminop -> DIV termino .)
    AND             reduce using rule 83 (terminop -> DIV termino .)
    OR              reduce using rule 83 (terminop -> DIV termino .)
    NOT             reduce using rule 83 (terminop -> DIV termino .)
    TO              reduce using rule 83 (terminop -> DIV termino .)
    DO              reduce using rule 83 (terminop -> DIV termino .)


state 143

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss . ALLA estatutos CLLA funcs

    ALLA            shift and go to state 183


state 144

    (31) params -> tipo DOSPNTS ID ididx . paramsp
    (33) paramsp -> . COMA params
    (34) paramsp -> . empty
    (108) empty -> .

    COMA            shift and go to state 185
    CPAR            reduce using rule 108 (empty -> .)

    paramsp                        shift and go to state 184
    empty                          shift and go to state 186

state 145

    (35) asig -> ID ididx IGUAL asigpp . PTCOMA

    PTCOMA          shift and go to state 187


state 146

    (105) ctes -> ID factorp .
    (86) factor -> ID factorp .

  ! reduce/reduce conflict for POR resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIV resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAS resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENOS resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for COMA resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYQ resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENQ resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MAYI resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for MENI resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for DIF resolved using rule 86 (factor -> ID factorp .)
  ! reduce/reduce conflict for CPAR resolved using rule 86 (factor -> ID factorp .)
    POR             reduce using rule 86 (factor -> ID factorp .)
    DIV             reduce using rule 86 (factor -> ID factorp .)
    MAS             reduce using rule 86 (factor -> ID factorp .)
    MENOS           reduce using rule 86 (factor -> ID factorp .)
    COMA            reduce using rule 86 (factor -> ID factorp .)
    MAYQ            reduce using rule 86 (factor -> ID factorp .)
    MENQ            reduce using rule 86 (factor -> ID factorp .)
    MAYI            reduce using rule 86 (factor -> ID factorp .)
    MENI            reduce using rule 86 (factor -> ID factorp .)
    IGUALIGUAL      reduce using rule 86 (factor -> ID factorp .)
    DIF             reduce using rule 86 (factor -> ID factorp .)
    CPAR            reduce using rule 86 (factor -> ID factorp .)

  ! COMA            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! CPAR            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! POR             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIV             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAS             [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENOS           [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENQ            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MAYI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! MENI            [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! IGUALIGUAL      [ reduce using rule 105 (ctes -> ID factorp .) ]
  ! DIF             [ reduce using rule 105 (ctes -> ID factorp .) ]


state 147

    (50) llamada -> ID APAR args CPAR . PTCOMA

    PTCOMA          shift and go to state 188


state 148

    (89) factorp -> APAR exp factorpp . CPAR

    CPAR            shift and go to state 189


state 149

    (52) args -> exp argsp .

    CPAR            reduce using rule 52 (args -> exp argsp .)


state 150

    (94) expbool -> exp expboolp . exp expboolpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 190
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 151

    (92) factorpp -> COMA . exp factorpp
    (56) argsp -> COMA . args
    (77) exp -> . termino expp
    (51) args -> . ctes argsp
    (52) args -> . exp argsp
    (53) args -> . expbool argsp
    (54) args -> . STRING argsp
    (55) args -> . CTEC argsp
    (81) termino -> . factor terminop
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF
    (94) expbool -> . exp expboolp exp expboolpp
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes

    STRING          shift and go to state 111
    CTEC            shift and go to state 112
    ID              shift and go to state 106
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65
    APAR            shift and go to state 44

    exp                            shift and go to state 191
    args                           shift and go to state 192
    termino                        shift and go to state 61
    ctes                           shift and go to state 109
    expbool                        shift and go to state 110
    factor                         shift and go to state 62

state 152

    (93) factorpp -> empty .
    (57) argsp -> empty .

  ! reduce/reduce conflict for CPAR resolved using rule 57 (argsp -> empty .)
    CPAR            reduce using rule 57 (argsp -> empty .)

  ! CPAR            [ reduce using rule 93 (factorpp -> empty .) ]


state 153

    (95) expboolp -> MAYQ .

    APAR            reduce using rule 95 (expboolp -> MAYQ .)
    ID              reduce using rule 95 (expboolp -> MAYQ .)
    CTEI            reduce using rule 95 (expboolp -> MAYQ .)
    CTEF            reduce using rule 95 (expboolp -> MAYQ .)


state 154

    (96) expboolp -> MENQ .

    APAR            reduce using rule 96 (expboolp -> MENQ .)
    ID              reduce using rule 96 (expboolp -> MENQ .)
    CTEI            reduce using rule 96 (expboolp -> MENQ .)
    CTEF            reduce using rule 96 (expboolp -> MENQ .)


state 155

    (97) expboolp -> MAYI .

    APAR            reduce using rule 97 (expboolp -> MAYI .)
    ID              reduce using rule 97 (expboolp -> MAYI .)
    CTEI            reduce using rule 97 (expboolp -> MAYI .)
    CTEF            reduce using rule 97 (expboolp -> MAYI .)


state 156

    (98) expboolp -> MENI .

    APAR            reduce using rule 98 (expboolp -> MENI .)
    ID              reduce using rule 98 (expboolp -> MENI .)
    CTEI            reduce using rule 98 (expboolp -> MENI .)
    CTEF            reduce using rule 98 (expboolp -> MENI .)


state 157

    (99) expboolp -> IGUALIGUAL .

    APAR            reduce using rule 99 (expboolp -> IGUALIGUAL .)
    ID              reduce using rule 99 (expboolp -> IGUALIGUAL .)
    CTEI            reduce using rule 99 (expboolp -> IGUALIGUAL .)
    CTEF            reduce using rule 99 (expboolp -> IGUALIGUAL .)


state 158

    (100) expboolp -> DIF .

    APAR            reduce using rule 100 (expboolp -> DIF .)
    ID              reduce using rule 100 (expboolp -> DIF .)
    CTEI            reduce using rule 100 (expboolp -> DIF .)
    CTEF            reduce using rule 100 (expboolp -> DIF .)


state 159

    (51) args -> ctes argsp .

    CPAR            reduce using rule 51 (args -> ctes argsp .)


state 160

    (56) argsp -> COMA . args
    (51) args -> . ctes argsp
    (52) args -> . exp argsp
    (53) args -> . expbool argsp
    (54) args -> . STRING argsp
    (55) args -> . CTEC argsp
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes

    STRING          shift and go to state 111
    CTEC            shift and go to state 112
    ID              shift and go to state 106
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65
    APAR            shift and go to state 44

    args                           shift and go to state 192
    ctes                           shift and go to state 109
    exp                            shift and go to state 193
    expbool                        shift and go to state 110
    termino                        shift and go to state 61
    factor                         shift and go to state 62

state 161

    (57) argsp -> empty .

    CPAR            reduce using rule 57 (argsp -> empty .)


state 162

    (53) args -> expbool argsp .

    CPAR            reduce using rule 53 (args -> expbool argsp .)


state 163

    (54) args -> STRING argsp .

    CPAR            reduce using rule 54 (args -> STRING argsp .)


state 164

    (55) args -> CTEC argsp .

    CPAR            reduce using rule 55 (args -> CTEC argsp .)


state 165

    (48) ididx -> ACOR exp CCOR .
    (90) factorp -> ACOR exp CCOR .

    IGUAL           reduce using rule 48 (ididx -> ACOR exp CCOR .)
    POR             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    DIV             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 90 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 90 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 90 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 90 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 90 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 90 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 90 (factorp -> ACOR exp CCOR .)


state 166

    (89) factorp -> APAR exp . factorpp CPAR
    (92) factorpp -> . COMA exp factorpp
    (93) factorpp -> . empty
    (108) empty -> .

    COMA            shift and go to state 194
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 148
    empty                          shift and go to state 195

state 167

    (90) factorp -> ACOR exp . CCOR

    CCOR            shift and go to state 196


state 168

    (58) return -> RETURN APAR asigpp CPAR . PTCOMA

    PTCOMA          shift and go to state 197


state 169

    (47) asigpp -> ACOR asigp . CCOR

    CCOR            shift and go to state 198


state 170

    (36) asigp -> exp . asigppp
    (94) expbool -> exp . expboolp exp expboolpp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF
    (108) empty -> .

    COMA            shift and go to state 200
    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 199
    expboolp                       shift and go to state 150
    empty                          shift and go to state 201

state 171

    (37) asigp -> expbool . asigppp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (108) empty -> .

    COMA            shift and go to state 200
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 202
    empty                          shift and go to state 201

state 172

    (38) asigp -> CTEC . asigppp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (108) empty -> .

    COMA            shift and go to state 200
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 203
    empty                          shift and go to state 201

state 173

    (39) asigp -> STRING . asigppp
    (41) asigppp -> . COMA asigp
    (42) asigppp -> . empty
    (108) empty -> .

    COMA            shift and go to state 200
    CCOR            reduce using rule 108 (empty -> .)

    asigppp                        shift and go to state 204
    empty                          shift and go to state 201

state 174

    (40) asigp -> empty .

    CCOR            reduce using rule 40 (asigp -> empty .)


state 175

    (59) lectura -> READ APAR ID ididx . lecturapp CPAR PTCOMA
    (60) lecturapp -> . COMA ID ididx lecturapp
    (61) lecturapp -> . empty
    (108) empty -> .

    COMA            shift and go to state 206
    CPAR            reduce using rule 108 (empty -> .)

    lecturapp                      shift and go to state 205
    empty                          shift and go to state 207

state 176

    (62) escritura -> WRITE APAR escriturap escriturapp . CPAR PTCOMA

    CPAR            shift and go to state 208


state 177

    (67) escriturapp -> COMA . escriturap
    (63) escriturap -> . STRING
    (64) escriturap -> . exp
    (65) escriturap -> . expbool
    (66) escriturap -> . CTEC
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    STRING          shift and go to state 126
    CTEC            shift and go to state 129
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    escriturap                     shift and go to state 209
    exp                            shift and go to state 127
    expbool                        shift and go to state 128
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 178

    (68) escriturapp -> empty .

    CPAR            reduce using rule 68 (escriturapp -> empty .)


state 179

    (69) cond -> IF APAR condp CPAR . THEN ALLA estatutos CLLA condpp

    THEN            shift and go to state 210


state 180

    (75) while -> WHILE APAR condp CPAR . DO ALLA estatutos CLLA

    DO              shift and go to state 211


state 181

    (76) for -> FOR ID ididx IGUAL . exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 212
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 182

    (48) ididx -> ACOR exp . CCOR

    CCOR            shift and go to state 213


state 183

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA . estatutos CLLA funcs
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 214
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 184

    (31) params -> tipo DOSPNTS ID ididx paramsp .

    CPAR            reduce using rule 31 (params -> tipo DOSPNTS ID ididx paramsp .)


state 185

    (33) paramsp -> COMA . params
    (31) params -> . tipo DOSPNTS ID ididx paramsp
    (32) params -> . empty
    (26) tipo -> . INT
    (27) tipo -> . FLOAT
    (28) tipo -> . CHAR
    (29) tipo -> . STR
    (30) tipo -> . BOOL
    (108) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    STR             shift and go to state 17
    BOOL            shift and go to state 18
    CPAR            reduce using rule 108 (empty -> .)

    params                         shift and go to state 215
    tipo                           shift and go to state 38
    empty                          shift and go to state 39

state 186

    (34) paramsp -> empty .

    CPAR            reduce using rule 34 (paramsp -> empty .)


state 187

    (35) asig -> ID ididx IGUAL asigpp PTCOMA .

    ID              reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    RETURN          reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    READ            reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    WRITE           reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    IF              reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    WHILE           reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    FOR             reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    APAR            reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CTEI            reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CTEF            reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)
    CLLA            reduce using rule 35 (asig -> ID ididx IGUAL asigpp PTCOMA .)


state 188

    (50) llamada -> ID APAR args CPAR PTCOMA .

    ID              reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    RETURN          reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    READ            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    WRITE           reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    IF              reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    WHILE           reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    FOR             reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    APAR            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEI            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    CTEF            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)
    CLLA            reduce using rule 50 (llamada -> ID APAR args CPAR PTCOMA .)


state 189

    (89) factorp -> APAR exp factorpp CPAR .

    POR             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    DIV             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    MAS             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    MENOS           reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    ID              reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    RETURN          reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    READ            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    WRITE           reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    IF              reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    WHILE           reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    FOR             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    APAR            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    CTEI            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    CTEF            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    CLLA            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    CPAR            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    CCOR            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    MAYQ            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    MENQ            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    MAYI            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    MENI            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    IGUALIGUAL      reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    DIF             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    COMA            reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    PTCOMA          reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    AND             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    OR              reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    NOT             reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    TO              reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)
    DO              reduce using rule 89 (factorp -> APAR exp factorpp CPAR .)


state 190

    (94) expbool -> exp expboolp exp . expboolpp
    (101) expboolpp -> . AND expbool
    (102) expboolpp -> . OR expbool
    (103) expboolpp -> . NOT expbool
    (104) expboolpp -> . empty
    (108) empty -> .

    AND             shift and go to state 217
    OR              shift and go to state 218
    NOT             shift and go to state 219
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)
    PTCOMA          reduce using rule 108 (empty -> .)
    CCOR            reduce using rule 108 (empty -> .)

    expboolpp                      shift and go to state 216
    empty                          shift and go to state 220

state 191

    (92) factorpp -> COMA exp . factorpp
    (52) args -> exp . argsp
    (94) expbool -> exp . expboolp exp expboolpp
    (92) factorpp -> . COMA exp factorpp
    (93) factorpp -> . empty
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF
    (108) empty -> .

    COMA            shift and go to state 151
    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 221
    argsp                          shift and go to state 149
    expboolp                       shift and go to state 150
    empty                          shift and go to state 152

state 192

    (56) argsp -> COMA args .

    CPAR            reduce using rule 56 (argsp -> COMA args .)


state 193

    (52) args -> exp . argsp
    (94) expbool -> exp . expboolp exp expboolpp
    (56) argsp -> . COMA args
    (57) argsp -> . empty
    (95) expboolp -> . MAYQ
    (96) expboolp -> . MENQ
    (97) expboolp -> . MAYI
    (98) expboolp -> . MENI
    (99) expboolp -> . IGUALIGUAL
    (100) expboolp -> . DIF
    (108) empty -> .

    COMA            shift and go to state 160
    MAYQ            shift and go to state 153
    MENQ            shift and go to state 154
    MAYI            shift and go to state 155
    MENI            shift and go to state 156
    IGUALIGUAL      shift and go to state 157
    DIF             shift and go to state 158
    CPAR            reduce using rule 108 (empty -> .)

    argsp                          shift and go to state 149
    expboolp                       shift and go to state 150
    empty                          shift and go to state 161

state 194

    (92) factorpp -> COMA . exp factorpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 222
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 195

    (93) factorpp -> empty .

    CPAR            reduce using rule 93 (factorpp -> empty .)


state 196

    (90) factorp -> ACOR exp CCOR .

    POR             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    DIV             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MAS             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MENOS           reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CPAR            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CCOR            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MAYQ            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MENQ            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MAYI            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    MENI            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    IGUALIGUAL      reduce using rule 90 (factorp -> ACOR exp CCOR .)
    DIF             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    COMA            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    ID              reduce using rule 90 (factorp -> ACOR exp CCOR .)
    RETURN          reduce using rule 90 (factorp -> ACOR exp CCOR .)
    READ            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    WRITE           reduce using rule 90 (factorp -> ACOR exp CCOR .)
    IF              reduce using rule 90 (factorp -> ACOR exp CCOR .)
    WHILE           reduce using rule 90 (factorp -> ACOR exp CCOR .)
    FOR             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    APAR            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CTEI            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CTEF            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    CLLA            reduce using rule 90 (factorp -> ACOR exp CCOR .)
    PTCOMA          reduce using rule 90 (factorp -> ACOR exp CCOR .)
    AND             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    OR              reduce using rule 90 (factorp -> ACOR exp CCOR .)
    NOT             reduce using rule 90 (factorp -> ACOR exp CCOR .)
    TO              reduce using rule 90 (factorp -> ACOR exp CCOR .)
    DO              reduce using rule 90 (factorp -> ACOR exp CCOR .)


state 197

    (58) return -> RETURN APAR asigpp CPAR PTCOMA .

    ID              reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    RETURN          reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    READ            reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    WRITE           reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    IF              reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    WHILE           reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    FOR             reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    APAR            reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CTEI            reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CTEF            reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)
    CLLA            reduce using rule 58 (return -> RETURN APAR asigpp CPAR PTCOMA .)


state 198

    (47) asigpp -> ACOR asigp CCOR .

    CPAR            reduce using rule 47 (asigpp -> ACOR asigp CCOR .)
    PTCOMA          reduce using rule 47 (asigpp -> ACOR asigp CCOR .)


state 199

    (36) asigp -> exp asigppp .

    CCOR            reduce using rule 36 (asigp -> exp asigppp .)


state 200

    (41) asigppp -> COMA . asigp
    (36) asigp -> . exp asigppp
    (37) asigp -> . expbool asigppp
    (38) asigp -> . CTEC asigppp
    (39) asigp -> . STRING asigppp
    (40) asigp -> . empty
    (77) exp -> . termino expp
    (94) expbool -> . exp expboolp exp expboolpp
    (108) empty -> .
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    CTEC            shift and go to state 172
    STRING          shift and go to state 173
    CCOR            reduce using rule 108 (empty -> .)
    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    asigp                          shift and go to state 223
    exp                            shift and go to state 170
    expbool                        shift and go to state 171
    empty                          shift and go to state 174
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 201

    (42) asigppp -> empty .

    CCOR            reduce using rule 42 (asigppp -> empty .)


state 202

    (37) asigp -> expbool asigppp .

    CCOR            reduce using rule 37 (asigp -> expbool asigppp .)


state 203

    (38) asigp -> CTEC asigppp .

    CCOR            reduce using rule 38 (asigp -> CTEC asigppp .)


state 204

    (39) asigp -> STRING asigppp .

    CCOR            reduce using rule 39 (asigp -> STRING asigppp .)


state 205

    (59) lectura -> READ APAR ID ididx lecturapp . CPAR PTCOMA

    CPAR            shift and go to state 224


state 206

    (60) lecturapp -> COMA . ID ididx lecturapp

    ID              shift and go to state 225


state 207

    (61) lecturapp -> empty .

    CPAR            reduce using rule 61 (lecturapp -> empty .)


state 208

    (62) escritura -> WRITE APAR escriturap escriturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 226


state 209

    (67) escriturapp -> COMA escriturap .

    CPAR            reduce using rule 67 (escriturapp -> COMA escriturap .)


state 210

    (69) cond -> IF APAR condp CPAR THEN . ALLA estatutos CLLA condpp

    ALLA            shift and go to state 227


state 211

    (75) while -> WHILE APAR condp CPAR DO . ALLA estatutos CLLA

    ALLA            shift and go to state 228


state 212

    (76) for -> FOR ID ididx IGUAL exp . TO exp DO ALLA estatutos CLLA

    TO              shift and go to state 229


state 213

    (48) ididx -> ACOR exp CCOR .

    IGUAL           reduce using rule 48 (ididx -> ACOR exp CCOR .)
    COMA            reduce using rule 48 (ididx -> ACOR exp CCOR .)
    CPAR            reduce using rule 48 (ididx -> ACOR exp CCOR .)


state 214

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos . CLLA funcs

    CLLA            shift and go to state 230


state 215

    (33) paramsp -> COMA params .

    CPAR            reduce using rule 33 (paramsp -> COMA params .)


state 216

    (94) expbool -> exp expboolp exp expboolpp .

    COMA            reduce using rule 94 (expbool -> exp expboolp exp expboolpp .)
    CPAR            reduce using rule 94 (expbool -> exp expboolp exp expboolpp .)
    PTCOMA          reduce using rule 94 (expbool -> exp expboolp exp expboolpp .)
    CCOR            reduce using rule 94 (expbool -> exp expboolp exp expboolpp .)


state 217

    (101) expboolpp -> AND . expbool
    (94) expbool -> . exp expboolp exp expboolpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    expbool                        shift and go to state 231
    exp                            shift and go to state 134
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 218

    (102) expboolpp -> OR . expbool
    (94) expbool -> . exp expboolp exp expboolpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    expbool                        shift and go to state 232
    exp                            shift and go to state 134
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 219

    (103) expboolpp -> NOT . expbool
    (94) expbool -> . exp expboolp exp expboolpp
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    expbool                        shift and go to state 233
    exp                            shift and go to state 134
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 220

    (104) expboolpp -> empty .

    COMA            reduce using rule 104 (expboolpp -> empty .)
    CPAR            reduce using rule 104 (expboolpp -> empty .)
    PTCOMA          reduce using rule 104 (expboolpp -> empty .)
    CCOR            reduce using rule 104 (expboolpp -> empty .)


state 221

    (92) factorpp -> COMA exp factorpp .

    CPAR            reduce using rule 92 (factorpp -> COMA exp factorpp .)


state 222

    (92) factorpp -> COMA exp . factorpp
    (92) factorpp -> . COMA exp factorpp
    (93) factorpp -> . empty
    (108) empty -> .

    COMA            shift and go to state 194
    CPAR            reduce using rule 108 (empty -> .)

    factorpp                       shift and go to state 221
    empty                          shift and go to state 195

state 223

    (41) asigppp -> COMA asigp .

    CCOR            reduce using rule 41 (asigppp -> COMA asigp .)


state 224

    (59) lectura -> READ APAR ID ididx lecturapp CPAR . PTCOMA

    PTCOMA          shift and go to state 234


state 225

    (60) lecturapp -> COMA ID . ididx lecturapp
    (48) ididx -> . ACOR exp CCOR
    (49) ididx -> . empty
    (108) empty -> .

    ACOR            shift and go to state 137
    COMA            reduce using rule 108 (empty -> .)
    CPAR            reduce using rule 108 (empty -> .)

    ididx                          shift and go to state 235
    empty                          shift and go to state 138

state 226

    (62) escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .

    ID              reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    RETURN          reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    READ            reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WRITE           reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    IF              reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    WHILE           reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    FOR             reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    APAR            reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEI            reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CTEF            reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)
    CLLA            reduce using rule 62 (escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA .)


state 227

    (69) cond -> IF APAR condp CPAR THEN ALLA . estatutos CLLA condpp
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 236
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 228

    (75) while -> WHILE APAR condp CPAR DO ALLA . estatutos CLLA
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 237
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 229

    (76) for -> FOR ID ididx IGUAL exp TO . exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    APAR            shift and go to state 44
    ID              shift and go to state 76
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 238
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 230

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA . funcs
    (11) funcs -> . FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs
    (12) funcs -> . empty
    (108) empty -> .

    FUNCTION        shift and go to state 9
    MAIN            reduce using rule 108 (empty -> .)

    funcs                          shift and go to state 239
    empty                          shift and go to state 10

state 231

    (101) expboolpp -> AND expbool .

    COMA            reduce using rule 101 (expboolpp -> AND expbool .)
    CPAR            reduce using rule 101 (expboolpp -> AND expbool .)
    PTCOMA          reduce using rule 101 (expboolpp -> AND expbool .)
    CCOR            reduce using rule 101 (expboolpp -> AND expbool .)


state 232

    (102) expboolpp -> OR expbool .

    COMA            reduce using rule 102 (expboolpp -> OR expbool .)
    CPAR            reduce using rule 102 (expboolpp -> OR expbool .)
    PTCOMA          reduce using rule 102 (expboolpp -> OR expbool .)
    CCOR            reduce using rule 102 (expboolpp -> OR expbool .)


state 233

    (103) expboolpp -> NOT expbool .

    COMA            reduce using rule 103 (expboolpp -> NOT expbool .)
    CPAR            reduce using rule 103 (expboolpp -> NOT expbool .)
    PTCOMA          reduce using rule 103 (expboolpp -> NOT expbool .)
    CCOR            reduce using rule 103 (expboolpp -> NOT expbool .)


state 234

    (59) lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .

    ID              reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    RETURN          reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    READ            reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    WRITE           reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    IF              reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    WHILE           reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    FOR             reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    APAR            reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CTEI            reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CTEF            reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)
    CLLA            reduce using rule 59 (lectura -> READ APAR ID ididx lecturapp CPAR PTCOMA .)


state 235

    (60) lecturapp -> COMA ID ididx . lecturapp
    (60) lecturapp -> . COMA ID ididx lecturapp
    (61) lecturapp -> . empty
    (108) empty -> .

    COMA            shift and go to state 206
    CPAR            reduce using rule 108 (empty -> .)

    lecturapp                      shift and go to state 240
    empty                          shift and go to state 207

state 236

    (69) cond -> IF APAR condp CPAR THEN ALLA estatutos . CLLA condpp

    CLLA            shift and go to state 241


state 237

    (75) while -> WHILE APAR condp CPAR DO ALLA estatutos . CLLA

    CLLA            shift and go to state 242


state 238

    (76) for -> FOR ID ididx IGUAL exp TO exp . DO ALLA estatutos CLLA

    DO              shift and go to state 243


state 239

    (11) funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .

    MAIN            reduce using rule 11 (funcs -> FUNCTION funcsp ID APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs .)


state 240

    (60) lecturapp -> COMA ID ididx lecturapp .

    CPAR            reduce using rule 60 (lecturapp -> COMA ID ididx lecturapp .)


state 241

    (69) cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA . condpp
    (73) condpp -> . ELSE ALLA estatutos CLLA
    (74) condpp -> . empty
    (108) empty -> .

    ELSE            shift and go to state 245
    ID              reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    READ            reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    APAR            reduce using rule 108 (empty -> .)
    CTEI            reduce using rule 108 (empty -> .)
    CTEF            reduce using rule 108 (empty -> .)
    CLLA            reduce using rule 108 (empty -> .)

    condpp                         shift and go to state 244
    empty                          shift and go to state 246

state 242

    (75) while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .

    ID              reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    READ            reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    IF              reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    FOR             reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    APAR            reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 75 (while -> WHILE APAR condp CPAR DO ALLA estatutos CLLA .)


state 243

    (76) for -> FOR ID ididx IGUAL exp TO exp DO . ALLA estatutos CLLA

    ALLA            shift and go to state 247


state 244

    (69) cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .

    ID              reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    RETURN          reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    READ            reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    WRITE           reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    IF              reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    WHILE           reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    FOR             reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    APAR            reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CTEI            reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CTEF            reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)
    CLLA            reduce using rule 69 (cond -> IF APAR condp CPAR THEN ALLA estatutos CLLA condpp .)


state 245

    (73) condpp -> ELSE . ALLA estatutos CLLA

    ALLA            shift and go to state 248


state 246

    (74) condpp -> empty .

    ID              reduce using rule 74 (condpp -> empty .)
    RETURN          reduce using rule 74 (condpp -> empty .)
    READ            reduce using rule 74 (condpp -> empty .)
    WRITE           reduce using rule 74 (condpp -> empty .)
    IF              reduce using rule 74 (condpp -> empty .)
    WHILE           reduce using rule 74 (condpp -> empty .)
    FOR             reduce using rule 74 (condpp -> empty .)
    APAR            reduce using rule 74 (condpp -> empty .)
    CTEI            reduce using rule 74 (condpp -> empty .)
    CTEF            reduce using rule 74 (condpp -> empty .)
    CLLA            reduce using rule 74 (condpp -> empty .)


state 247

    (76) for -> FOR ID ididx IGUAL exp TO exp DO ALLA . estatutos CLLA
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    exp                            shift and go to state 54
    estatutos                      shift and go to state 249
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 248

    (73) condpp -> ELSE ALLA . estatutos CLLA
    (15) estatutos -> . asig estatutop
    (16) estatutos -> . llamada estatutop
    (17) estatutos -> . return estatutop
    (18) estatutos -> . lectura estatutop
    (19) estatutos -> . escritura estatutop
    (20) estatutos -> . cond estatutop
    (21) estatutos -> . while estatutop
    (22) estatutos -> . for estatutop
    (23) estatutos -> . exp estatutop
    (35) asig -> . ID ididx IGUAL asigpp PTCOMA
    (50) llamada -> . ID APAR args CPAR PTCOMA
    (58) return -> . RETURN APAR asigpp CPAR PTCOMA
    (59) lectura -> . READ APAR ID ididx lecturapp CPAR PTCOMA
    (62) escritura -> . WRITE APAR escriturap escriturapp CPAR PTCOMA
    (69) cond -> . IF APAR condp CPAR THEN ALLA estatutos CLLA condpp
    (75) while -> . WHILE APAR condp CPAR DO ALLA estatutos CLLA
    (76) for -> . FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA
    (77) exp -> . termino expp
    (81) termino -> . factor terminop
    (85) factor -> . APAR exp CPAR
    (86) factor -> . ID factorp
    (87) factor -> . ctes
    (105) ctes -> . ID factorp
    (106) ctes -> . CTEI
    (107) ctes -> . CTEF

    ID              shift and go to state 43
    RETURN          shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60
    APAR            shift and go to state 44
    CTEI            shift and go to state 64
    CTEF            shift and go to state 65

    estatutos                      shift and go to state 250
    asig                           shift and go to state 46
    llamada                        shift and go to state 47
    return                         shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    cond                           shift and go to state 51
    while                          shift and go to state 52
    for                            shift and go to state 53
    exp                            shift and go to state 54
    termino                        shift and go to state 61
    factor                         shift and go to state 62
    ctes                           shift and go to state 63

state 249

    (76) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos . CLLA

    CLLA            shift and go to state 251


state 250

    (73) condpp -> ELSE ALLA estatutos . CLLA

    CLLA            shift and go to state 252


state 251

    (76) for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .

    ID              reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    RETURN          reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    READ            reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WRITE           reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    IF              reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    WHILE           reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    FOR             reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    APAR            reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEI            reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CTEF            reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)
    CLLA            reduce using rule 76 (for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA .)


state 252

    (73) condpp -> ELSE ALLA estatutos CLLA .

    ID              reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    RETURN          reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    READ            reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    WRITE           reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    IF              reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    WHILE           reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    FOR             reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    APAR            reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    CTEI            reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    CTEF            reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)
    CLLA            reduce using rule 73 (condpp -> ELSE ALLA estatutos CLLA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APAR in state 43 resolved as shift
WARNING: shift/reduce conflict for APAR in state 43 resolved as shift
WARNING: shift/reduce conflict for APAR in state 76 resolved as shift
WARNING: shift/reduce conflict for APAR in state 76 resolved as shift
WARNING: shift/reduce conflict for COMA in state 109 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (factorp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 72 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 72
WARNING: reduce/reduce conflict in state 76 resolved using rule (factorp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 76
WARNING: reduce/reduce conflict in state 106 resolved using rule (factorp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 106
WARNING: reduce/reduce conflict in state 109 resolved using rule (factor -> ctes)
WARNING: rejected rule (empty -> <empty>) in state 109
WARNING: reduce/reduce conflict in state 146 resolved using rule (factor -> ID factorp)
WARNING: rejected rule (ctes -> ID factorp) in state 146
WARNING: reduce/reduce conflict in state 152 resolved using rule (argsp -> empty)
WARNING: rejected rule (factorpp -> empty) in state 152
WARNING: Rule (ctes -> ID factorp) is never reduced
