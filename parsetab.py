
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACOR ALLA AND APAR BOOL CCOR CHAR CLLA COMA CPAR CTEC CTEF CTEI DIF DIV DO DOSPNTS ELSE FALSE FLOAT FOR FUNCTION ID IF IGUAL IGUALIGUAL INT MAIN MAS MAYI MAYQ MENI MENOS MENQ NOT OR POR PROGRAM PTCOMA READ RETURN STR STRING THEN TO TRUE VARS VOID WHILE WRITEprogram : PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLAagregarTablaFunciones : ID PTCOMApoptomain : varss : VARS vars\n             | empty\n    vars : tipo DOSPNTS insertVar varsppp varspp vars\n            | empty\n    insertVar : IDvarsppp : initDim CTEI setDim\n               | empty\n    setDim : CCORinitDim : ACORvarspp : PTCOMA\n              | COMA insertVar varsppp varspp\n    funcs : FUNCTION funcsp insertFunc funcspp\n             | empty\n    insertFunc : IDfuncspp : APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcsupdateParamTable : endfunction : addsize : funcsp : VOID\n              | tipo\n    estatutos : asig estatutop\n                 | return estatutop\n                 | lectura estatutop\n                 | escritura estatutop\n                 | cond estatutop\n                 | while estatutop\n                 | for estatutop\n                 | exp estatutop\n    estatutop : estatutos\n                 | empty\n    tipo : INT\n            | FLOAT\n            | CHAR\n    params : tipo DOSPNTS insertParams ididx paramsp\n              | empty\n    insertParams : ID\n    paramsp : COMA params\n               | empty\n    asig : varAs ididx igualAs asigpp PTCOMAvarAs : IDigualAs : IGUALasigp : exp asigppp\n             | empty\n    asigppp : COMA asigp\n               | empty\n    asigpp : expididx : corArr exp ver CCOR\n             | empty\n    corArr : ACORver : return : RETURN APAR exp CPAR PTCOMAlectura : READ APAR readId ididx lecturapp CPAR PTCOMAreadId : ID\n    lecturapp : COMA readId ididx lecturapp\n                 | empty\n    escritura : WRITE APAR escriturap escriturapp CPAR PTCOMAescriturap : pushEsc\n                  | exp\n    pushEsc : STRING\n               | CTEC\n    escriturapp : COMA escriturap\n                   | empty\n    cond : IF APAR exp checkCond THEN ALLA estatutos CLLA condppcondpp : checkElse ALLA estatutos CLLA\n              | empty\n    checkElse : ELSE\n    checkCond : CPAR\n    while : saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLAsaveWhile : WHILE\n    checkWhileCond : CPAR\n    for : FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLAvarFor : ID\n    initFor : TO\n    beforeDo : DO\n    exp : texp exppexpp : OR exp\n            | empty\n    texp : gexp texpptexpp : andCheck texp\n             | empty\n     andCheck : AND\n    gexp : mexp gexppgexpp : addPO mexp\n             | empty\n    addPO : MAYQ\n             | MENQ\n             | MAYI\n             | MENI\n             | IGUAL IGUAL\n             | DIF\n    mexp : termino mexppmexpp : operSR mexp\n            | empty\n    operSR : MENOS\n              | MAS\n    termino : factor terminopterminop : oper termino\n                | empty\n    oper : DIV\n            | POR\n    factor : APAR exp CPAR\n              | ctes\n    factorp : APAR createEra exp valParams factorpp cparParams\n               | corArr exp ver endArrfac\n               | empty\n    endArrfac : CCORcparParams : CPARcreateEra : valParams : factorpp : COMA exp valParams factorpp\n                | empty\n    ctes : CTEC\n            | CTEI\n            | CTEF\n            | ID validateExistance factorp\n    validateExistance : empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,84,],[0,-1,]),'ID':([2,15,16,17,19,20,21,22,35,41,43,45,50,52,53,54,55,56,57,58,59,66,67,68,70,71,72,73,74,75,76,77,83,96,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,136,137,138,151,152,153,154,155,156,157,158,159,160,171,177,178,180,182,184,186,195,198,199,200,201,202,204,205,207,213,217,218,221,222,225,227,229,232,236,237,],[4,-34,-35,-36,25,-22,-23,27,-3,27,68,80,83,68,68,68,68,68,68,68,68,105,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,83,-52,83,142,83,83,83,-78,83,-80,-120,-81,83,-83,-84,-85,83,-87,-88,-89,-90,-91,-93,-94,83,-96,-97,-98,-99,83,-101,-102,-103,-104,83,-44,-79,-118,-111,83,-108,-82,-86,-92,-95,-100,83,83,83,-21,-42,-54,142,68,-59,68,68,83,-76,-107,-109,-55,83,-120,-71,-106,-110,-66,-68,68,68,-74,-67,]),'VARS':([3,8,133,],[6,-2,6,]),'FUNCTION':([3,5,6,7,8,12,14,39,40,46,135,215,224,],[-120,10,-120,-5,-2,-4,-7,-120,-13,-6,-14,-20,10,]),'MAIN':([3,5,6,7,8,9,11,12,14,29,39,40,46,135,215,224,231,],[-120,-120,-120,-5,-2,18,-16,-4,-7,-15,-120,-13,-6,-14,-20,-120,-18,]),'PTCOMA':([4,26,27,31,33,44,47,48,49,67,70,71,72,73,74,75,76,77,78,81,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,165,166,168,188,196,204,205,221,222,],[8,-120,-8,40,-10,-19,-120,-9,-11,-120,-120,-120,-120,-120,-105,-115,-116,-117,133,40,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,182,-49,184,198,207,-107,-109,-106,-110,]),'INT':([6,10,30,39,40,135,163,],[15,15,15,15,-13,-14,15,]),'FLOAT':([6,10,30,39,40,135,163,],[16,16,16,16,-13,-14,16,]),'CHAR':([6,10,30,39,40,135,163,],[17,17,17,17,-13,-14,17,]),'ALLA':([6,7,12,14,28,39,40,46,133,135,161,190,191,219,220,226,228,],[-120,-5,-4,-7,35,-120,-13,-6,-120,-14,180,199,200,229,-77,232,-69,]),'VOID':([10,],[20,]),'DOSPNTS':([13,15,16,17,37,],[22,-34,-35,-36,45,]),'APAR':([18,24,25,35,43,50,52,53,54,55,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,83,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,136,137,138,151,152,153,154,155,156,157,158,159,160,171,177,178,180,182,184,195,198,199,200,201,202,204,205,207,213,217,218,221,222,225,227,229,232,236,237,],[23,30,-17,-3,50,50,50,50,50,50,50,50,50,50,99,100,101,102,103,-120,-119,-72,-120,-120,-120,-120,-105,-115,-116,-117,-119,50,-52,50,50,50,50,-78,50,-80,153,-81,50,-83,-84,-85,50,-87,-88,-89,-90,-91,-93,-94,50,-96,-97,-98,-99,50,-101,-102,-103,-104,50,-44,-79,-118,-111,50,-108,-82,-86,-92,-95,-100,50,50,50,-21,-42,-54,50,-59,50,50,50,-76,-107,-109,-55,50,-120,-71,-106,-110,-66,-68,50,50,-74,-67,]),'CPAR':([23,30,36,38,67,70,71,72,73,74,75,76,77,79,80,82,83,97,106,108,109,110,112,114,116,123,125,128,130,134,136,140,141,142,143,144,145,146,147,148,149,151,152,155,156,157,159,160,162,163,164,169,170,172,181,183,185,187,189,193,197,203,204,205,208,212,214,216,221,222,223,230,234,],[28,-120,44,-38,-120,-120,-120,-120,-120,-105,-115,-116,-117,-120,-39,136,-119,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-120,-104,168,-120,-56,-120,-60,-61,-62,-63,174,176,-79,-118,-108,-82,-86,-95,-100,-37,-120,-41,-120,188,-65,-40,-50,196,-58,-64,-112,-120,-120,-107,-109,-120,222,-114,-57,-106,-110,-112,-120,-113,]),'ACOR':([26,27,47,60,68,79,80,83,104,105,109,141,142,197,],[34,-8,34,98,-43,98,-39,-119,98,-75,98,98,-56,98,]),'COMA':([26,27,31,33,47,48,49,67,70,71,72,73,74,75,76,77,79,80,81,83,97,106,108,109,110,112,114,116,123,125,128,130,134,136,141,142,143,144,145,146,147,151,152,155,156,157,159,160,169,183,193,197,203,204,205,208,221,222,223,230,],[-120,-8,41,-10,-120,-9,-11,-120,-120,-120,-120,-120,-105,-115,-116,-117,-120,-39,41,-119,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,163,-104,-120,-56,171,-60,-61,-62,-63,-79,-118,-108,-82,-86,-95,-100,186,-50,-112,-120,213,-107,-109,186,-106,-110,-112,213,]),'CTEI':([32,34,35,43,50,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,136,137,138,151,152,153,154,155,156,157,158,159,160,171,177,178,180,182,184,195,198,199,200,201,202,204,205,207,213,217,218,221,222,225,227,229,232,236,237,],[42,-12,-3,76,76,76,76,76,76,76,76,76,76,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,76,-52,76,76,76,76,-78,76,-80,-120,-81,76,-83,-84,-85,76,-87,-88,-89,-90,-91,-93,-94,76,-96,-97,-98,-99,76,-101,-102,-103,-104,76,-44,-79,-118,-111,76,-108,-82,-86,-92,-95,-100,76,76,76,-21,-42,-54,76,-59,76,76,76,-76,-107,-109,-55,76,-120,-71,-106,-110,-66,-68,76,76,-74,-67,]),'RETURN':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,180,182,184,195,198,199,200,204,205,207,217,218,221,222,225,227,229,232,236,237,],[-3,61,61,61,61,61,61,61,61,61,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-21,-42,-54,61,-59,61,61,-107,-109,-55,-120,-71,-106,-110,-66,-68,61,61,-74,-67,]),'READ':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,180,182,184,195,198,199,200,204,205,207,217,218,221,222,225,227,229,232,236,237,],[-3,62,62,62,62,62,62,62,62,62,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-21,-42,-54,62,-59,62,62,-107,-109,-55,-120,-71,-106,-110,-66,-68,62,62,-74,-67,]),'WRITE':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,180,182,184,195,198,199,200,204,205,207,217,218,221,222,225,227,229,232,236,237,],[-3,63,63,63,63,63,63,63,63,63,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-21,-42,-54,63,-59,63,63,-107,-109,-55,-120,-71,-106,-110,-66,-68,63,63,-74,-67,]),'IF':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,180,182,184,195,198,199,200,204,205,207,217,218,221,222,225,227,229,232,236,237,],[-3,64,64,64,64,64,64,64,64,64,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-21,-42,-54,64,-59,64,64,-107,-109,-55,-120,-71,-106,-110,-66,-68,64,64,-74,-67,]),'FOR':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,180,182,184,195,198,199,200,204,205,207,217,218,221,222,225,227,229,232,236,237,],[-3,66,66,66,66,66,66,66,66,66,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-21,-42,-54,66,-59,66,66,-107,-109,-55,-120,-71,-106,-110,-66,-68,66,66,-74,-67,]),'WHILE':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,180,182,184,195,198,199,200,204,205,207,217,218,221,222,225,227,229,232,236,237,],[-3,69,69,69,69,69,69,69,69,69,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-21,-42,-54,69,-59,69,69,-107,-109,-55,-120,-71,-106,-110,-66,-68,69,69,-74,-67,]),'CTEC':([35,43,50,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,136,137,138,151,152,153,154,155,156,157,158,159,160,171,177,178,180,182,184,195,198,199,200,201,202,204,205,207,213,217,218,221,222,225,227,229,232,236,237,],[-3,75,75,75,75,75,75,75,75,75,75,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,75,-52,75,147,75,75,-78,75,-80,-120,-81,75,-83,-84,-85,75,-87,-88,-89,-90,-91,-93,-94,75,-96,-97,-98,-99,75,-101,-102,-103,-104,75,-44,-79,-118,-111,75,-108,-82,-86,-92,-95,-100,147,75,75,-21,-42,-54,75,-59,75,75,75,-76,-107,-109,-55,75,-120,-71,-106,-110,-66,-68,75,75,-74,-67,]),'CTEF':([35,43,50,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,136,137,138,151,152,153,154,155,156,157,158,159,160,171,177,178,180,182,184,195,198,199,200,201,202,204,205,207,213,217,218,221,222,225,227,229,232,236,237,],[-3,77,77,77,77,77,77,77,77,77,77,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,77,-52,77,77,77,77,-78,77,-80,-120,-81,77,-83,-84,-85,77,-87,-88,-89,-90,-91,-93,-94,77,-96,-97,-98,-99,77,-101,-102,-103,-104,77,-44,-79,-118,-111,77,-108,-82,-86,-92,-95,-100,77,77,77,-21,-42,-54,77,-59,77,77,77,-76,-107,-109,-55,77,-120,-71,-106,-110,-66,-68,77,77,-74,-67,]),'CCOR':([42,67,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,139,151,152,155,156,157,159,160,167,179,194,204,205,221,222,],[49,-120,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-53,-79,-118,-108,-82,-86,-95,-100,183,-53,205,-107,-109,-106,-110,]),'CLLA':([51,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,83,85,86,87,88,89,90,91,92,93,94,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,182,184,198,204,205,206,207,209,210,217,218,221,222,225,227,233,235,236,237,],[84,-120,-120,-120,-120,-120,-120,-120,-120,-120,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-24,-32,-33,-25,-26,-27,-28,-29,-30,-31,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,-42,-54,-59,-107,-109,215,-55,217,218,-120,-71,-106,-110,-66,-68,236,237,-74,-67,]),'IGUAL':([60,68,71,72,73,74,75,76,77,83,95,97,104,105,109,121,123,125,128,130,136,147,150,152,155,159,160,183,204,205,221,222,],[-120,-43,121,-120,-120,-105,-115,-116,-117,-119,138,-51,-120,-75,-120,158,-94,-96,-99,-101,-104,-115,177,-118,-108,-95,-100,-50,-107,-109,-106,-110,]),'OR':([67,68,70,71,72,73,74,75,76,77,83,109,110,112,114,116,123,125,128,130,136,147,152,155,156,157,159,160,204,205,221,222,],[107,-119,-120,-120,-120,-120,-105,-115,-116,-117,-119,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-115,-118,-108,-82,-86,-95,-100,-107,-109,-106,-110,]),'TO':([67,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,192,204,205,221,222,],[-120,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,202,-107,-109,-106,-110,]),'DO':([67,70,71,72,73,74,75,76,77,83,106,108,109,110,112,114,116,123,125,128,130,136,151,152,155,156,157,159,160,175,176,204,205,211,221,222,],[-120,-120,-120,-120,-120,-105,-115,-116,-117,-119,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-104,-79,-118,-108,-82,-86,-95,-100,191,-73,-107,-109,220,-106,-110,]),'DIV':([68,73,74,75,76,77,83,109,136,147,152,155,204,205,221,222,],[-119,131,-105,-115,-116,-117,-119,-120,-104,-115,-118,-108,-107,-109,-106,-110,]),'POR':([68,73,74,75,76,77,83,109,136,147,152,155,204,205,221,222,],[-119,132,-105,-115,-116,-117,-119,-120,-104,-115,-118,-108,-107,-109,-106,-110,]),'MENOS':([68,72,73,74,75,76,77,83,109,128,130,136,147,152,155,160,204,205,221,222,],[-119,126,-120,-105,-115,-116,-117,-119,-120,-99,-101,-104,-115,-118,-108,-100,-107,-109,-106,-110,]),'MAS':([68,72,73,74,75,76,77,83,109,128,130,136,147,152,155,160,204,205,221,222,],[-119,127,-120,-105,-115,-116,-117,-119,-120,-99,-101,-104,-115,-118,-108,-100,-107,-109,-106,-110,]),'MAYQ':([68,71,72,73,74,75,76,77,83,109,123,125,128,130,136,147,152,155,159,160,204,205,221,222,],[-119,117,-120,-120,-105,-115,-116,-117,-119,-120,-94,-96,-99,-101,-104,-115,-118,-108,-95,-100,-107,-109,-106,-110,]),'MENQ':([68,71,72,73,74,75,76,77,83,109,123,125,128,130,136,147,152,155,159,160,204,205,221,222,],[-119,118,-120,-120,-105,-115,-116,-117,-119,-120,-94,-96,-99,-101,-104,-115,-118,-108,-95,-100,-107,-109,-106,-110,]),'MAYI':([68,71,72,73,74,75,76,77,83,109,123,125,128,130,136,147,152,155,159,160,204,205,221,222,],[-119,119,-120,-120,-105,-115,-116,-117,-119,-120,-94,-96,-99,-101,-104,-115,-118,-108,-95,-100,-107,-109,-106,-110,]),'MENI':([68,71,72,73,74,75,76,77,83,109,123,125,128,130,136,147,152,155,159,160,204,205,221,222,],[-119,120,-120,-120,-105,-115,-116,-117,-119,-120,-94,-96,-99,-101,-104,-115,-118,-108,-95,-100,-107,-109,-106,-110,]),'DIF':([68,71,72,73,74,75,76,77,83,109,123,125,128,130,136,147,152,155,159,160,204,205,221,222,],[-119,122,-120,-120,-105,-115,-116,-117,-119,-120,-94,-96,-99,-101,-104,-115,-118,-108,-95,-100,-107,-109,-106,-110,]),'AND':([68,70,71,72,73,74,75,76,77,83,109,114,116,123,125,128,130,136,147,152,155,157,159,160,204,205,221,222,],[-119,113,-120,-120,-120,-105,-115,-116,-117,-119,-120,-85,-87,-94,-96,-99,-101,-104,-115,-118,-108,-86,-95,-100,-107,-109,-106,-110,]),'STRING':([101,171,],[146,146,]),'THEN':([173,174,],[190,-70,]),'ELSE':([217,],[228,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'agregarTablaFunciones':([2,],[3,]),'varss':([3,133,],[5,161,]),'empty':([3,5,6,26,30,39,47,52,53,54,55,56,57,58,59,60,67,70,71,72,73,79,104,109,133,134,141,143,163,169,197,203,208,217,224,230,],[7,11,14,33,38,14,33,87,87,87,87,87,87,87,87,97,108,112,116,125,130,97,97,155,7,164,97,172,38,187,97,214,187,227,11,214,]),'funcs':([5,224,],[9,231,]),'vars':([6,39,],[12,46,]),'tipo':([6,10,30,39,163,],[13,21,37,13,37,]),'funcsp':([10,],[19,]),'insertFunc':([19,],[24,]),'insertVar':([22,41,],[26,47,]),'funcspp':([24,],[29,]),'varsppp':([26,47,],[31,81,]),'initDim':([26,47,],[32,32,]),'params':([30,163,],[36,181,]),'varspp':([31,81,],[39,135,]),'poptomain':([35,],[43,]),'setDim':([42,],[48,]),'estatutos':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[51,86,86,86,86,86,86,86,86,206,209,210,233,235,]),'asig':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'return':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'lectura':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'escritura':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cond':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'while':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'for':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'exp':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,137,154,171,177,178,195,199,200,201,213,229,232,],[59,82,59,59,59,59,59,59,59,59,139,140,145,148,149,151,166,179,145,192,193,59,59,59,211,223,59,59,]),'varAs':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'saveWhile':([43,52,53,54,55,56,57,58,59,195,199,200,229,232,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'texp':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,111,137,154,171,177,178,195,199,200,201,213,229,232,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,156,67,67,67,67,67,67,67,67,67,67,67,67,]),'gexp':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,111,137,154,171,177,178,195,199,200,201,213,229,232,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'mexp':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,111,115,124,137,154,171,177,178,195,199,200,201,213,229,232,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,157,159,71,71,71,71,71,71,71,71,71,71,71,71,]),'termino':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,111,115,124,129,137,154,171,177,178,195,199,200,201,213,229,232,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,160,72,72,72,72,72,72,72,72,72,72,72,72,]),'factor':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,111,115,124,129,137,154,171,177,178,195,199,200,201,213,229,232,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'ctes':([43,50,52,53,54,55,56,57,58,59,96,99,101,102,103,107,111,115,124,129,137,154,171,177,178,195,199,200,201,213,229,232,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'updateParamTable':([44,],[78,]),'insertParams':([45,],[79,]),'estatutop':([52,53,54,55,56,57,58,59,],[85,88,89,90,91,92,93,94,]),'ididx':([60,79,104,141,197,],[95,134,150,169,208,]),'corArr':([60,79,104,109,141,197,],[96,96,96,154,96,96,]),'varFor':([66,],[104,]),'expp':([67,],[106,]),'validateExistance':([68,83,],[109,109,]),'texpp':([70,],[110,]),'andCheck':([70,],[111,]),'gexpp':([71,],[114,]),'addPO':([71,],[115,]),'mexpp':([72,],[123,]),'operSR':([72,],[124,]),'terminop':([73,],[128,]),'oper':([73,],[129,]),'igualAs':([95,],[137,]),'readId':([100,186,],[141,197,]),'escriturap':([101,171,],[143,189,]),'pushEsc':([101,171,],[144,144,]),'factorp':([109,],[152,]),'paramsp':([134,],[162,]),'asigpp':([137,],[165,]),'ver':([139,179,],[167,194,]),'escriturapp':([143,],[170,]),'checkCond':([148,],[173,]),'checkWhileCond':([149,],[175,]),'createEra':([153,],[178,]),'lecturapp':([169,208,],[185,216,]),'addsize':([180,],[195,]),'initFor':([192,],[201,]),'valParams':([193,223,],[203,230,]),'endArrfac':([194,],[204,]),'factorpp':([203,230,],[212,234,]),'beforeDo':([211,],[219,]),'cparParams':([212,],[221,]),'endfunction':([215,],[224,]),'condpp':([217,],[225,]),'checkElse':([217,],[226,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA','program',11,'p_program','lex.py',686),
  ('agregarTablaFunciones -> ID PTCOMA','agregarTablaFunciones',2,'p_agregarTablaFunciones','lex.py',690),
  ('poptomain -> <empty>','poptomain',0,'p_poptomain','lex.py',706),
  ('varss -> VARS vars','varss',2,'p_varss','lex.py',720),
  ('varss -> empty','varss',1,'p_varss','lex.py',721),
  ('vars -> tipo DOSPNTS insertVar varsppp varspp vars','vars',6,'p_vars','lex.py',726),
  ('vars -> empty','vars',1,'p_vars','lex.py',727),
  ('insertVar -> ID','insertVar',1,'p_insertVar','lex.py',731),
  ('varsppp -> initDim CTEI setDim','varsppp',3,'p_varsppp','lex.py',741),
  ('varsppp -> empty','varsppp',1,'p_varsppp','lex.py',742),
  ('setDim -> CCOR','setDim',1,'p_setDim','lex.py',746),
  ('initDim -> ACOR','initDim',1,'p_initDim','lex.py',762),
  ('varspp -> PTCOMA','varspp',1,'p_varspp','lex.py',778),
  ('varspp -> COMA insertVar varsppp varspp','varspp',4,'p_varspp','lex.py',779),
  ('funcs -> FUNCTION funcsp insertFunc funcspp','funcs',4,'p_funcs','lex.py',786),
  ('funcs -> empty','funcs',1,'p_funcs','lex.py',787),
  ('insertFunc -> ID','insertFunc',1,'p_insertFunc','lex.py',791),
  ('funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs','funcspp',12,'p_funcspp','lex.py',804),
  ('updateParamTable -> <empty>','updateParamTable',0,'p_updateParamTable','lex.py',810),
  ('endfunction -> <empty>','endfunction',0,'p_endfunciton','lex.py',817),
  ('addsize -> <empty>','addsize',0,'p_addsize','lex.py',830),
  ('funcsp -> VOID','funcsp',1,'p_funcsp','lex.py',848),
  ('funcsp -> tipo','funcsp',1,'p_funcsp','lex.py',849),
  ('estatutos -> asig estatutop','estatutos',2,'p_estatutos','lex.py',862),
  ('estatutos -> return estatutop','estatutos',2,'p_estatutos','lex.py',863),
  ('estatutos -> lectura estatutop','estatutos',2,'p_estatutos','lex.py',864),
  ('estatutos -> escritura estatutop','estatutos',2,'p_estatutos','lex.py',865),
  ('estatutos -> cond estatutop','estatutos',2,'p_estatutos','lex.py',866),
  ('estatutos -> while estatutop','estatutos',2,'p_estatutos','lex.py',867),
  ('estatutos -> for estatutop','estatutos',2,'p_estatutos','lex.py',868),
  ('estatutos -> exp estatutop','estatutos',2,'p_estatutos','lex.py',869),
  ('estatutop -> estatutos','estatutop',1,'p_estatutop','lex.py',876),
  ('estatutop -> empty','estatutop',1,'p_estatutop','lex.py',877),
  ('tipo -> INT','tipo',1,'p_tipo','lex.py',884),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lex.py',885),
  ('tipo -> CHAR','tipo',1,'p_tipo','lex.py',886),
  ('params -> tipo DOSPNTS insertParams ididx paramsp','params',5,'p_params','lex.py',897),
  ('params -> empty','params',1,'p_params','lex.py',898),
  ('insertParams -> ID','insertParams',1,'p_insertParams','lex.py',902),
  ('paramsp -> COMA params','paramsp',2,'p_paramsp','lex.py',916),
  ('paramsp -> empty','paramsp',1,'p_paramsp','lex.py',917),
  ('asig -> varAs ididx igualAs asigpp PTCOMA','asig',5,'p_asig','lex.py',924),
  ('varAs -> ID','varAs',1,'p_varAs','lex.py',939),
  ('igualAs -> IGUAL','igualAs',1,'p_igualAs','lex.py',948),
  ('asigp -> exp asigppp','asigp',2,'p_asigp','lex.py',964),
  ('asigp -> empty','asigp',1,'p_asigp','lex.py',965),
  ('asigppp -> COMA asigp','asigppp',2,'p_asigppp','lex.py',973),
  ('asigppp -> empty','asigppp',1,'p_asigppp','lex.py',974),
  ('asigpp -> exp','asigpp',1,'p_asigpp','lex.py',980),
  ('ididx -> corArr exp ver CCOR','ididx',4,'p_ididx','lex.py',987),
  ('ididx -> empty','ididx',1,'p_ididx','lex.py',988),
  ('corArr -> ACOR','corArr',1,'p_corArr','lex.py',1019),
  ('ver -> <empty>','ver',0,'p_ver','lex.py',1034),
  ('return -> RETURN APAR exp CPAR PTCOMA','return',5,'p_return','lex.py',1076),
  ('lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA','lectura',7,'p_lectura','lex.py',1091),
  ('readId -> ID','readId',1,'p_readId','lex.py',1095),
  ('lecturapp -> COMA readId ididx lecturapp','lecturapp',4,'p_lecturapp','lex.py',1103),
  ('lecturapp -> empty','lecturapp',1,'p_lecturapp','lex.py',1104),
  ('escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA','escritura',6,'p_escritura','lex.py',1111),
  ('escriturap -> pushEsc','escriturap',1,'p_escriturap','lex.py',1116),
  ('escriturap -> exp','escriturap',1,'p_escriturap','lex.py',1117),
  ('pushEsc -> STRING','pushEsc',1,'p_pushEsc','lex.py',1128),
  ('pushEsc -> CTEC','pushEsc',1,'p_pushEsc','lex.py',1129),
  ('escriturapp -> COMA escriturap','escriturapp',2,'p_escriturapp','lex.py',1137),
  ('escriturapp -> empty','escriturapp',1,'p_escriturapp','lex.py',1138),
  ('cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp','cond',9,'p_cond','lex.py',1144),
  ('condpp -> checkElse ALLA estatutos CLLA','condpp',4,'p_condpp','lex.py',1157),
  ('condpp -> empty','condpp',1,'p_condpp','lex.py',1158),
  ('checkElse -> ELSE','checkElse',1,'p_checkElse','lex.py',1164),
  ('checkCond -> CPAR','checkCond',1,'p_checkCond','lex.py',1180),
  ('while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA','while',8,'p_while','lex.py',1198),
  ('saveWhile -> WHILE','saveWhile',1,'p_saveWhile','lex.py',1213),
  ('checkWhileCond -> CPAR','checkWhileCond',1,'p_checkWhileCond','lex.py',1220),
  ('for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA','for',11,'p_for','lex.py',1241),
  ('varFor -> ID','varFor',1,'p_varFor','lex.py',1268),
  ('initFor -> TO','initFor',1,'p_initFor','lex.py',1283),
  ('beforeDo -> DO','beforeDo',1,'p_beforeDo','lex.py',1299),
  ('exp -> texp expp','exp',2,'p_exp','lex.py',1325),
  ('expp -> OR exp','expp',2,'p_expp','lex.py',1329),
  ('expp -> empty','expp',1,'p_expp','lex.py',1330),
  ('texp -> gexp texpp','texp',2,'p_texp','lex.py',1334),
  ('texpp -> andCheck texp','texpp',2,'p_texpp','lex.py',1338),
  ('texpp -> empty','texpp',1,'p_texpp','lex.py',1339),
  ('andCheck -> AND','andCheck',1,'p_andCheck','lex.py',1342),
  ('gexp -> mexp gexpp','gexp',2,'p_gexp','lex.py',1348),
  ('gexpp -> addPO mexp','gexpp',2,'p_gexpp','lex.py',1371),
  ('gexpp -> empty','gexpp',1,'p_gexpp','lex.py',1372),
  ('addPO -> MAYQ','addPO',1,'p_addPO','lex.py',1375),
  ('addPO -> MENQ','addPO',1,'p_addPO','lex.py',1376),
  ('addPO -> MAYI','addPO',1,'p_addPO','lex.py',1377),
  ('addPO -> MENI','addPO',1,'p_addPO','lex.py',1378),
  ('addPO -> IGUAL IGUAL','addPO',2,'p_addPO','lex.py',1379),
  ('addPO -> DIF','addPO',1,'p_addPO','lex.py',1380),
  ('mexp -> termino mexpp','mexp',2,'p_mexp','lex.py',1386),
  ('mexpp -> operSR mexp','mexpp',2,'p_mexpp','lex.py',1412),
  ('mexpp -> empty','mexpp',1,'p_mexpp','lex.py',1413),
  ('operSR -> MENOS','operSR',1,'p_operSR','lex.py',1418),
  ('operSR -> MAS','operSR',1,'p_operSR','lex.py',1419),
  ('termino -> factor terminop','termino',2,'p_termino','lex.py',1427),
  ('terminop -> oper termino','terminop',2,'p_terminop','lex.py',1451),
  ('terminop -> empty','terminop',1,'p_terminop','lex.py',1452),
  ('oper -> DIV','oper',1,'p_oper','lex.py',1457),
  ('oper -> POR','oper',1,'p_oper','lex.py',1458),
  ('factor -> APAR exp CPAR','factor',3,'p_factor','lex.py',1465),
  ('factor -> ctes','factor',1,'p_factor','lex.py',1466),
  ('factorp -> APAR createEra exp valParams factorpp cparParams','factorp',6,'p_factorp','lex.py',1504),
  ('factorp -> corArr exp ver endArrfac','factorp',4,'p_factorp','lex.py',1505),
  ('factorp -> empty','factorp',1,'p_factorp','lex.py',1506),
  ('endArrfac -> CCOR','endArrfac',1,'p_endArrfac','lex.py',1534),
  ('cparParams -> CPAR','cparParams',1,'p_cparParams','lex.py',1561),
  ('createEra -> <empty>','createEra',0,'p_createEra','lex.py',1582),
  ('valParams -> <empty>','valParams',0,'p_valParams','lex.py',1597),
  ('factorpp -> COMA exp valParams factorpp','factorpp',4,'p_factorpp','lex.py',1618),
  ('factorpp -> empty','factorpp',1,'p_factorpp','lex.py',1619),
  ('ctes -> CTEC','ctes',1,'p_ctes','lex.py',1628),
  ('ctes -> CTEI','ctes',1,'p_ctes','lex.py',1629),
  ('ctes -> CTEF','ctes',1,'p_ctes','lex.py',1630),
  ('ctes -> ID validateExistance factorp','ctes',3,'p_ctes','lex.py',1631),
  ('validateExistance -> <empty>','validateExistance',0,'p_validateExistance','lex.py',1640),
  ('empty -> <empty>','empty',0,'p_empty','lex.py',1652),
]
