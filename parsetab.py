
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACOR ALLA AND APAR BOOL CCOR CHAR CLLA COMA CPAR CTEC CTEF CTEI DIF DIV DO DOSPNTS ELSE FALSE FLOAT FOR FUNCTION ID IF IGUAL IGUALIGUAL INT MAIN MAS MAYI MAYQ MENI MENOS MENQ NOT OR POR PROGRAM PTCOMA READ RETURN STR STRING THEN TO TRUE VARS VOID WHILE WRITEprogram : PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLAagregarTablaFunciones : ID PTCOMAvarss : VARS vars\n             | empty\n    vars : tipo DOSPNTS insertVar varsppp varspp vars\n            | empty\n    insertVar : IDvarsppp : ACOR CTEI CCOR\n               | empty\n    varspp : PTCOMA\n              | COMA insertVar varsppp varspp\n    funcs : FUNCTION funcsp insertFunc funcspp\n             | empty\n    insertFunc : IDfuncspp : APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcsfuncsp : VOID\n              | tipo\n    estatutos : asig estatutop\n                 | llamada estatutop\n                 | return estatutop\n                 | lectura estatutop\n                 | escritura estatutop\n                 | cond estatutop\n                 | while estatutop\n                 | for estatutop\n                 | exp estatutop\n    estatutop : estatutos\n                 | empty\n    tipo : INT\n            | FLOAT\n            | CHAR\n    params : tipo DOSPNTS insertParams ididx paramsp\n              | empty\n    insertParams : ID\n    paramsp : COMA params\n               | empty\n    asig : varAs ididx igualAs asigpp PTCOMAvarAs : IDigualAs : IGUALasigp : exp asigppp\n             | CTEC asigppp\n             | empty\n    asigppp : COMA asigp\n               | empty\n    asigpp : exp\n              | CTEC\n              | ACOR asigp CCOR\n    ididx : ACOR exp CCOR\n             | empty\n    llamada : ID APAR args CPAR PTCOMAargs : ctes argsp\n            | exp argsp\n            | CTEC argsp\n    argsp : COMA args\n             | empty\n    return : RETURN APAR exp CPAR PTCOMAlectura : READ APAR readId ididx lecturapp CPAR PTCOMAreadId : ID\n    lecturapp : COMA readId ididx lecturapp\n                 | empty\n    escritura : WRITE APAR escriturap escriturapp CPAR PTCOMAescriturap : pushEsc\n                  | exp\n    pushEsc : STRING\n               | CTEC\n    escriturapp : COMA escriturap\n                   | empty\n    cond : IF APAR condp checkCond THEN ALLA estatutos CLLA condppcondp : exp\n             | TRUE\n             | FALSE\n    condpp : checkElse ALLA estatutos CLLA\n              | empty\n    checkElse : ELSE\n    checkCond : CPAR\n    while : saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLAsaveWhile : WHILE\n    checkWhileCond : CPAR\n    for : FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLAexp : texp exppexpp : OR exp\n            | empty\n    texp : gexp texpptexpp : AND texp\n             | empty\n    gexp : mexp gexppgexpp : MAYQ mexp\n             | MENQ mexp\n             | MAYI mexp\n             | MENI mexp\n             | IGUALIGUAL mexp\n             | DIF mexp\n             | empty\n    mexp : termino mexppmexpp : operSR mexp\n            | empty\n    operSR : MENOS\n              | MAS\n    termino : factor terminopterminop : oper termino\n                | empty\n    oper : DIV\n            | POR\n    factor : APAR exp CPAR\n              | ID factorp\n              | ctes\n    factorp : APAR exp factorpp CPAR\n               | ACOR exp CCOR\n               | empty\n    factorpp : COMA exp factorpp\n                | empty\n    ctes : ID factorp\n            | CTEI\n            | CTEF\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,77,],[0,-1,]),'ID':([2,15,16,17,19,20,21,22,34,40,42,44,45,46,47,48,49,50,51,52,54,60,61,63,64,65,66,67,68,69,71,76,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,155,156,157,158,159,160,161,162,163,164,172,178,181,184,188,194,195,199,201,206,207,211,213,225,231,232,233,234,237,244,245,247,249,251,252,255,256,],[4,-29,-30,-31,25,-16,-17,27,54,27,76,54,54,54,54,54,54,54,54,54,-115,101,-115,-115,-115,-115,-115,-106,-113,-114,128,-115,76,135,-105,76,-109,76,143,76,76,76,-80,76,-82,-83,76,-85,-86,76,76,76,76,76,76,-93,-94,76,-96,-97,-98,-99,76,-101,-102,-103,-104,76,76,-39,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,76,135,135,-108,76,76,54,76,-37,-50,-107,-56,143,76,-61,54,54,76,-57,-115,-76,-68,-73,54,54,-79,-72,]),'VARS':([3,8,126,],[6,-2,6,]),'FUNCTION':([3,5,6,7,8,12,14,38,39,72,167,235,],[-115,10,-115,-4,-2,-3,-6,-115,-10,-5,-11,10,]),'MAIN':([3,5,6,7,8,9,11,12,14,29,38,39,72,167,235,242,],[-115,-115,-115,-4,-2,18,-13,-3,-6,-12,-115,-10,-5,-11,-115,-15,]),'PTCOMA':([4,26,27,31,33,61,63,64,65,66,67,68,69,70,73,74,76,93,95,102,104,105,107,108,115,116,118,121,123,129,130,155,156,157,158,159,160,161,162,163,164,169,170,171,175,184,185,207,215,223,229,],[8,-115,-7,39,-9,-115,-115,-115,-115,-115,-106,-113,-114,126,-115,-8,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,39,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,201,-45,-46,206,-108,211,-107,231,-47,237,]),'INT':([6,10,30,38,39,167,197,],[15,15,15,15,-10,-11,15,]),'FLOAT':([6,10,30,38,39,167,197,],[16,16,16,16,-10,-11,16,]),'CHAR':([6,10,30,38,39,167,197,],[17,17,17,17,-10,-11,17,]),'ALLA':([6,7,12,14,28,38,39,72,126,165,167,217,218,246,248,250,],[-115,-4,-3,-6,34,-115,-10,-5,-115,195,-11,232,233,251,252,-74,]),'VOID':([10,],[20,]),'DOSPNTS':([13,15,16,17,36,],[22,-29,-30,-31,71,]),'APAR':([18,24,25,34,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,76,90,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,135,155,156,157,158,159,160,161,162,163,164,172,178,181,184,188,194,195,199,201,206,207,211,225,231,232,233,234,237,244,245,247,249,251,252,255,256,],[23,30,-14,42,42,42,42,42,42,42,42,42,42,42,92,96,97,98,99,100,-115,-77,-115,-115,-115,-115,-106,-113,-114,131,42,42,-105,42,-109,42,42,42,42,-80,42,-82,-83,42,-85,-86,42,42,42,42,42,42,-93,-94,42,-96,-97,-98,-99,42,-101,-102,-103,-104,42,42,-39,131,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,42,42,42,-108,42,42,42,42,-37,-50,-107,-56,42,-61,42,42,42,-57,-115,-76,-68,-73,42,42,-79,-72,]),'CPAR':([23,30,35,37,61,63,64,65,66,67,68,69,75,76,91,93,95,102,104,105,107,108,115,116,118,121,123,127,128,130,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,166,168,173,174,176,177,179,180,182,183,184,186,187,189,196,197,198,200,207,208,209,210,212,214,216,221,222,228,230,238,243,],[28,-115,70,-33,-115,-115,-115,-115,-115,-106,-113,-114,130,-115,-49,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-115,-34,-104,-115,175,-115,-106,-115,185,-115,-58,-115,-62,-63,-64,-65,191,-69,-70,-71,193,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-115,-115,-48,-105,207,-52,-55,-51,-55,-53,-108,-115,215,-67,-32,-115,-36,-111,-107,-115,-54,-115,229,-60,-66,-35,-115,-110,-115,-115,-59,]),'ACOR':([26,27,53,54,73,76,101,127,128,132,133,135,142,143,230,],[32,-7,90,94,32,94,90,90,-34,172,-39,94,90,-58,90,]),'COMA':([26,27,31,33,61,63,64,65,66,67,68,69,73,74,76,91,93,95,102,104,105,107,108,115,116,118,121,123,127,128,129,130,135,137,138,139,142,143,144,145,146,147,148,155,156,157,158,159,160,161,162,163,164,166,168,173,174,184,186,203,204,207,208,210,222,230,238,],[-115,-7,40,-9,-115,-115,-115,-115,-115,-106,-113,-114,-115,-8,-115,-49,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-115,-34,40,-104,-115,178,181,181,-115,-58,188,-62,-63,-64,-65,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,197,199,-48,-105,-108,213,225,225,-107,178,181,199,-115,213,]),'CTEI':([32,34,42,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,90,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,155,156,157,158,159,160,161,162,163,164,172,178,181,184,188,194,195,199,201,206,207,211,225,231,232,233,234,237,244,245,247,249,251,252,255,256,],[41,68,68,68,68,68,68,68,68,68,68,68,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,68,68,-105,68,-109,68,68,68,68,-80,68,-82,-83,68,-85,-86,68,68,68,68,68,68,-93,-94,68,-96,-97,-98,-99,68,-101,-102,-103,-104,68,68,-39,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,68,68,68,-108,68,68,68,68,-37,-50,-107,-56,68,-61,68,68,68,-57,-115,-76,-68,-73,68,68,-79,-72,]),'RETURN':([34,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,195,201,206,207,211,231,232,233,237,244,245,247,249,251,252,255,256,],[55,55,55,55,55,55,55,55,55,55,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,55,-37,-50,-107,-56,-61,55,55,-57,-115,-76,-68,-73,55,55,-79,-72,]),'READ':([34,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,195,201,206,207,211,231,232,233,237,244,245,247,249,251,252,255,256,],[56,56,56,56,56,56,56,56,56,56,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,56,-37,-50,-107,-56,-61,56,56,-57,-115,-76,-68,-73,56,56,-79,-72,]),'WRITE':([34,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,195,201,206,207,211,231,232,233,237,244,245,247,249,251,252,255,256,],[57,57,57,57,57,57,57,57,57,57,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,57,-37,-50,-107,-56,-61,57,57,-57,-115,-76,-68,-73,57,57,-79,-72,]),'IF':([34,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,195,201,206,207,211,231,232,233,237,244,245,247,249,251,252,255,256,],[58,58,58,58,58,58,58,58,58,58,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,58,-37,-50,-107,-56,-61,58,58,-57,-115,-76,-68,-73,58,58,-79,-72,]),'FOR':([34,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,195,201,206,207,211,231,232,233,237,244,245,247,249,251,252,255,256,],[60,60,60,60,60,60,60,60,60,60,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,60,-37,-50,-107,-56,-61,60,60,-57,-115,-76,-68,-73,60,60,-79,-72,]),'WHILE':([34,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,195,201,206,207,211,231,232,233,237,244,245,247,249,251,252,255,256,],[62,62,62,62,62,62,62,62,62,62,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,62,-37,-50,-107,-56,-61,62,62,-57,-115,-76,-68,-73,62,62,-79,-72,]),'CTEF':([34,42,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,90,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,155,156,157,158,159,160,161,162,163,164,172,178,181,184,188,194,195,199,201,206,207,211,225,231,232,233,234,237,244,245,247,249,251,252,255,256,],[69,69,69,69,69,69,69,69,69,69,69,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,69,69,-105,69,-109,69,69,69,69,-80,69,-82,-83,69,-85,-86,69,69,69,69,69,69,-93,-94,69,-96,-97,-98,-99,69,-101,-102,-103,-104,69,69,-39,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,69,69,69,-108,69,69,69,69,-37,-50,-107,-56,69,-61,69,69,69,-57,-115,-76,-68,-73,69,69,-79,-72,]),'CCOR':([41,61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,134,140,155,156,157,158,159,160,161,162,163,164,172,184,202,203,204,205,207,224,225,226,227,236,],[74,-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,173,184,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-115,-108,223,-115,-115,-42,-107,-40,-115,-44,-41,-43,]),'CLLA':([43,44,45,46,47,48,49,50,51,52,54,61,63,64,65,66,67,68,69,76,78,79,80,81,82,83,84,85,86,87,88,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,201,206,207,211,220,231,237,239,240,244,245,247,249,253,254,255,256,],[77,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-106,-113,-114,-115,-18,-27,-28,-19,-20,-21,-22,-23,-24,-25,-26,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,-37,-50,-107,-56,235,-61,-57,244,245,-115,-76,-68,-73,255,256,-79,-72,]),'IGUAL':([53,54,89,91,101,154,173,],[-115,-38,133,-49,-115,194,-48,]),'DIV':([54,66,67,68,69,76,93,95,130,135,138,174,184,207,],[-115,124,-106,-113,-114,-115,-105,-109,-104,-115,-106,-105,-108,-107,]),'POR':([54,66,67,68,69,76,93,95,130,135,138,174,184,207,],[-115,125,-106,-113,-114,-115,-105,-109,-104,-115,-106,-105,-108,-107,]),'MENOS':([54,65,66,67,68,69,76,93,95,121,123,130,135,138,164,174,184,207,],[-115,119,-115,-106,-113,-114,-115,-105,-109,-99,-101,-104,-115,-106,-100,-105,-108,-107,]),'MAS':([54,65,66,67,68,69,76,93,95,121,123,130,135,138,164,174,184,207,],[-115,120,-115,-106,-113,-114,-115,-105,-109,-99,-101,-104,-115,-106,-100,-105,-108,-107,]),'MAYQ':([54,64,65,66,67,68,69,76,93,95,116,118,121,123,130,135,138,163,164,174,184,207,],[-115,109,-115,-115,-106,-113,-114,-115,-105,-109,-94,-96,-99,-101,-104,-115,-106,-95,-100,-105,-108,-107,]),'MENQ':([54,64,65,66,67,68,69,76,93,95,116,118,121,123,130,135,138,163,164,174,184,207,],[-115,110,-115,-115,-106,-113,-114,-115,-105,-109,-94,-96,-99,-101,-104,-115,-106,-95,-100,-105,-108,-107,]),'MAYI':([54,64,65,66,67,68,69,76,93,95,116,118,121,123,130,135,138,163,164,174,184,207,],[-115,111,-115,-115,-106,-113,-114,-115,-105,-109,-94,-96,-99,-101,-104,-115,-106,-95,-100,-105,-108,-107,]),'MENI':([54,64,65,66,67,68,69,76,93,95,116,118,121,123,130,135,138,163,164,174,184,207,],[-115,112,-115,-115,-106,-113,-114,-115,-105,-109,-94,-96,-99,-101,-104,-115,-106,-95,-100,-105,-108,-107,]),'IGUALIGUAL':([54,64,65,66,67,68,69,76,93,95,116,118,121,123,130,135,138,163,164,174,184,207,],[-115,113,-115,-115,-106,-113,-114,-115,-105,-109,-94,-96,-99,-101,-104,-115,-106,-95,-100,-105,-108,-107,]),'DIF':([54,64,65,66,67,68,69,76,93,95,116,118,121,123,130,135,138,163,164,174,184,207,],[-115,114,-115,-115,-106,-113,-114,-115,-105,-109,-94,-96,-99,-101,-104,-115,-106,-95,-100,-105,-108,-107,]),'AND':([54,63,64,65,66,67,68,69,76,93,95,108,115,116,118,121,123,130,135,138,157,158,159,160,161,162,163,164,174,184,207,],[-115,106,-115,-115,-115,-106,-113,-114,-115,-105,-109,-86,-93,-94,-96,-99,-101,-104,-115,-106,-87,-88,-89,-90,-91,-92,-95,-100,-105,-108,-107,]),'OR':([54,61,63,64,65,66,67,68,69,76,93,95,105,107,108,115,116,118,121,123,130,135,138,156,157,158,159,160,161,162,163,164,174,184,207,],[-115,103,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-83,-85,-86,-93,-94,-96,-99,-101,-104,-115,-106,-84,-87,-88,-89,-90,-91,-92,-95,-100,-105,-108,-107,]),'TO':([61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,207,219,],[-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,-107,234,]),'DO':([61,63,64,65,66,67,68,69,76,93,95,102,104,105,107,108,115,116,118,121,123,130,155,156,157,158,159,160,161,162,163,164,184,192,193,207,241,],[-115,-115,-115,-115,-115,-106,-113,-114,-115,-105,-109,-80,-82,-83,-85,-86,-93,-94,-96,-99,-101,-104,-81,-84,-87,-88,-89,-90,-91,-92,-95,-100,-108,218,-78,-107,246,]),'CTEC':([92,98,132,133,172,178,181,188,225,],[139,148,171,-39,204,139,139,148,204,]),'STRING':([98,188,],[147,147,]),'TRUE':([99,100,],[151,151,]),'FALSE':([99,100,],[152,152,]),'THEN':([190,191,],[217,-75,]),'ELSE':([244,],[250,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'agregarTablaFunciones':([2,],[3,]),'varss':([3,126,],[5,165,]),'empty':([3,5,6,26,30,38,44,45,46,47,48,49,50,51,52,53,54,61,63,64,65,66,73,76,101,126,127,135,137,138,139,142,144,166,168,172,186,197,203,204,208,210,222,225,230,235,238,244,],[7,11,14,33,37,14,80,80,80,80,80,80,80,80,80,91,95,104,107,115,118,123,33,95,91,7,91,95,179,182,182,91,189,198,200,205,214,37,226,226,179,182,200,205,91,11,214,249,]),'funcs':([5,235,],[9,242,]),'vars':([6,38,],[12,72,]),'tipo':([6,10,30,38,197,],[13,21,36,13,36,]),'funcsp':([10,],[19,]),'insertFunc':([19,],[24,]),'insertVar':([22,40,],[26,73,]),'funcspp':([24,],[29,]),'varsppp':([26,73,],[31,129,]),'params':([30,197,],[35,221,]),'varspp':([31,129,],[38,167,]),'estatutos':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[43,79,79,79,79,79,79,79,79,79,220,239,240,253,254,]),'asig':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'llamada':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'return':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'lectura':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'escritura':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'cond':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'while':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'for':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'exp':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[52,75,52,52,52,52,52,52,52,52,52,134,137,140,141,146,150,150,155,168,170,203,208,210,146,219,52,222,203,52,52,241,52,52,]),'varAs':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'saveWhile':([34,44,45,46,47,48,49,50,51,52,195,232,233,251,252,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'texp':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,106,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,156,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'gexp':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,106,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'mexp':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,106,109,110,111,112,113,114,117,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,157,158,159,160,161,162,163,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'termino':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,106,109,110,111,112,113,114,117,122,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,164,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'factor':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,106,109,110,111,112,113,114,117,122,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ctes':([34,42,44,45,46,47,48,49,50,51,52,90,92,94,96,98,99,100,103,106,109,110,111,112,113,114,117,122,131,132,172,178,181,188,194,195,199,225,232,233,234,251,252,],[67,67,67,67,67,67,67,67,67,67,67,67,138,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,138,138,67,67,67,67,67,67,67,67,67,67,]),'estatutop':([44,45,46,47,48,49,50,51,52,],[78,81,82,83,84,85,86,87,88,]),'ididx':([53,101,127,142,230,],[89,154,166,186,238,]),'factorp':([54,76,135,],[93,93,174,]),'expp':([61,],[102,]),'texpp':([63,],[105,]),'gexpp':([64,],[108,]),'mexpp':([65,],[116,]),'operSR':([65,],[117,]),'terminop':([66,],[121,]),'oper':([66,],[122,]),'insertParams':([71,],[127,]),'igualAs':([89,],[132,]),'args':([92,178,181,],[136,209,209,]),'readId':([97,213,],[142,230,]),'escriturap':([98,188,],[144,216,]),'pushEsc':([98,188,],[145,145,]),'condp':([99,100,],[149,153,]),'asigpp':([132,],[169,]),'factorpp':([137,168,208,222,],[176,176,228,228,]),'argsp':([137,138,139,208,210,],[177,180,183,177,177,]),'escriturapp':([144,],[187,]),'checkCond':([149,],[190,]),'checkWhileCond':([153,],[192,]),'paramsp':([166,],[196,]),'asigp':([172,225,],[202,236,]),'lecturapp':([186,238,],[212,243,]),'asigppp':([203,204,],[224,227,]),'condpp':([244,],[247,]),'checkElse':([244,],[248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA estatutos CLLA','program',10,'p_program','lex.py',525),
  ('agregarTablaFunciones -> ID PTCOMA','agregarTablaFunciones',2,'p_agregarTablaFunciones','lex.py',529),
  ('varss -> VARS vars','varss',2,'p_varss','lex.py',539),
  ('varss -> empty','varss',1,'p_varss','lex.py',540),
  ('vars -> tipo DOSPNTS insertVar varsppp varspp vars','vars',6,'p_vars','lex.py',545),
  ('vars -> empty','vars',1,'p_vars','lex.py',546),
  ('insertVar -> ID','insertVar',1,'p_insertVar','lex.py',550),
  ('varsppp -> ACOR CTEI CCOR','varsppp',3,'p_varsppp','lex.py',560),
  ('varsppp -> empty','varsppp',1,'p_varsppp','lex.py',561),
  ('varspp -> PTCOMA','varspp',1,'p_varspp','lex.py',567),
  ('varspp -> COMA insertVar varsppp varspp','varspp',4,'p_varspp','lex.py',568),
  ('funcs -> FUNCTION funcsp insertFunc funcspp','funcs',4,'p_funcs','lex.py',575),
  ('funcs -> empty','funcs',1,'p_funcs','lex.py',576),
  ('insertFunc -> ID','insertFunc',1,'p_insertFunc','lex.py',587),
  ('funcspp -> APAR params CPAR PTCOMA varss ALLA estatutos CLLA funcs','funcspp',9,'p_funcspp','lex.py',596),
  ('funcsp -> VOID','funcsp',1,'p_funcsp','lex.py',606),
  ('funcsp -> tipo','funcsp',1,'p_funcsp','lex.py',607),
  ('estatutos -> asig estatutop','estatutos',2,'p_estatutos','lex.py',620),
  ('estatutos -> llamada estatutop','estatutos',2,'p_estatutos','lex.py',621),
  ('estatutos -> return estatutop','estatutos',2,'p_estatutos','lex.py',622),
  ('estatutos -> lectura estatutop','estatutos',2,'p_estatutos','lex.py',623),
  ('estatutos -> escritura estatutop','estatutos',2,'p_estatutos','lex.py',624),
  ('estatutos -> cond estatutop','estatutos',2,'p_estatutos','lex.py',625),
  ('estatutos -> while estatutop','estatutos',2,'p_estatutos','lex.py',626),
  ('estatutos -> for estatutop','estatutos',2,'p_estatutos','lex.py',627),
  ('estatutos -> exp estatutop','estatutos',2,'p_estatutos','lex.py',628),
  ('estatutop -> estatutos','estatutop',1,'p_estatutop','lex.py',634),
  ('estatutop -> empty','estatutop',1,'p_estatutop','lex.py',635),
  ('tipo -> INT','tipo',1,'p_tipo','lex.py',642),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lex.py',643),
  ('tipo -> CHAR','tipo',1,'p_tipo','lex.py',644),
  ('params -> tipo DOSPNTS insertParams ididx paramsp','params',5,'p_params','lex.py',655),
  ('params -> empty','params',1,'p_params','lex.py',656),
  ('insertParams -> ID','insertParams',1,'p_insertParams','lex.py',660),
  ('paramsp -> COMA params','paramsp',2,'p_paramsp','lex.py',672),
  ('paramsp -> empty','paramsp',1,'p_paramsp','lex.py',673),
  ('asig -> varAs ididx igualAs asigpp PTCOMA','asig',5,'p_asig','lex.py',680),
  ('varAs -> ID','varAs',1,'p_varAs','lex.py',695),
  ('igualAs -> IGUAL','igualAs',1,'p_igualAs','lex.py',704),
  ('asigp -> exp asigppp','asigp',2,'p_asigp','lex.py',720),
  ('asigp -> CTEC asigppp','asigp',2,'p_asigp','lex.py',721),
  ('asigp -> empty','asigp',1,'p_asigp','lex.py',722),
  ('asigppp -> COMA asigp','asigppp',2,'p_asigppp','lex.py',732),
  ('asigppp -> empty','asigppp',1,'p_asigppp','lex.py',733),
  ('asigpp -> exp','asigpp',1,'p_asigpp','lex.py',739),
  ('asigpp -> CTEC','asigpp',1,'p_asigpp','lex.py',740),
  ('asigpp -> ACOR asigp CCOR','asigpp',3,'p_asigpp','lex.py',741),
  ('ididx -> ACOR exp CCOR','ididx',3,'p_ididx','lex.py',749),
  ('ididx -> empty','ididx',1,'p_ididx','lex.py',750),
  ('llamada -> ID APAR args CPAR PTCOMA','llamada',5,'p_llamada','lex.py',756),
  ('args -> ctes argsp','args',2,'p_args','lex.py',762),
  ('args -> exp argsp','args',2,'p_args','lex.py',763),
  ('args -> CTEC argsp','args',2,'p_args','lex.py',764),
  ('argsp -> COMA args','argsp',2,'p_argsp','lex.py',769),
  ('argsp -> empty','argsp',1,'p_argsp','lex.py',770),
  ('return -> RETURN APAR exp CPAR PTCOMA','return',5,'p_return','lex.py',776),
  ('lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA','lectura',7,'p_lectura','lex.py',792),
  ('readId -> ID','readId',1,'p_readId','lex.py',796),
  ('lecturapp -> COMA readId ididx lecturapp','lecturapp',4,'p_lecturapp','lex.py',804),
  ('lecturapp -> empty','lecturapp',1,'p_lecturapp','lex.py',805),
  ('escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA','escritura',6,'p_escritura','lex.py',812),
  ('escriturap -> pushEsc','escriturap',1,'p_escriturap','lex.py',817),
  ('escriturap -> exp','escriturap',1,'p_escriturap','lex.py',818),
  ('pushEsc -> STRING','pushEsc',1,'p_pushEsc','lex.py',829),
  ('pushEsc -> CTEC','pushEsc',1,'p_pushEsc','lex.py',830),
  ('escriturapp -> COMA escriturap','escriturapp',2,'p_escriturapp','lex.py',838),
  ('escriturapp -> empty','escriturapp',1,'p_escriturapp','lex.py',839),
  ('cond -> IF APAR condp checkCond THEN ALLA estatutos CLLA condpp','cond',9,'p_cond','lex.py',845),
  ('condp -> exp','condp',1,'p_condp','lex.py',858),
  ('condp -> TRUE','condp',1,'p_condp','lex.py',859),
  ('condp -> FALSE','condp',1,'p_condp','lex.py',860),
  ('condpp -> checkElse ALLA estatutos CLLA','condpp',4,'p_condpp','lex.py',865),
  ('condpp -> empty','condpp',1,'p_condpp','lex.py',866),
  ('checkElse -> ELSE','checkElse',1,'p_checkElse','lex.py',871),
  ('checkCond -> CPAR','checkCond',1,'p_checkCond','lex.py',887),
  ('while -> saveWhile APAR condp checkWhileCond DO ALLA estatutos CLLA','while',8,'p_while','lex.py',904),
  ('saveWhile -> WHILE','saveWhile',1,'p_saveWhile','lex.py',919),
  ('checkWhileCond -> CPAR','checkWhileCond',1,'p_checkWhileCond','lex.py',926),
  ('for -> FOR ID ididx IGUAL exp TO exp DO ALLA estatutos CLLA','for',11,'p_for','lex.py',947),
  ('exp -> texp expp','exp',2,'p_exp','lex.py',953),
  ('expp -> OR exp','expp',2,'p_expp','lex.py',957),
  ('expp -> empty','expp',1,'p_expp','lex.py',958),
  ('texp -> gexp texpp','texp',2,'p_texp','lex.py',964),
  ('texpp -> AND texp','texpp',2,'p_texpp','lex.py',968),
  ('texpp -> empty','texpp',1,'p_texpp','lex.py',969),
  ('gexp -> mexp gexpp','gexp',2,'p_gexp','lex.py',975),
  ('gexpp -> MAYQ mexp','gexpp',2,'p_gexpp','lex.py',979),
  ('gexpp -> MENQ mexp','gexpp',2,'p_gexpp','lex.py',980),
  ('gexpp -> MAYI mexp','gexpp',2,'p_gexpp','lex.py',981),
  ('gexpp -> MENI mexp','gexpp',2,'p_gexpp','lex.py',982),
  ('gexpp -> IGUALIGUAL mexp','gexpp',2,'p_gexpp','lex.py',983),
  ('gexpp -> DIF mexp','gexpp',2,'p_gexpp','lex.py',984),
  ('gexpp -> empty','gexpp',1,'p_gexpp','lex.py',985),
  ('mexp -> termino mexpp','mexp',2,'p_mexp','lex.py',1002),
  ('mexpp -> operSR mexp','mexpp',2,'p_mexpp','lex.py',1007),
  ('mexpp -> empty','mexpp',1,'p_mexpp','lex.py',1008),
  ('operSR -> MENOS','operSR',1,'p_operSR','lex.py',1013),
  ('operSR -> MAS','operSR',1,'p_operSR','lex.py',1014),
  ('termino -> factor terminop','termino',2,'p_termino','lex.py',1022),
  ('terminop -> oper termino','terminop',2,'p_terminop','lex.py',1044),
  ('terminop -> empty','terminop',1,'p_terminop','lex.py',1045),
  ('oper -> DIV','oper',1,'p_oper','lex.py',1050),
  ('oper -> POR','oper',1,'p_oper','lex.py',1051),
  ('factor -> APAR exp CPAR','factor',3,'p_factor','lex.py',1058),
  ('factor -> ID factorp','factor',2,'p_factor','lex.py',1059),
  ('factor -> ctes','factor',1,'p_factor','lex.py',1060),
  ('factorp -> APAR exp factorpp CPAR','factorp',4,'p_factorp','lex.py',1095),
  ('factorp -> ACOR exp CCOR','factorp',3,'p_factorp','lex.py',1096),
  ('factorp -> empty','factorp',1,'p_factorp','lex.py',1097),
  ('factorpp -> COMA exp factorpp','factorpp',3,'p_factorpp','lex.py',1105),
  ('factorpp -> empty','factorpp',1,'p_factorpp','lex.py',1106),
  ('ctes -> ID factorp','ctes',2,'p_ctes','lex.py',1113),
  ('ctes -> CTEI','ctes',1,'p_ctes','lex.py',1114),
  ('ctes -> CTEF','ctes',1,'p_ctes','lex.py',1115),
  ('empty -> <empty>','empty',0,'p_empty','lex.py',1130),
]
