
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACOR ALLA AND APAR BOOL CCOR CHAR CLLA COMA CPAR CTEC CTEF CTEI DIF DIV DO DOSPNTS ELSE FALSE FLOAT FOR FUNCTION ID IF IGUAL IGUALIGUAL INT MAIN MAS MAYI MAYQ MENI MENOS MENQ NOT OR POR PROGRAM PTCOMA READ RETURN STR STRING THEN TO TRUE VARS VOID WHILE WRITEprogram : PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLAagregarTablaFunciones : ID PTCOMApoptomain : varss : VARS vars\n             | empty\n    vars : tipo DOSPNTS insertVar varsppp varspp vars\n            | empty\n    insertVar : IDvarsppp : initDim CTEI setDim\n               | empty\n    setDim : CCORinitDim : ACORvarspp : PTCOMA\n              | COMA insertVar varsppp varspp\n    funcs : FUNCTION funcsp insertFunc funcspp\n             | empty\n    insertFunc : IDfuncspp : APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcsupdateParamTable : endfunction : addsize : funcsp : VOID\n              | tipo\n    estatutos : asig estatutop\n                 | return estatutop\n                 | lectura estatutop\n                 | escritura estatutop\n                 | cond estatutop\n                 | while estatutop\n                 | for estatutop\n                 | exp estatutop\n    estatutop : estatutos\n                 | empty\n    tipo : INT\n            | FLOAT\n            | CHAR\n    params : tipo DOSPNTS insertParams ididx paramsp\n              | empty\n    insertParams : ID\n    paramsp : COMA params\n               | empty\n    asig : varAs ididx igualAs asigpp PTCOMAvarAs : IDigualAs : IGUALasigp : exp asigppp\n             | empty\n    asigppp : COMA asigp\n               | empty\n    asigpp : expididx : corArr exp ver CCOR\n             | empty\n    corArr : ACORver : return : RETURN APAR exp CPAR PTCOMAlectura : READ APAR readId ididx lecturapp CPAR PTCOMAreadId : ID\n    lecturapp : COMA readId ididx lecturapp\n                 | empty\n    escritura : WRITE APAR escriturap escriturapp CPAR PTCOMAescriturap : pushEsc\n                  | exp\n    pushEsc : STRING\n               | CTEC\n    escriturapp : COMA escriturap\n                   | empty\n    cond : IF APAR exp checkCond THEN ALLA estatutos CLLA condppcondpp : checkElse ALLA estatutos CLLA\n              | empty\n    checkElse : ELSE\n    checkCond : CPAR\n    while : saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLAsaveWhile : WHILE\n    checkWhileCond : CPAR\n    for : FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLAvarFor : ID\n    initFor : TO\n    beforeDo : DO\n    exp : texp exppexpp : OR exp\n            | empty\n    texp : gexp texpptexpp : andCheck texp\n             | empty\n     andCheck : AND\n    gexp : mexp gexppgexpp : addPO mexp\n             | empty\n    addPO : MAYQ\n             | MENQ\n             | MAYI\n             | MENI\n             | IGUAL IGUAL\n             | DIF\n    mexp : termino mexppmexpp : operSR mexp\n            | empty\n    operSR : MENOS\n              | MAS\n    termino : factor terminopterminop : oper termino\n                | empty\n    oper : DIV\n            | POR\n    meteFondo : APARsacaFondo : CPARfactor : meteFondo exp sacaFondo\n              | ctes\n    factorp : APAR createEra exp valParams factorpp cparParams\n               | ididx\n    cparParams : CPARcreateEra : valParams : factorpp : COMA exp valParams factorpp\n                | empty\n    ctes : CTEC\n            | CTEI\n            | CTEF\n            | ID validateExistance factorp\n    validateExistance : empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,83,],[0,-1,]),'ID':([2,15,16,17,19,20,21,22,35,41,43,45,50,52,53,54,55,56,57,58,59,66,67,68,70,71,72,73,74,75,76,77,78,95,96,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,133,137,138,151,152,153,154,155,156,157,158,159,160,161,172,178,179,180,182,183,184,186,194,197,198,199,200,201,204,210,214,215,218,219,222,224,226,229,233,234,],[4,-34,-35,-36,25,-22,-23,27,-3,27,68,81,-104,68,68,68,68,68,68,68,68,104,-120,-119,-120,-120,-120,-120,133,-107,-115,-116,-117,133,-51,-52,133,142,133,133,133,-78,133,-80,-120,-81,133,-83,-84,-85,133,-87,-88,-89,-90,-91,-93,-94,133,-96,-97,-98,-99,133,-101,-102,-103,-119,133,-44,-79,-118,-111,-109,-82,-86,-92,-95,-100,-106,-105,133,133,133,-21,-42,-50,-54,142,68,-59,68,68,133,-76,-55,133,-120,-71,-108,-110,-66,-68,68,68,-74,-67,]),'VARS':([3,8,134,],[6,-2,6,]),'FUNCTION':([3,5,6,7,8,12,14,39,40,46,136,212,221,],[-120,10,-120,-5,-2,-4,-7,-120,-13,-6,-14,-20,10,]),'MAIN':([3,5,6,7,8,9,11,12,14,29,39,40,46,136,212,221,228,],[-120,-120,-120,-5,-2,18,-16,-4,-7,-15,-120,-13,-6,-14,-20,-120,-18,]),'PTCOMA':([4,26,27,31,33,44,47,48,49,67,70,71,72,73,75,76,77,78,79,82,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,166,167,169,183,188,195,218,219,],[8,-120,-8,40,-10,-19,-120,-9,-11,-120,-120,-120,-120,-120,-107,-115,-116,-117,134,40,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,182,-49,184,-50,197,204,-108,-110,]),'INT':([6,10,30,39,40,136,164,],[15,15,15,15,-13,-14,15,]),'FLOAT':([6,10,30,39,40,136,164,],[16,16,16,16,-13,-14,16,]),'CHAR':([6,10,30,39,40,136,164,],[17,17,17,17,-13,-14,17,]),'ALLA':([6,7,12,14,28,39,40,46,134,136,162,190,191,216,217,223,225,],[-120,-5,-4,-7,35,-120,-13,-6,-120,-14,180,198,199,226,-77,229,-69,]),'VOID':([10,],[20,]),'DOSPNTS':([13,15,16,17,37,],[22,-34,-35,-36,45,]),'APAR':([18,24,25,35,43,50,52,53,54,55,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,95,96,97,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,133,137,138,151,152,153,154,155,156,157,158,159,160,161,172,178,179,180,182,183,184,194,197,198,199,200,201,204,210,214,215,218,219,222,224,226,229,233,234,],[23,30,-17,-3,50,-104,50,50,50,50,50,50,50,50,98,99,100,101,102,-120,-119,-72,-120,-120,-120,-120,50,-107,-115,-116,-117,50,-51,-52,50,50,50,50,-78,50,-80,153,-81,50,-83,-84,-85,50,-87,-88,-89,-90,-91,-93,-94,50,-96,-97,-98,-99,50,-101,-102,-103,-119,50,-44,-79,-118,-111,-109,-82,-86,-92,-95,-100,-106,-105,50,50,50,-21,-42,-50,-54,50,-59,50,50,50,-76,-55,50,-120,-71,-108,-110,-66,-68,50,50,-74,-67,]),'CPAR':([23,30,36,38,67,70,71,72,73,75,76,77,78,80,81,96,105,107,108,109,111,113,115,122,124,127,129,132,133,135,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,160,161,163,164,165,170,171,173,181,183,185,187,189,193,196,202,205,209,211,213,218,219,220,227,231,],[28,-120,44,-38,-120,-120,-120,-120,-120,-107,-115,-116,-117,-120,-39,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,161,-119,-120,169,-120,-56,-120,-60,-61,-62,-63,175,177,-79,-118,-109,-82,-86,-95,-100,-106,-105,-37,-120,-41,-120,188,-65,-40,-50,195,-58,-64,-112,-120,-120,-120,219,-114,-57,-108,-110,-112,-120,-113,]),'ACOR':([26,27,47,60,68,80,81,103,104,108,133,141,142,196,],[34,-8,34,97,-43,97,-39,97,-75,97,-119,97,-56,97,]),'COMA':([26,27,31,33,47,48,49,67,70,71,72,73,75,76,77,78,80,81,82,96,105,107,108,109,111,113,115,122,124,127,129,133,135,141,142,143,144,145,146,147,151,152,154,155,156,158,159,160,161,170,183,193,196,202,205,218,219,220,227,],[-120,-8,41,-10,-120,-9,-11,-120,-120,-120,-120,-120,-107,-115,-116,-117,-120,-39,41,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,164,-120,-56,172,-60,-61,-62,-63,-79,-118,-109,-82,-86,-95,-100,-106,-105,186,-50,-112,-120,210,186,-108,-110,-112,210,]),'CTEI':([32,34,35,43,50,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,78,95,96,97,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,133,137,138,151,152,153,154,155,156,157,158,159,160,161,172,178,179,180,182,183,184,194,197,198,199,200,201,204,210,214,215,218,219,222,224,226,229,233,234,],[42,-12,-3,77,-104,77,77,77,77,77,77,77,77,-120,-119,-120,-120,-120,-120,77,-107,-115,-116,-117,77,-51,-52,77,77,77,77,-78,77,-80,-120,-81,77,-83,-84,-85,77,-87,-88,-89,-90,-91,-93,-94,77,-96,-97,-98,-99,77,-101,-102,-103,-119,77,-44,-79,-118,-111,-109,-82,-86,-92,-95,-100,-106,-105,77,77,77,-21,-42,-50,-54,77,-59,77,77,77,-76,-55,77,-120,-71,-108,-110,-66,-68,77,77,-74,-67,]),'RETURN':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,180,182,183,184,194,197,198,199,204,214,215,218,219,222,224,226,229,233,234,],[-3,61,61,61,61,61,61,61,61,61,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-21,-42,-50,-54,61,-59,61,61,-55,-120,-71,-108,-110,-66,-68,61,61,-74,-67,]),'READ':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,180,182,183,184,194,197,198,199,204,214,215,218,219,222,224,226,229,233,234,],[-3,62,62,62,62,62,62,62,62,62,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-21,-42,-50,-54,62,-59,62,62,-55,-120,-71,-108,-110,-66,-68,62,62,-74,-67,]),'WRITE':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,180,182,183,184,194,197,198,199,204,214,215,218,219,222,224,226,229,233,234,],[-3,63,63,63,63,63,63,63,63,63,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-21,-42,-50,-54,63,-59,63,63,-55,-120,-71,-108,-110,-66,-68,63,63,-74,-67,]),'IF':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,180,182,183,184,194,197,198,199,204,214,215,218,219,222,224,226,229,233,234,],[-3,64,64,64,64,64,64,64,64,64,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-21,-42,-50,-54,64,-59,64,64,-55,-120,-71,-108,-110,-66,-68,64,64,-74,-67,]),'FOR':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,180,182,183,184,194,197,198,199,204,214,215,218,219,222,224,226,229,233,234,],[-3,66,66,66,66,66,66,66,66,66,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-21,-42,-50,-54,66,-59,66,66,-55,-120,-71,-108,-110,-66,-68,66,66,-74,-67,]),'WHILE':([35,43,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,180,182,183,184,194,197,198,199,204,214,215,218,219,222,224,226,229,233,234,],[-3,69,69,69,69,69,69,69,69,69,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-21,-42,-50,-54,69,-59,69,69,-55,-120,-71,-108,-110,-66,-68,69,69,-74,-67,]),'CTEC':([35,43,50,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,78,95,96,97,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,133,137,138,151,152,153,154,155,156,157,158,159,160,161,172,178,179,180,182,183,184,194,197,198,199,200,201,204,210,214,215,218,219,222,224,226,229,233,234,],[-3,76,-104,76,76,76,76,76,76,76,76,-120,-119,-120,-120,-120,-120,76,-107,-115,-116,-117,76,-51,-52,76,147,76,76,-78,76,-80,-120,-81,76,-83,-84,-85,76,-87,-88,-89,-90,-91,-93,-94,76,-96,-97,-98,-99,76,-101,-102,-103,-119,76,-44,-79,-118,-111,-109,-82,-86,-92,-95,-100,-106,-105,147,76,76,-21,-42,-50,-54,76,-59,76,76,76,-76,-55,76,-120,-71,-108,-110,-66,-68,76,76,-74,-67,]),'CTEF':([35,43,50,52,53,54,55,56,57,58,59,67,68,70,71,72,73,74,75,76,77,78,95,96,97,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,133,137,138,151,152,153,154,155,156,157,158,159,160,161,172,178,179,180,182,183,184,194,197,198,199,200,201,204,210,214,215,218,219,222,224,226,229,233,234,],[-3,78,-104,78,78,78,78,78,78,78,78,-120,-119,-120,-120,-120,-120,78,-107,-115,-116,-117,78,-51,-52,78,78,78,78,-78,78,-80,-120,-81,78,-83,-84,-85,78,-87,-88,-89,-90,-91,-93,-94,78,-96,-97,-98,-99,78,-101,-102,-103,-119,78,-44,-79,-118,-111,-109,-82,-86,-92,-95,-100,-106,-105,78,78,78,-21,-42,-50,-54,78,-59,78,78,78,-76,-55,78,-120,-71,-108,-110,-66,-68,78,78,-74,-67,]),'CCOR':([42,67,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,139,151,152,154,155,156,158,159,160,161,168,183,218,219,],[49,-120,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-53,-79,-118,-109,-82,-86,-95,-100,-106,-105,183,-50,-108,-110,]),'CLLA':([51,52,53,54,55,56,57,58,59,67,68,70,71,72,73,75,76,77,78,84,85,86,87,88,89,90,91,92,93,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,182,183,184,197,203,204,206,207,214,215,218,219,222,224,230,232,233,234,],[83,-120,-120,-120,-120,-120,-120,-120,-120,-120,-119,-120,-120,-120,-120,-107,-115,-116,-117,-24,-32,-33,-25,-26,-27,-28,-29,-30,-31,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-42,-50,-54,-59,212,-55,214,215,-120,-71,-108,-110,-66,-68,233,234,-74,-67,]),'IGUAL':([60,68,71,72,73,75,76,77,78,94,96,103,104,108,120,122,124,127,129,133,147,150,152,154,158,159,160,161,183,218,219,],[-120,-43,120,-120,-120,-107,-115,-116,-117,138,-51,-120,-75,-120,157,-94,-96,-99,-101,-119,-115,178,-118,-109,-95,-100,-106,-105,-50,-108,-110,]),'OR':([67,68,70,71,72,73,75,76,77,78,96,108,109,111,113,115,122,124,127,129,133,147,152,154,155,156,158,159,160,161,183,218,219,],[106,-119,-120,-120,-120,-120,-107,-115,-116,-117,-51,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-115,-118,-109,-82,-86,-95,-100,-106,-105,-50,-108,-110,]),'TO':([67,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,183,192,218,219,],[-120,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,-50,201,-108,-110,]),'DO':([67,70,71,72,73,75,76,77,78,96,105,107,108,109,111,113,115,122,124,127,129,133,151,152,154,155,156,158,159,160,161,176,177,183,208,218,219,],[-120,-120,-120,-120,-120,-107,-115,-116,-117,-51,-78,-80,-120,-81,-83,-85,-87,-94,-96,-99,-101,-119,-79,-118,-109,-82,-86,-95,-100,-106,-105,191,-73,-50,217,-108,-110,]),'DIV':([68,73,75,76,77,78,96,108,133,147,152,154,160,161,183,218,219,],[-119,130,-107,-115,-116,-117,-51,-120,-119,-115,-118,-109,-106,-105,-50,-108,-110,]),'POR':([68,73,75,76,77,78,96,108,133,147,152,154,160,161,183,218,219,],[-119,131,-107,-115,-116,-117,-51,-120,-119,-115,-118,-109,-106,-105,-50,-108,-110,]),'MENOS':([68,72,73,75,76,77,78,96,108,127,129,133,147,152,154,159,160,161,183,218,219,],[-119,125,-120,-107,-115,-116,-117,-51,-120,-99,-101,-119,-115,-118,-109,-100,-106,-105,-50,-108,-110,]),'MAS':([68,72,73,75,76,77,78,96,108,127,129,133,147,152,154,159,160,161,183,218,219,],[-119,126,-120,-107,-115,-116,-117,-51,-120,-99,-101,-119,-115,-118,-109,-100,-106,-105,-50,-108,-110,]),'MAYQ':([68,71,72,73,75,76,77,78,96,108,122,124,127,129,133,147,152,154,158,159,160,161,183,218,219,],[-119,116,-120,-120,-107,-115,-116,-117,-51,-120,-94,-96,-99,-101,-119,-115,-118,-109,-95,-100,-106,-105,-50,-108,-110,]),'MENQ':([68,71,72,73,75,76,77,78,96,108,122,124,127,129,133,147,152,154,158,159,160,161,183,218,219,],[-119,117,-120,-120,-107,-115,-116,-117,-51,-120,-94,-96,-99,-101,-119,-115,-118,-109,-95,-100,-106,-105,-50,-108,-110,]),'MAYI':([68,71,72,73,75,76,77,78,96,108,122,124,127,129,133,147,152,154,158,159,160,161,183,218,219,],[-119,118,-120,-120,-107,-115,-116,-117,-51,-120,-94,-96,-99,-101,-119,-115,-118,-109,-95,-100,-106,-105,-50,-108,-110,]),'MENI':([68,71,72,73,75,76,77,78,96,108,122,124,127,129,133,147,152,154,158,159,160,161,183,218,219,],[-119,119,-120,-120,-107,-115,-116,-117,-51,-120,-94,-96,-99,-101,-119,-115,-118,-109,-95,-100,-106,-105,-50,-108,-110,]),'DIF':([68,71,72,73,75,76,77,78,96,108,122,124,127,129,133,147,152,154,158,159,160,161,183,218,219,],[-119,121,-120,-120,-107,-115,-116,-117,-51,-120,-94,-96,-99,-101,-119,-115,-118,-109,-95,-100,-106,-105,-50,-108,-110,]),'AND':([68,70,71,72,73,75,76,77,78,96,108,113,115,122,124,127,129,133,147,152,154,156,158,159,160,161,183,218,219,],[-119,112,-120,-120,-120,-107,-115,-116,-117,-51,-120,-85,-87,-94,-96,-99,-101,-119,-115,-118,-109,-86,-95,-100,-106,-105,-50,-108,-110,]),'STRING':([100,172,],[146,146,]),'THEN':([174,175,],[190,-70,]),'ELSE':([214,],[225,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'agregarTablaFunciones':([2,],[3,]),'varss':([3,134,],[5,162,]),'empty':([3,5,6,26,30,39,47,52,53,54,55,56,57,58,59,60,67,70,71,72,73,80,103,108,134,135,141,143,164,170,196,202,205,214,221,227,],[7,11,14,33,38,14,33,86,86,86,86,86,86,86,86,96,107,111,115,124,129,96,96,96,7,165,96,173,38,187,96,211,187,224,11,211,]),'funcs':([5,221,],[9,228,]),'vars':([6,39,],[12,46,]),'tipo':([6,10,30,39,164,],[13,21,37,13,37,]),'funcsp':([10,],[19,]),'insertFunc':([19,],[24,]),'insertVar':([22,41,],[26,47,]),'funcspp':([24,],[29,]),'varsppp':([26,47,],[31,82,]),'initDim':([26,47,],[32,32,]),'params':([30,164,],[36,181,]),'varspp':([31,82,],[39,136,]),'poptomain':([35,],[43,]),'setDim':([42,],[48,]),'estatutos':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[51,85,85,85,85,85,85,85,85,203,206,207,230,232,]),'asig':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'return':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'lectura':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'escritura':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cond':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'while':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'for':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'exp':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,137,172,178,179,194,198,199,200,210,226,229,],[59,59,59,59,59,59,59,59,59,132,139,140,145,148,149,151,167,145,192,193,59,59,59,208,220,59,59,]),'varAs':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'saveWhile':([43,52,53,54,55,56,57,58,59,194,198,199,226,229,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'texp':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,137,172,178,179,194,198,199,200,210,226,229,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,155,67,67,67,67,67,67,67,67,67,67,67,]),'gexp':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,137,172,178,179,194,198,199,200,210,226,229,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'mexp':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,114,123,137,172,178,179,194,198,199,200,210,226,229,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,156,158,71,71,71,71,71,71,71,71,71,71,71,]),'termino':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,114,123,128,137,172,178,179,194,198,199,200,210,226,229,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,159,72,72,72,72,72,72,72,72,72,72,72,]),'factor':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,114,123,128,137,172,178,179,194,198,199,200,210,226,229,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'meteFondo':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,114,123,128,137,172,178,179,194,198,199,200,210,226,229,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'ctes':([43,52,53,54,55,56,57,58,59,74,95,98,100,101,102,106,110,114,123,128,137,172,178,179,194,198,199,200,210,226,229,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'updateParamTable':([44,],[79,]),'insertParams':([45,],[80,]),'estatutop':([52,53,54,55,56,57,58,59,],[84,87,88,89,90,91,92,93,]),'ididx':([60,80,103,108,141,196,],[94,135,150,154,170,205,]),'corArr':([60,80,103,108,141,196,],[95,95,95,95,95,95,]),'varFor':([66,],[103,]),'expp':([67,],[105,]),'validateExistance':([68,133,],[108,108,]),'texpp':([70,],[109,]),'andCheck':([70,],[110,]),'gexpp':([71,],[113,]),'addPO':([71,],[114,]),'mexpp':([72,],[122,]),'operSR':([72,],[123,]),'terminop':([73,],[127,]),'oper':([73,],[128,]),'igualAs':([94,],[137,]),'readId':([99,186,],[141,196,]),'escriturap':([100,172,],[143,189,]),'pushEsc':([100,172,],[144,144,]),'factorp':([108,],[152,]),'sacaFondo':([132,],[160,]),'paramsp':([135,],[163,]),'asigpp':([137,],[166,]),'ver':([139,],[168,]),'escriturapp':([143,],[171,]),'checkCond':([148,],[174,]),'checkWhileCond':([149,],[176,]),'createEra':([153,],[179,]),'lecturapp':([170,205,],[185,213,]),'addsize':([180,],[194,]),'initFor':([192,],[200,]),'valParams':([193,220,],[202,227,]),'factorpp':([202,227,],[209,231,]),'beforeDo':([208,],[216,]),'cparParams':([209,],[218,]),'endfunction':([212,],[221,]),'condpp':([214,],[222,]),'checkElse':([214,],[223,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA','program',11,'p_program','lex.py',686),
  ('agregarTablaFunciones -> ID PTCOMA','agregarTablaFunciones',2,'p_agregarTablaFunciones','lex.py',690),
  ('poptomain -> <empty>','poptomain',0,'p_poptomain','lex.py',706),
  ('varss -> VARS vars','varss',2,'p_varss','lex.py',720),
  ('varss -> empty','varss',1,'p_varss','lex.py',721),
  ('vars -> tipo DOSPNTS insertVar varsppp varspp vars','vars',6,'p_vars','lex.py',726),
  ('vars -> empty','vars',1,'p_vars','lex.py',727),
  ('insertVar -> ID','insertVar',1,'p_insertVar','lex.py',731),
  ('varsppp -> initDim CTEI setDim','varsppp',3,'p_varsppp','lex.py',741),
  ('varsppp -> empty','varsppp',1,'p_varsppp','lex.py',742),
  ('setDim -> CCOR','setDim',1,'p_setDim','lex.py',746),
  ('initDim -> ACOR','initDim',1,'p_initDim','lex.py',762),
  ('varspp -> PTCOMA','varspp',1,'p_varspp','lex.py',778),
  ('varspp -> COMA insertVar varsppp varspp','varspp',4,'p_varspp','lex.py',779),
  ('funcs -> FUNCTION funcsp insertFunc funcspp','funcs',4,'p_funcs','lex.py',786),
  ('funcs -> empty','funcs',1,'p_funcs','lex.py',787),
  ('insertFunc -> ID','insertFunc',1,'p_insertFunc','lex.py',791),
  ('funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addsize estatutos CLLA endfunction funcs','funcspp',12,'p_funcspp','lex.py',804),
  ('updateParamTable -> <empty>','updateParamTable',0,'p_updateParamTable','lex.py',810),
  ('endfunction -> <empty>','endfunction',0,'p_endfunciton','lex.py',817),
  ('addsize -> <empty>','addsize',0,'p_addsize','lex.py',830),
  ('funcsp -> VOID','funcsp',1,'p_funcsp','lex.py',848),
  ('funcsp -> tipo','funcsp',1,'p_funcsp','lex.py',849),
  ('estatutos -> asig estatutop','estatutos',2,'p_estatutos','lex.py',862),
  ('estatutos -> return estatutop','estatutos',2,'p_estatutos','lex.py',863),
  ('estatutos -> lectura estatutop','estatutos',2,'p_estatutos','lex.py',864),
  ('estatutos -> escritura estatutop','estatutos',2,'p_estatutos','lex.py',865),
  ('estatutos -> cond estatutop','estatutos',2,'p_estatutos','lex.py',866),
  ('estatutos -> while estatutop','estatutos',2,'p_estatutos','lex.py',867),
  ('estatutos -> for estatutop','estatutos',2,'p_estatutos','lex.py',868),
  ('estatutos -> exp estatutop','estatutos',2,'p_estatutos','lex.py',869),
  ('estatutop -> estatutos','estatutop',1,'p_estatutop','lex.py',876),
  ('estatutop -> empty','estatutop',1,'p_estatutop','lex.py',877),
  ('tipo -> INT','tipo',1,'p_tipo','lex.py',884),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lex.py',885),
  ('tipo -> CHAR','tipo',1,'p_tipo','lex.py',886),
  ('params -> tipo DOSPNTS insertParams ididx paramsp','params',5,'p_params','lex.py',897),
  ('params -> empty','params',1,'p_params','lex.py',898),
  ('insertParams -> ID','insertParams',1,'p_insertParams','lex.py',902),
  ('paramsp -> COMA params','paramsp',2,'p_paramsp','lex.py',916),
  ('paramsp -> empty','paramsp',1,'p_paramsp','lex.py',917),
  ('asig -> varAs ididx igualAs asigpp PTCOMA','asig',5,'p_asig','lex.py',924),
  ('varAs -> ID','varAs',1,'p_varAs','lex.py',939),
  ('igualAs -> IGUAL','igualAs',1,'p_igualAs','lex.py',948),
  ('asigp -> exp asigppp','asigp',2,'p_asigp','lex.py',964),
  ('asigp -> empty','asigp',1,'p_asigp','lex.py',965),
  ('asigppp -> COMA asigp','asigppp',2,'p_asigppp','lex.py',973),
  ('asigppp -> empty','asigppp',1,'p_asigppp','lex.py',974),
  ('asigpp -> exp','asigpp',1,'p_asigpp','lex.py',980),
  ('ididx -> corArr exp ver CCOR','ididx',4,'p_ididx','lex.py',987),
  ('ididx -> empty','ididx',1,'p_ididx','lex.py',988),
  ('corArr -> ACOR','corArr',1,'p_corArr','lex.py',1023),
  ('ver -> <empty>','ver',0,'p_ver','lex.py',1038),
  ('return -> RETURN APAR exp CPAR PTCOMA','return',5,'p_return','lex.py',1080),
  ('lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA','lectura',7,'p_lectura','lex.py',1095),
  ('readId -> ID','readId',1,'p_readId','lex.py',1099),
  ('lecturapp -> COMA readId ididx lecturapp','lecturapp',4,'p_lecturapp','lex.py',1107),
  ('lecturapp -> empty','lecturapp',1,'p_lecturapp','lex.py',1108),
  ('escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA','escritura',6,'p_escritura','lex.py',1115),
  ('escriturap -> pushEsc','escriturap',1,'p_escriturap','lex.py',1120),
  ('escriturap -> exp','escriturap',1,'p_escriturap','lex.py',1121),
  ('pushEsc -> STRING','pushEsc',1,'p_pushEsc','lex.py',1132),
  ('pushEsc -> CTEC','pushEsc',1,'p_pushEsc','lex.py',1133),
  ('escriturapp -> COMA escriturap','escriturapp',2,'p_escriturapp','lex.py',1141),
  ('escriturapp -> empty','escriturapp',1,'p_escriturapp','lex.py',1142),
  ('cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp','cond',9,'p_cond','lex.py',1148),
  ('condpp -> checkElse ALLA estatutos CLLA','condpp',4,'p_condpp','lex.py',1161),
  ('condpp -> empty','condpp',1,'p_condpp','lex.py',1162),
  ('checkElse -> ELSE','checkElse',1,'p_checkElse','lex.py',1168),
  ('checkCond -> CPAR','checkCond',1,'p_checkCond','lex.py',1184),
  ('while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA','while',8,'p_while','lex.py',1202),
  ('saveWhile -> WHILE','saveWhile',1,'p_saveWhile','lex.py',1217),
  ('checkWhileCond -> CPAR','checkWhileCond',1,'p_checkWhileCond','lex.py',1224),
  ('for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA','for',11,'p_for','lex.py',1245),
  ('varFor -> ID','varFor',1,'p_varFor','lex.py',1272),
  ('initFor -> TO','initFor',1,'p_initFor','lex.py',1287),
  ('beforeDo -> DO','beforeDo',1,'p_beforeDo','lex.py',1303),
  ('exp -> texp expp','exp',2,'p_exp','lex.py',1329),
  ('expp -> OR exp','expp',2,'p_expp','lex.py',1333),
  ('expp -> empty','expp',1,'p_expp','lex.py',1334),
  ('texp -> gexp texpp','texp',2,'p_texp','lex.py',1338),
  ('texpp -> andCheck texp','texpp',2,'p_texpp','lex.py',1342),
  ('texpp -> empty','texpp',1,'p_texpp','lex.py',1343),
  ('andCheck -> AND','andCheck',1,'p_andCheck','lex.py',1346),
  ('gexp -> mexp gexpp','gexp',2,'p_gexp','lex.py',1352),
  ('gexpp -> addPO mexp','gexpp',2,'p_gexpp','lex.py',1375),
  ('gexpp -> empty','gexpp',1,'p_gexpp','lex.py',1376),
  ('addPO -> MAYQ','addPO',1,'p_addPO','lex.py',1379),
  ('addPO -> MENQ','addPO',1,'p_addPO','lex.py',1380),
  ('addPO -> MAYI','addPO',1,'p_addPO','lex.py',1381),
  ('addPO -> MENI','addPO',1,'p_addPO','lex.py',1382),
  ('addPO -> IGUAL IGUAL','addPO',2,'p_addPO','lex.py',1383),
  ('addPO -> DIF','addPO',1,'p_addPO','lex.py',1384),
  ('mexp -> termino mexpp','mexp',2,'p_mexp','lex.py',1390),
  ('mexpp -> operSR mexp','mexpp',2,'p_mexpp','lex.py',1416),
  ('mexpp -> empty','mexpp',1,'p_mexpp','lex.py',1417),
  ('operSR -> MENOS','operSR',1,'p_operSR','lex.py',1422),
  ('operSR -> MAS','operSR',1,'p_operSR','lex.py',1423),
  ('termino -> factor terminop','termino',2,'p_termino','lex.py',1431),
  ('terminop -> oper termino','terminop',2,'p_terminop','lex.py',1456),
  ('terminop -> empty','terminop',1,'p_terminop','lex.py',1457),
  ('oper -> DIV','oper',1,'p_oper','lex.py',1462),
  ('oper -> POR','oper',1,'p_oper','lex.py',1463),
  ('meteFondo -> APAR','meteFondo',1,'p_meteFondo','lex.py',1471),
  ('sacaFondo -> CPAR','sacaFondo',1,'p_sacaFondo','lex.py',1477),
  ('factor -> meteFondo exp sacaFondo','factor',3,'p_factor','lex.py',1483),
  ('factor -> ctes','factor',1,'p_factor','lex.py',1484),
  ('factorp -> APAR createEra exp valParams factorpp cparParams','factorp',6,'p_factorp','lex.py',1522),
  ('factorp -> ididx','factorp',1,'p_factorp','lex.py',1523),
  ('cparParams -> CPAR','cparParams',1,'p_cparParams','lex.py',1527),
  ('createEra -> <empty>','createEra',0,'p_createEra','lex.py',1548),
  ('valParams -> <empty>','valParams',0,'p_valParams','lex.py',1563),
  ('factorpp -> COMA exp valParams factorpp','factorpp',4,'p_factorpp','lex.py',1584),
  ('factorpp -> empty','factorpp',1,'p_factorpp','lex.py',1585),
  ('ctes -> CTEC','ctes',1,'p_ctes','lex.py',1594),
  ('ctes -> CTEI','ctes',1,'p_ctes','lex.py',1595),
  ('ctes -> CTEF','ctes',1,'p_ctes','lex.py',1596),
  ('ctes -> ID validateExistance factorp','ctes',3,'p_ctes','lex.py',1597),
  ('validateExistance -> <empty>','validateExistance',0,'p_validateExistance','lex.py',1606),
  ('empty -> <empty>','empty',0,'p_empty','lex.py',1618),
]
