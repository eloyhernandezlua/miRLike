
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACOR ALLA AND APAR BOOL CCOR CHAR CLLA COMA CPAR CTEC CTEF CTEI DIF DIV DO DOSPNTS ELSE FALSE FLOAT FOR FUNCTION ID IF IGUAL IGUALIGUAL INT MAIN MAS MAYI MAYQ MEDIA MENI MENOS MENQ NOT OR POR PROGRAM PTCOMA READ RETURN STR STRING THEN TO TRUE VARS VOID WHILE WRITEprogram : PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLAagregarTablaFunciones : ID PTCOMApoptomain : varss : VARS vars\n             | empty\n    vars : tipo DOSPNTS insertVar varsppp varspp vars\n            | empty\n    insertVar : IDvarsppp : initDim CTEI setDim\n               | empty\n    setDim : CCORinitDim : ACORvarspp : PTCOMA\n              | COMA insertVar varsppp varspp\n    funcs : FUNCTION funcsp insertFunc funcspp\n             | empty\n    insertFunc : IDfuncspp : APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcsupdateParamTable : endfunction : addsize : addinit : funcsp : VOID\n              | tipo\n    estatutos : asig estatutop\n                 | return estatutop\n                 | lectura estatutop\n                 | escritura estatutop\n                 | cond estatutop\n                 | while estatutop\n                 | for estatutop\n                 | exp estatutop\n                 | media estatutop\n    media : MEDIA APAR exp checkForNum mediap CPAR DOSPNTSmediap : COMA exp checkForNum mediap\n              | empty\n    checkForNum : estatutop : estatutos\n                 | empty\n    tipo : INT\n            | FLOAT\n            | CHAR\n    params : tipo DOSPNTS insertParams ididx paramsp\n              | empty\n    insertParams : ID\n    paramsp : COMA params\n               | empty\n    asig : varAs ididx igualAs asigpp PTCOMAvarAs : IDigualAs : IGUALasigp : exp asigppp\n             | empty\n    asigppp : COMA asigp\n               | empty\n    asigpp : expididx : corArr exp ver CCOR\n             | empty\n    corArr : ACORver : return : RETURN APAR exp CPAR PTCOMAlectura : READ APAR readId ididx lecturapp CPAR PTCOMAreadId : ID\n    lecturapp : COMA readId ididx lecturapp\n                 | empty\n    escritura : WRITE APAR escriturap escriturapp CPAR PTCOMAescriturap : pushEsc\n                  | exp\n    pushEsc : STRING\n               | CTEC\n    escriturapp : COMA escriturap escriturapp\n                   | empty\n    cond : IF APAR exp checkCond THEN ALLA estatutos CLLA condppcondpp : checkElse ALLA estatutos CLLA\n              | empty\n    checkElse : ELSE\n    checkCond : CPAR\n    while : saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLAsaveWhile : WHILE\n    checkWhileCond : CPAR\n    for : FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLAvarFor : ID\n    initFor : TO\n    beforeDo : DO\n    exp : texp exppexpp : OR exp\n            | empty\n    texp : gexp texpptexpp : andCheck texp\n             | empty\n     andCheck : AND\n    gexp : mexp gexppgexpp : addPO mexp\n             | empty\n    addPO : MAYQ\n             | MENQ\n             | MAYI\n             | MENI\n             | IGUALIGUAL\n             | DIF\n             | NOT\n    mexp : termino mexppmexpp : operSR mexp\n            | empty\n    operSR : MENOS\n              | MAS\n    termino : factor terminopterminop : oper termino\n                | empty\n    oper : DIV\n            | POR\n    meteFondo : APARsacaFondo : CPARfactor : meteFondo exp sacaFondo\n              | ctes\n    factorp : APAR createEra factorParams cparParams\n               | ididx\n    factorParams : exp valParams factorpp\n                    | empty\n    cparParams : CPARcreateEra : valParams : factorpp : COMA exp valParams factorpp\n                | empty\n    ctes : CTEC\n            | CTEI\n            | CTEF\n            | ID validateExistance factorp\n    validateExistance : empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,85,],[0,-1,]),'ID':([2,15,16,17,19,20,21,22,35,41,43,45,50,52,53,54,55,56,57,58,59,60,67,68,70,72,73,74,75,76,77,78,79,80,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,142,143,156,158,159,160,161,162,163,164,165,166,177,183,185,186,188,189,190,192,200,205,208,210,211,212,213,216,217,220,225,228,232,233,239,241,243,246,251,252,],[4,-40,-41,-42,25,-23,-24,27,-3,27,70,83,-111,70,70,70,70,70,70,70,70,70,107,-129,-128,-129,-129,-129,-129,138,-114,-124,-125,-126,138,-57,-58,138,147,138,138,138,-84,138,-86,138,-129,-87,138,-89,-90,-91,138,-93,-94,-95,-96,-97,-98,-99,-100,-101,138,-103,-104,-105,-106,138,-108,-109,-110,-128,138,-50,-85,-127,-120,-116,-88,-92,-102,-107,-113,-112,138,138,138,-22,-48,-56,-60,147,138,70,-65,70,70,138,-82,-115,-119,-61,-34,138,-129,-77,-72,-74,70,70,-80,-73,]),'VARS':([3,8,139,],[6,-2,6,]),'FUNCTION':([3,5,6,7,8,12,14,39,40,46,141,230,238,245,],[-129,10,-129,-5,-2,-4,-7,-129,-13,-6,-14,-21,-20,10,]),'MAIN':([3,5,6,7,8,9,11,12,14,29,39,40,46,141,230,238,245,249,],[-129,-129,-129,-5,-2,18,-16,-4,-7,-15,-129,-13,-6,-14,-21,-20,-129,-18,]),'PTCOMA':([4,26,27,31,33,44,47,48,49,68,72,73,74,75,77,78,79,80,81,84,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,171,172,174,189,194,206,216,217,],[8,-129,-8,40,-10,-19,-129,-9,-11,-129,-129,-129,-129,-129,-114,-124,-125,-126,139,40,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,188,-55,190,-56,208,220,-115,-119,]),'INT':([6,10,30,39,40,141,169,],[15,15,15,15,-13,-14,15,]),'FLOAT':([6,10,30,39,40,141,169,],[16,16,16,16,-13,-14,16,]),'CHAR':([6,10,30,39,40,141,169,],[17,17,17,17,-13,-14,17,]),'ALLA':([6,7,12,14,28,39,40,46,139,141,167,196,197,234,235,240,242,],[-129,-5,-4,-7,35,-129,-13,-6,-129,-14,186,210,211,243,-83,246,-75,]),'VOID':([10,],[20,]),'DOSPNTS':([13,15,16,17,37,214,],[22,-40,-41,-42,45,225,]),'APAR':([18,24,25,35,43,50,52,53,54,55,56,57,58,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,142,143,156,158,159,160,161,162,163,164,165,166,177,183,185,186,188,189,190,200,205,208,210,211,212,213,216,217,220,225,228,232,233,239,241,243,246,251,252,],[23,30,-17,-3,50,-111,50,50,50,50,50,50,50,50,50,101,102,103,104,105,-129,111,-128,-78,-129,-129,-129,-129,50,-114,-124,-125,-126,50,-57,-58,50,50,50,50,-84,50,-86,50,159,-87,50,-89,-90,-91,50,-93,-94,-95,-96,-97,-98,-99,-100,-101,50,-103,-104,-105,-106,50,-108,-109,-110,-128,50,-50,-85,-127,-120,-116,-88,-92,-102,-107,-113,-112,50,50,50,-22,-48,-56,-60,50,50,-65,50,50,50,-82,-115,-119,-61,-34,50,-129,-77,-72,-74,50,50,-80,-73,]),'CPAR':([23,30,36,38,68,72,73,74,75,77,78,79,80,82,83,99,108,110,112,113,115,117,119,127,129,132,134,137,138,140,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,168,169,170,175,176,178,184,185,187,189,191,193,195,199,201,202,203,204,207,209,215,216,217,218,221,226,227,229,231,236,237,244,248,],[28,-129,44,-44,-129,-129,-129,-129,-129,-114,-124,-125,-126,-129,-45,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,166,-128,-129,174,-129,-62,-129,-66,-67,-68,-69,180,182,-85,-37,-127,-120,-116,-88,-92,-102,-107,-113,-112,-43,-129,-47,-129,194,-71,-129,-129,-46,-56,206,-64,-129,214,-36,217,-121,-118,-129,-70,-37,-115,-119,-129,-129,-129,-117,-123,-63,-35,-121,-129,-122,]),'ACOR':([26,27,47,61,70,82,83,106,107,112,138,146,147,207,],[34,-8,34,100,-49,100,-45,100,-81,100,-128,100,-62,100,]),'COMA':([26,27,31,33,47,48,49,68,72,73,74,75,77,78,79,80,82,83,84,99,108,110,112,113,115,117,119,127,129,132,134,138,140,146,147,148,149,150,151,152,156,157,158,160,161,162,163,164,165,166,175,184,189,195,203,207,215,216,217,218,221,226,237,244,],[-129,-8,41,-10,-129,-9,-11,-129,-129,-129,-129,-129,-114,-124,-125,-126,-129,-45,41,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,169,-129,-62,177,-66,-67,-68,-69,-85,-37,-127,-116,-88,-92,-102,-107,-113,-112,192,200,-56,177,-121,-129,-37,-115,-119,228,192,200,-121,228,]),'CTEI':([32,34,35,43,50,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,76,77,78,79,80,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,142,143,156,158,159,160,161,162,163,164,165,166,177,183,185,186,188,189,190,200,205,208,210,211,212,213,216,217,220,225,228,232,233,239,241,243,246,251,252,],[42,-12,-3,79,-111,79,79,79,79,79,79,79,79,79,-129,-128,-129,-129,-129,-129,79,-114,-124,-125,-126,79,-57,-58,79,79,79,79,-84,79,-86,79,-129,-87,79,-89,-90,-91,79,-93,-94,-95,-96,-97,-98,-99,-100,-101,79,-103,-104,-105,-106,79,-108,-109,-110,-128,79,-50,-85,-127,-120,-116,-88,-92,-102,-107,-113,-112,79,79,79,-22,-48,-56,-60,79,79,-65,79,79,79,-82,-115,-119,-61,-34,79,-129,-77,-72,-74,79,79,-80,-73,]),'RETURN':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,62,62,62,62,62,62,62,62,62,62,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,62,-65,62,62,-115,-119,-61,-34,-129,-77,-72,-74,62,62,-80,-73,]),'READ':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,63,63,63,63,63,63,63,63,63,63,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,63,-65,63,63,-115,-119,-61,-34,-129,-77,-72,-74,63,63,-80,-73,]),'WRITE':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,64,64,64,64,64,64,64,64,64,64,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,64,-65,64,64,-115,-119,-61,-34,-129,-77,-72,-74,64,64,-80,-73,]),'IF':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,65,65,65,65,65,65,65,65,65,65,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,65,-65,65,65,-115,-119,-61,-34,-129,-77,-72,-74,65,65,-80,-73,]),'FOR':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,67,67,67,67,67,67,67,67,67,67,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,67,-65,67,67,-115,-119,-61,-34,-129,-77,-72,-74,67,67,-80,-73,]),'MEDIA':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,69,69,69,69,69,69,69,69,69,69,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,69,-65,69,69,-115,-119,-61,-34,-129,-77,-72,-74,69,69,-80,-73,]),'WHILE':([35,43,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,186,188,189,190,205,208,210,211,216,217,220,225,232,233,239,241,243,246,251,252,],[-3,71,71,71,71,71,71,71,71,71,71,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-22,-48,-56,-60,71,-65,71,71,-115,-119,-61,-34,-129,-77,-72,-74,71,71,-80,-73,]),'CTEC':([35,43,50,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,76,77,78,79,80,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,142,143,156,158,159,160,161,162,163,164,165,166,177,183,185,186,188,189,190,200,205,208,210,211,212,213,216,217,220,225,228,232,233,239,241,243,246,251,252,],[-3,78,-111,78,78,78,78,78,78,78,78,78,-129,-128,-129,-129,-129,-129,78,-114,-124,-125,-126,78,-57,-58,78,152,78,78,-84,78,-86,78,-129,-87,78,-89,-90,-91,78,-93,-94,-95,-96,-97,-98,-99,-100,-101,78,-103,-104,-105,-106,78,-108,-109,-110,-128,78,-50,-85,-127,-120,-116,-88,-92,-102,-107,-113,-112,152,78,78,-22,-48,-56,-60,78,78,-65,78,78,78,-82,-115,-119,-61,-34,78,-129,-77,-72,-74,78,78,-80,-73,]),'CTEF':([35,43,50,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,76,77,78,79,80,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,142,143,156,158,159,160,161,162,163,164,165,166,177,183,185,186,188,189,190,200,205,208,210,211,212,213,216,217,220,225,228,232,233,239,241,243,246,251,252,],[-3,80,-111,80,80,80,80,80,80,80,80,80,-129,-128,-129,-129,-129,-129,80,-114,-124,-125,-126,80,-57,-58,80,80,80,80,-84,80,-86,80,-129,-87,80,-89,-90,-91,80,-93,-94,-95,-96,-97,-98,-99,-100,-101,80,-103,-104,-105,-106,80,-108,-109,-110,-128,80,-50,-85,-127,-120,-116,-88,-92,-102,-107,-113,-112,80,80,80,-22,-48,-56,-60,80,80,-65,80,80,80,-82,-115,-119,-61,-34,80,-129,-77,-72,-74,80,80,-80,-73,]),'CCOR':([42,68,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,144,156,158,160,161,162,163,164,165,166,173,189,216,217,],[49,-129,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-59,-85,-127,-116,-88,-92,-102,-107,-113,-112,189,-56,-115,-119,]),'CLLA':([51,52,53,54,55,56,57,58,59,60,68,70,72,73,74,75,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,188,189,190,208,216,217,219,220,222,223,225,232,233,239,241,247,250,251,252,],[85,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-128,-129,-129,-129,-129,-114,-124,-125,-126,-25,-38,-39,-26,-27,-28,-29,-30,-31,-32,-33,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-48,-56,-60,-65,-115,-119,230,-61,232,233,-34,-129,-77,-72,-74,251,252,-80,-73,]),'IGUAL':([61,70,97,99,106,107,155,189,],[-129,-49,143,-57,-129,-81,183,-56,]),'OR':([68,70,72,73,74,75,77,78,79,80,99,112,113,115,117,119,127,129,132,134,138,152,158,160,161,162,163,164,165,166,189,216,217,],[109,-128,-129,-129,-129,-129,-114,-124,-125,-126,-57,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-124,-127,-116,-88,-92,-102,-107,-113,-112,-56,-115,-119,]),'TO':([68,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,189,198,216,217,],[-129,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,-56,213,-115,-119,]),'DO':([68,72,73,74,75,77,78,79,80,99,108,110,112,113,115,117,119,127,129,132,134,138,156,158,160,161,162,163,164,165,166,181,182,189,216,217,224,],[-129,-129,-129,-129,-129,-114,-124,-125,-126,-57,-84,-86,-129,-87,-89,-91,-93,-101,-103,-106,-108,-128,-85,-127,-116,-88,-92,-102,-107,-113,-112,197,-79,-56,-115,-119,235,]),'DIV':([70,75,77,78,79,80,99,112,138,152,158,160,165,166,189,216,217,],[-128,135,-114,-124,-125,-126,-57,-129,-128,-124,-127,-116,-113,-112,-56,-115,-119,]),'POR':([70,75,77,78,79,80,99,112,138,152,158,160,165,166,189,216,217,],[-128,136,-114,-124,-125,-126,-57,-129,-128,-124,-127,-116,-113,-112,-56,-115,-119,]),'MENOS':([70,74,75,77,78,79,80,99,112,132,134,138,152,158,160,164,165,166,189,216,217,],[-128,130,-129,-114,-124,-125,-126,-57,-129,-106,-108,-128,-124,-127,-116,-107,-113,-112,-56,-115,-119,]),'MAS':([70,74,75,77,78,79,80,99,112,132,134,138,152,158,160,164,165,166,189,216,217,],[-128,131,-129,-114,-124,-125,-126,-57,-129,-106,-108,-128,-124,-127,-116,-107,-113,-112,-56,-115,-119,]),'MAYQ':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,120,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'MENQ':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,121,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'MAYI':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,122,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'MENI':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,123,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'IGUALIGUAL':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,124,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'DIF':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,125,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'NOT':([70,73,74,75,77,78,79,80,99,112,127,129,132,134,138,152,158,160,163,164,165,166,189,216,217,],[-128,126,-129,-129,-114,-124,-125,-126,-57,-129,-101,-103,-106,-108,-128,-124,-127,-116,-102,-107,-113,-112,-56,-115,-119,]),'AND':([70,72,73,74,75,77,78,79,80,99,112,117,119,127,129,132,134,138,152,158,160,162,163,164,165,166,189,216,217,],[-128,116,-129,-129,-129,-114,-124,-125,-126,-57,-129,-91,-93,-101,-103,-106,-108,-128,-124,-127,-116,-92,-102,-107,-113,-112,-56,-115,-119,]),'STRING':([103,177,],[151,151,]),'THEN':([179,180,],[196,-76,]),'ELSE':([232,],[242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'agregarTablaFunciones':([2,],[3,]),'varss':([3,139,],[5,167,]),'empty':([3,5,6,26,30,39,47,52,53,54,55,56,57,58,59,60,61,68,72,73,74,75,82,106,112,139,140,146,148,169,175,184,185,195,207,218,221,226,232,244,245,],[7,11,14,33,38,14,33,88,88,88,88,88,88,88,88,88,99,110,115,119,129,134,99,99,99,7,170,99,178,38,193,201,204,178,99,229,193,201,241,229,11,]),'funcs':([5,245,],[9,249,]),'vars':([6,39,],[12,46,]),'tipo':([6,10,30,39,169,],[13,21,37,13,37,]),'funcsp':([10,],[19,]),'insertFunc':([19,],[24,]),'insertVar':([22,41,],[26,47,]),'funcspp':([24,],[29,]),'varsppp':([26,47,],[31,84,]),'initDim':([26,47,],[32,32,]),'params':([30,169,],[36,187,]),'varspp':([31,84,],[39,141,]),'poptomain':([35,],[43,]),'setDim':([42,],[48,]),'estatutos':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[51,87,87,87,87,87,87,87,87,87,219,222,223,247,250,]),'asig':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'return':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'lectura':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'escritura':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cond':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'while':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'for':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'exp':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,142,177,183,185,200,205,210,211,212,228,243,246,],[59,59,59,59,59,59,59,59,59,59,137,144,145,150,153,154,156,157,172,150,198,203,215,59,59,59,224,237,59,59,]),'media':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'varAs':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'saveWhile':([43,52,53,54,55,56,57,58,59,60,205,210,211,243,246,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'texp':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,142,177,183,185,200,205,210,211,212,228,243,246,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,161,68,68,68,68,68,68,68,68,68,68,68,68,]),'gexp':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,142,177,183,185,200,205,210,211,212,228,243,246,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'mexp':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,118,128,142,177,183,185,200,205,210,211,212,228,243,246,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,162,163,73,73,73,73,73,73,73,73,73,73,73,73,]),'termino':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,118,128,133,142,177,183,185,200,205,210,211,212,228,243,246,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,164,74,74,74,74,74,74,74,74,74,74,74,74,]),'factor':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,118,128,133,142,177,183,185,200,205,210,211,212,228,243,246,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'meteFondo':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,118,128,133,142,177,183,185,200,205,210,211,212,228,243,246,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'ctes':([43,52,53,54,55,56,57,58,59,60,76,98,101,103,104,105,109,111,114,118,128,133,142,177,183,185,200,205,210,211,212,228,243,246,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'updateParamTable':([44,],[81,]),'insertParams':([45,],[82,]),'estatutop':([52,53,54,55,56,57,58,59,60,],[86,89,90,91,92,93,94,95,96,]),'ididx':([61,82,106,112,146,207,],[97,140,155,160,175,221,]),'corArr':([61,82,106,112,146,207,],[98,98,98,98,98,98,]),'varFor':([67,],[106,]),'expp':([68,],[108,]),'validateExistance':([70,138,],[112,112,]),'texpp':([72,],[113,]),'andCheck':([72,],[114,]),'gexpp':([73,],[117,]),'addPO':([73,],[118,]),'mexpp':([74,],[127,]),'operSR':([74,],[128,]),'terminop':([75,],[132,]),'oper':([75,],[133,]),'igualAs':([97,],[142,]),'readId':([102,192,],[146,207,]),'escriturap':([103,177,],[148,195,]),'pushEsc':([103,177,],[149,149,]),'factorp':([112,],[158,]),'sacaFondo':([137,],[165,]),'paramsp':([140,],[168,]),'asigpp':([142,],[171,]),'ver':([144,],[173,]),'escriturapp':([148,195,],[176,209,]),'checkCond':([153,],[179,]),'checkWhileCond':([154,],[181,]),'checkForNum':([157,215,],[184,226,]),'createEra':([159,],[185,]),'lecturapp':([175,221,],[191,231,]),'mediap':([184,226,],[199,236,]),'factorParams':([185,],[202,]),'addinit':([186,],[205,]),'initFor':([198,],[212,]),'cparParams':([202,],[216,]),'valParams':([203,237,],[218,244,]),'factorpp':([218,244,],[227,248,]),'beforeDo':([224,],[234,]),'addsize':([230,],[238,]),'condpp':([232,],[239,]),'checkElse':([232,],[240,]),'endfunction':([238,],[245,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM agregarTablaFunciones varss funcs MAIN APAR CPAR ALLA poptomain estatutos CLLA','program',11,'p_program','lex.py',719),
  ('agregarTablaFunciones -> ID PTCOMA','agregarTablaFunciones',2,'p_agregarTablaFunciones','lex.py',744),
  ('poptomain -> <empty>','poptomain',0,'p_poptomain','lex.py',762),
  ('varss -> VARS vars','varss',2,'p_varss','lex.py',776),
  ('varss -> empty','varss',1,'p_varss','lex.py',777),
  ('vars -> tipo DOSPNTS insertVar varsppp varspp vars','vars',6,'p_vars','lex.py',782),
  ('vars -> empty','vars',1,'p_vars','lex.py',783),
  ('insertVar -> ID','insertVar',1,'p_insertVar','lex.py',787),
  ('varsppp -> initDim CTEI setDim','varsppp',3,'p_varsppp','lex.py',797),
  ('varsppp -> empty','varsppp',1,'p_varsppp','lex.py',798),
  ('setDim -> CCOR','setDim',1,'p_setDim','lex.py',802),
  ('initDim -> ACOR','initDim',1,'p_initDim','lex.py',818),
  ('varspp -> PTCOMA','varspp',1,'p_varspp','lex.py',834),
  ('varspp -> COMA insertVar varsppp varspp','varspp',4,'p_varspp','lex.py',835),
  ('funcs -> FUNCTION funcsp insertFunc funcspp','funcs',4,'p_funcs','lex.py',842),
  ('funcs -> empty','funcs',1,'p_funcs','lex.py',843),
  ('insertFunc -> ID','insertFunc',1,'p_insertFunc','lex.py',847),
  ('funcspp -> APAR params CPAR updateParamTable PTCOMA varss ALLA addinit estatutos CLLA addsize endfunction funcs','funcspp',13,'p_funcspp','lex.py',863),
  ('updateParamTable -> <empty>','updateParamTable',0,'p_updateParamTable','lex.py',869),
  ('endfunction -> <empty>','endfunction',0,'p_endfunciton','lex.py',876),
  ('addsize -> <empty>','addsize',0,'p_addsize','lex.py',890),
  ('addinit -> <empty>','addinit',0,'p_addinit','lex.py',914),
  ('funcsp -> VOID','funcsp',1,'p_funcsp','lex.py',927),
  ('funcsp -> tipo','funcsp',1,'p_funcsp','lex.py',928),
  ('estatutos -> asig estatutop','estatutos',2,'p_estatutos','lex.py',941),
  ('estatutos -> return estatutop','estatutos',2,'p_estatutos','lex.py',942),
  ('estatutos -> lectura estatutop','estatutos',2,'p_estatutos','lex.py',943),
  ('estatutos -> escritura estatutop','estatutos',2,'p_estatutos','lex.py',944),
  ('estatutos -> cond estatutop','estatutos',2,'p_estatutos','lex.py',945),
  ('estatutos -> while estatutop','estatutos',2,'p_estatutos','lex.py',946),
  ('estatutos -> for estatutop','estatutos',2,'p_estatutos','lex.py',947),
  ('estatutos -> exp estatutop','estatutos',2,'p_estatutos','lex.py',948),
  ('estatutos -> media estatutop','estatutos',2,'p_estatutos','lex.py',949),
  ('media -> MEDIA APAR exp checkForNum mediap CPAR DOSPNTS','media',7,'p_media','lex.py',955),
  ('mediap -> COMA exp checkForNum mediap','mediap',4,'p_mediap','lex.py',960),
  ('mediap -> empty','mediap',1,'p_mediap','lex.py',961),
  ('checkForNum -> <empty>','checkForNum',0,'p_checkForNum','lex.py',965),
  ('estatutop -> estatutos','estatutop',1,'p_estatutop','lex.py',974),
  ('estatutop -> empty','estatutop',1,'p_estatutop','lex.py',975),
  ('tipo -> INT','tipo',1,'p_tipo','lex.py',982),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lex.py',983),
  ('tipo -> CHAR','tipo',1,'p_tipo','lex.py',984),
  ('params -> tipo DOSPNTS insertParams ididx paramsp','params',5,'p_params','lex.py',995),
  ('params -> empty','params',1,'p_params','lex.py',996),
  ('insertParams -> ID','insertParams',1,'p_insertParams','lex.py',1000),
  ('paramsp -> COMA params','paramsp',2,'p_paramsp','lex.py',1017),
  ('paramsp -> empty','paramsp',1,'p_paramsp','lex.py',1018),
  ('asig -> varAs ididx igualAs asigpp PTCOMA','asig',5,'p_asig','lex.py',1025),
  ('varAs -> ID','varAs',1,'p_varAs','lex.py',1040),
  ('igualAs -> IGUAL','igualAs',1,'p_igualAs','lex.py',1049),
  ('asigp -> exp asigppp','asigp',2,'p_asigp','lex.py',1065),
  ('asigp -> empty','asigp',1,'p_asigp','lex.py',1066),
  ('asigppp -> COMA asigp','asigppp',2,'p_asigppp','lex.py',1074),
  ('asigppp -> empty','asigppp',1,'p_asigppp','lex.py',1075),
  ('asigpp -> exp','asigpp',1,'p_asigpp','lex.py',1081),
  ('ididx -> corArr exp ver CCOR','ididx',4,'p_ididx','lex.py',1088),
  ('ididx -> empty','ididx',1,'p_ididx','lex.py',1089),
  ('corArr -> ACOR','corArr',1,'p_corArr','lex.py',1122),
  ('ver -> <empty>','ver',0,'p_ver','lex.py',1137),
  ('return -> RETURN APAR exp CPAR PTCOMA','return',5,'p_return','lex.py',1179),
  ('lectura -> READ APAR readId ididx lecturapp CPAR PTCOMA','lectura',7,'p_lectura','lex.py',1194),
  ('readId -> ID','readId',1,'p_readId','lex.py',1198),
  ('lecturapp -> COMA readId ididx lecturapp','lecturapp',4,'p_lecturapp','lex.py',1206),
  ('lecturapp -> empty','lecturapp',1,'p_lecturapp','lex.py',1207),
  ('escritura -> WRITE APAR escriturap escriturapp CPAR PTCOMA','escritura',6,'p_escritura','lex.py',1214),
  ('escriturap -> pushEsc','escriturap',1,'p_escriturap','lex.py',1219),
  ('escriturap -> exp','escriturap',1,'p_escriturap','lex.py',1220),
  ('pushEsc -> STRING','pushEsc',1,'p_pushEsc','lex.py',1231),
  ('pushEsc -> CTEC','pushEsc',1,'p_pushEsc','lex.py',1232),
  ('escriturapp -> COMA escriturap escriturapp','escriturapp',3,'p_escriturapp','lex.py',1240),
  ('escriturapp -> empty','escriturapp',1,'p_escriturapp','lex.py',1241),
  ('cond -> IF APAR exp checkCond THEN ALLA estatutos CLLA condpp','cond',9,'p_cond','lex.py',1247),
  ('condpp -> checkElse ALLA estatutos CLLA','condpp',4,'p_condpp','lex.py',1260),
  ('condpp -> empty','condpp',1,'p_condpp','lex.py',1261),
  ('checkElse -> ELSE','checkElse',1,'p_checkElse','lex.py',1267),
  ('checkCond -> CPAR','checkCond',1,'p_checkCond','lex.py',1283),
  ('while -> saveWhile APAR exp checkWhileCond DO ALLA estatutos CLLA','while',8,'p_while','lex.py',1301),
  ('saveWhile -> WHILE','saveWhile',1,'p_saveWhile','lex.py',1316),
  ('checkWhileCond -> CPAR','checkWhileCond',1,'p_checkWhileCond','lex.py',1323),
  ('for -> FOR varFor ididx IGUAL exp initFor exp beforeDo ALLA estatutos CLLA','for',11,'p_for','lex.py',1344),
  ('varFor -> ID','varFor',1,'p_varFor','lex.py',1371),
  ('initFor -> TO','initFor',1,'p_initFor','lex.py',1386),
  ('beforeDo -> DO','beforeDo',1,'p_beforeDo','lex.py',1402),
  ('exp -> texp expp','exp',2,'p_exp','lex.py',1428),
  ('expp -> OR exp','expp',2,'p_expp','lex.py',1432),
  ('expp -> empty','expp',1,'p_expp','lex.py',1433),
  ('texp -> gexp texpp','texp',2,'p_texp','lex.py',1437),
  ('texpp -> andCheck texp','texpp',2,'p_texpp','lex.py',1441),
  ('texpp -> empty','texpp',1,'p_texpp','lex.py',1442),
  ('andCheck -> AND','andCheck',1,'p_andCheck','lex.py',1445),
  ('gexp -> mexp gexpp','gexp',2,'p_gexp','lex.py',1451),
  ('gexpp -> addPO mexp','gexpp',2,'p_gexpp','lex.py',1474),
  ('gexpp -> empty','gexpp',1,'p_gexpp','lex.py',1475),
  ('addPO -> MAYQ','addPO',1,'p_addPO','lex.py',1478),
  ('addPO -> MENQ','addPO',1,'p_addPO','lex.py',1479),
  ('addPO -> MAYI','addPO',1,'p_addPO','lex.py',1480),
  ('addPO -> MENI','addPO',1,'p_addPO','lex.py',1481),
  ('addPO -> IGUALIGUAL','addPO',1,'p_addPO','lex.py',1482),
  ('addPO -> DIF','addPO',1,'p_addPO','lex.py',1483),
  ('addPO -> NOT','addPO',1,'p_addPO','lex.py',1484),
  ('mexp -> termino mexpp','mexp',2,'p_mexp','lex.py',1490),
  ('mexpp -> operSR mexp','mexpp',2,'p_mexpp','lex.py',1516),
  ('mexpp -> empty','mexpp',1,'p_mexpp','lex.py',1517),
  ('operSR -> MENOS','operSR',1,'p_operSR','lex.py',1522),
  ('operSR -> MAS','operSR',1,'p_operSR','lex.py',1523),
  ('termino -> factor terminop','termino',2,'p_termino','lex.py',1531),
  ('terminop -> oper termino','terminop',2,'p_terminop','lex.py',1556),
  ('terminop -> empty','terminop',1,'p_terminop','lex.py',1557),
  ('oper -> DIV','oper',1,'p_oper','lex.py',1562),
  ('oper -> POR','oper',1,'p_oper','lex.py',1563),
  ('meteFondo -> APAR','meteFondo',1,'p_meteFondo','lex.py',1571),
  ('sacaFondo -> CPAR','sacaFondo',1,'p_sacaFondo','lex.py',1577),
  ('factor -> meteFondo exp sacaFondo','factor',3,'p_factor','lex.py',1583),
  ('factor -> ctes','factor',1,'p_factor','lex.py',1584),
  ('factorp -> APAR createEra factorParams cparParams','factorp',4,'p_factorp','lex.py',1624),
  ('factorp -> ididx','factorp',1,'p_factorp','lex.py',1625),
  ('factorParams -> exp valParams factorpp','factorParams',3,'p_factorParams','lex.py',1629),
  ('factorParams -> empty','factorParams',1,'p_factorParams','lex.py',1630),
  ('cparParams -> CPAR','cparParams',1,'p_cparParams','lex.py',1633),
  ('createEra -> <empty>','createEra',0,'p_createEra','lex.py',1658),
  ('valParams -> <empty>','valParams',0,'p_valParams','lex.py',1680),
  ('factorpp -> COMA exp valParams factorpp','factorpp',4,'p_factorpp','lex.py',1717),
  ('factorpp -> empty','factorpp',1,'p_factorpp','lex.py',1718),
  ('ctes -> CTEC','ctes',1,'p_ctes','lex.py',1727),
  ('ctes -> CTEI','ctes',1,'p_ctes','lex.py',1728),
  ('ctes -> CTEF','ctes',1,'p_ctes','lex.py',1729),
  ('ctes -> ID validateExistance factorp','ctes',3,'p_ctes','lex.py',1730),
  ('validateExistance -> <empty>','validateExistance',0,'p_validateExistance','lex.py',1739),
  ('empty -> <empty>','empty',0,'p_empty','lex.py',1751),
]
